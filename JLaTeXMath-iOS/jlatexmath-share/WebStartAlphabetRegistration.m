//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/WebStartAlphabetRegistration.java
//


#include "AlphabetRegistration.h"
#include "AlphabetRegistrationException.h"
#include "CyrillicRegistration.h"
#include "DefaultTeXFont.h"
#include "GreekRegistration.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "WebStartAlphabetRegistration.h"

@interface OrgScilabForgeJlatexmathWebStartAlphabetRegistration () {
 @public
  IOSObjectArray *blocks_;
  id<OrgScilabForgeJlatexmathAlphabetRegistration> reg_;
}

- (instancetype)initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray:(IOSObjectArray *)blocks;

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathWebStartAlphabetRegistration, blocks_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathWebStartAlphabetRegistration, reg_, id<OrgScilabForgeJlatexmathAlphabetRegistration>)

__attribute__((unused)) static void OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(OrgScilabForgeJlatexmathWebStartAlphabetRegistration *self, IOSObjectArray *blocks);

__attribute__((unused)) static OrgScilabForgeJlatexmathWebStartAlphabetRegistration *new_OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(IOSObjectArray *blocks) NS_RETURNS_RETAINED;

@implementation OrgScilabForgeJlatexmathWebStartAlphabetRegistration

- (instancetype)initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray:(IOSObjectArray *)blocks {
  OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(self, blocks);
  return self;
}

+ (void)register__WithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray:(IOSObjectArray *)blocks {
  OrgScilabForgeJlatexmathWebStartAlphabetRegistration_register__WithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(blocks);
}

- (IOSObjectArray *)getUnicodeBlock {
  return blocks_;
}

- (id)getPackage {
  if (blocks_ == OrgScilabForgeJlatexmathAlphabetRegistration_get_JLM_GREEK_()) {
    reg_ = new_OrgScilabForgeJlatexmathGreekGreekRegistration_init();
  }
  else if (blocks_ == OrgScilabForgeJlatexmathAlphabetRegistration_get_JLM_CYRILLIC_()) {
    reg_ = new_OrgScilabForgeJlatexmathCyrillicCyrillicRegistration_init();
  }
  else {
    @throw new_OrgScilabForgeJlatexmathExceptionAlphabetRegistrationException_initWithNSString_(@"Invalid Unicode Block");
  }
  return reg_;
}

- (NSString *)getTeXFontFileName {
  return [((id<OrgScilabForgeJlatexmathAlphabetRegistration>) nil_chk(reg_)) getTeXFontFileName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray:", "WebStartAlphabetRegistration", NULL, 0x2, NULL, NULL },
    { "register__WithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray:", "register", "V", 0x9, NULL, NULL },
    { "getUnicodeBlock", NULL, "[Lorg.scilab.forge.jlatexmath.character.Character$UnicodeBlock;", 0x1, NULL, NULL },
    { "getPackage", NULL, "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.AlphabetRegistrationException;", NULL },
    { "getTeXFontFileName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "blocks_", NULL, 0x2, "[Lorg.scilab.forge.jlatexmath.character.Character$UnicodeBlock;", NULL, NULL,  },
    { "reg_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.AlphabetRegistration;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathWebStartAlphabetRegistration = { 2, "WebStartAlphabetRegistration", "org.scilab.forge.jlatexmath", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathWebStartAlphabetRegistration;
}

@end

void OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(OrgScilabForgeJlatexmathWebStartAlphabetRegistration *self, IOSObjectArray *blocks) {
  (void) NSObject_init(self);
  self->blocks_ = blocks;
}

OrgScilabForgeJlatexmathWebStartAlphabetRegistration *new_OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(IOSObjectArray *blocks) {
  OrgScilabForgeJlatexmathWebStartAlphabetRegistration *self = [OrgScilabForgeJlatexmathWebStartAlphabetRegistration alloc];
  OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(self, blocks);
  return self;
}

void OrgScilabForgeJlatexmathWebStartAlphabetRegistration_register__WithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(IOSObjectArray *blocks) {
  OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initialize();
  OrgScilabForgeJlatexmathDefaultTeXFont_registerAlphabetWithOrgScilabForgeJlatexmathAlphabetRegistration_(new_OrgScilabForgeJlatexmathWebStartAlphabetRegistration_initWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlockArray_(blocks));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathWebStartAlphabetRegistration)
