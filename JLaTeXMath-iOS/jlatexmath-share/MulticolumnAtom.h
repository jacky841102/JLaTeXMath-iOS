//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/MulticolumnAtom.java
//

#ifndef _OrgScilabForgeJlatexmathMulticolumnAtom_H_
#define _OrgScilabForgeJlatexmathMulticolumnAtom_H_

#include "Atom.h"
#include "J2ObjC_header.h"

@class OrgScilabForgeJlatexmathBox;
@class OrgScilabForgeJlatexmathTeXEnvironment;

@interface OrgScilabForgeJlatexmathMulticolumnAtom : OrgScilabForgeJlatexmathAtom {
 @public
  jint n_;
  jint align_;
  jfloat w_;
  OrgScilabForgeJlatexmathAtom *cols_;
  jint beforeVlines_;
  jint afterVlines_;
  jint row_, col_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)n
               withNSString:(NSString *)align
withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)cols;

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (jint)getCol;

- (jint)getRow;

- (jint)getSkipped;

- (jboolean)hasRightVline;

- (void)setRowColumnWithInt:(jint)i
                    withInt:(jint)j;

- (void)setWidthWithFloat:(jfloat)w;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathMulticolumnAtom)

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathMulticolumnAtom, cols_, OrgScilabForgeJlatexmathAtom *)

FOUNDATION_EXPORT void OrgScilabForgeJlatexmathMulticolumnAtom_initWithInt_withNSString_withOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathMulticolumnAtom *self, jint n, NSString *align, OrgScilabForgeJlatexmathAtom *cols);

FOUNDATION_EXPORT OrgScilabForgeJlatexmathMulticolumnAtom *new_OrgScilabForgeJlatexmathMulticolumnAtom_initWithInt_withNSString_withOrgScilabForgeJlatexmathAtom_(jint n, NSString *align, OrgScilabForgeJlatexmathAtom *cols) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathMulticolumnAtom)

#endif // _OrgScilabForgeJlatexmathMulticolumnAtom_H_
