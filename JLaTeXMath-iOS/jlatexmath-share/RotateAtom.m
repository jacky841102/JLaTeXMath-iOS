//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/RotateAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ParseOption.h"
#include "RotateAtom.h"
#include "RotateBox.h"
#include "SpaceAtom.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "java/lang/Double.h"
#include "java/util/Map.h"

@interface OrgScilabForgeJlatexmathRotateAtom () {
 @public
  OrgScilabForgeJlatexmathAtom *base_;
  jdouble angle_;
  jint option_;
  jint xunit_, yunit_;
  jfloat x_, y_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathRotateAtom, base_, OrgScilabForgeJlatexmathAtom *)

@implementation OrgScilabForgeJlatexmathRotateAtom

- (instancetype)initWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)base
                                        withNSString:(NSString *)angle
                                        withNSString:(NSString *)option {
  OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withNSString_withNSString_(self, base, angle, option);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)base
                                          withDouble:(jdouble)angle
                                        withNSString:(NSString *)option {
  OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withDouble_withNSString_(self, base, angle, option);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  if (option_ != -1) {
    return new_OrgScilabForgeJlatexmathRotateBox_initWithOrgScilabForgeJlatexmathBox_withDouble_withInt_([((OrgScilabForgeJlatexmathAtom *) nil_chk(base_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env], angle_, option_);
  }
  else {
    return new_OrgScilabForgeJlatexmathRotateBox_initWithOrgScilabForgeJlatexmathBox_withDouble_withFloat_withFloat_([((OrgScilabForgeJlatexmathAtom *) nil_chk(base_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env], angle_, x_ * OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_(xunit_, env), y_ * OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_(yunit_, env));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathAtom:withNSString:withNSString:", "RotateAtom", NULL, 0x1, NULL, NULL },
    { "initWithOrgScilabForgeJlatexmathAtom:withDouble:withNSString:", "RotateAtom", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "base_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "angle_", NULL, 0x2, "D", NULL, NULL,  },
    { "option_", NULL, 0x2, "I", NULL, NULL,  },
    { "xunit_", NULL, 0x2, "I", NULL, NULL,  },
    { "yunit_", NULL, 0x2, "I", NULL, NULL,  },
    { "x_", NULL, 0x2, "F", NULL, NULL,  },
    { "y_", NULL, 0x2, "F", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathRotateAtom = { 2, "RotateAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 3, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathRotateAtom;
}

@end

void OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withNSString_withNSString_(OrgScilabForgeJlatexmathRotateAtom *self, OrgScilabForgeJlatexmathAtom *base, NSString *angle, NSString *option) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->option_ = -1;
  self->type_ = ((OrgScilabForgeJlatexmathAtom *) nil_chk(base))->type_;
  self->base_ = base;
  self->angle_ = JavaLangDouble_parseDoubleWithNSString_(angle);
  self->option_ = OrgScilabForgeJlatexmathRotateBox_getOriginWithNSString_(option);
}

OrgScilabForgeJlatexmathRotateAtom *new_OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withNSString_withNSString_(OrgScilabForgeJlatexmathAtom *base, NSString *angle, NSString *option) {
  OrgScilabForgeJlatexmathRotateAtom *self = [OrgScilabForgeJlatexmathRotateAtom alloc];
  OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withNSString_withNSString_(self, base, angle, option);
  return self;
}

void OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withDouble_withNSString_(OrgScilabForgeJlatexmathRotateAtom *self, OrgScilabForgeJlatexmathAtom *base, jdouble angle, NSString *option) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->option_ = -1;
  self->type_ = ((OrgScilabForgeJlatexmathAtom *) nil_chk(base))->type_;
  self->base_ = base;
  self->angle_ = angle;
  id<JavaUtilMap> map = OrgScilabForgeJlatexmathParseOption_parseMapWithNSString_(option);
  if ([((id<JavaUtilMap>) nil_chk(map)) containsKeyWithId:@"origin"]) {
    self->option_ = OrgScilabForgeJlatexmathRotateBox_getOriginWithNSString_([map getWithId:@"origin"]);
  }
  else {
    if ([map containsKeyWithId:@"x"]) {
      IOSFloatArray *xinfo = OrgScilabForgeJlatexmathSpaceAtom_getLengthWithNSString_([map getWithId:@"x"]);
      self->xunit_ = J2ObjCFpToInt(IOSFloatArray_Get(nil_chk(xinfo), 0));
      self->x_ = IOSFloatArray_Get(xinfo, 1);
    }
    else {
      self->xunit_ = OrgScilabForgeJlatexmathTeXConstants_UNIT_POINT;
      self->x_ = 0;
    }
    if ([map containsKeyWithId:@"y"]) {
      IOSFloatArray *yinfo = OrgScilabForgeJlatexmathSpaceAtom_getLengthWithNSString_([map getWithId:@"y"]);
      self->yunit_ = J2ObjCFpToInt(IOSFloatArray_Get(nil_chk(yinfo), 0));
      self->y_ = IOSFloatArray_Get(yinfo, 1);
    }
    else {
      self->yunit_ = OrgScilabForgeJlatexmathTeXConstants_UNIT_POINT;
      self->y_ = 0;
    }
  }
}

OrgScilabForgeJlatexmathRotateAtom *new_OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withDouble_withNSString_(OrgScilabForgeJlatexmathAtom *base, jdouble angle, NSString *option) {
  OrgScilabForgeJlatexmathRotateAtom *self = [OrgScilabForgeJlatexmathRotateAtom alloc];
  OrgScilabForgeJlatexmathRotateAtom_initWithOrgScilabForgeJlatexmathAtom_withDouble_withNSString_(self, base, angle, option);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathRotateAtom)
