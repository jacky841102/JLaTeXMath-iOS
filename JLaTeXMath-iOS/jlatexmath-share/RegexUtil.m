//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/regex/RegexUtil.java
//


#include "J2ObjC_source.h"
#include "RegexUtil.h"
#include "java/lang/StringBuilder.h"

@implementation OrgScilabForgeJlatexmathRegexRegexUtil

+ (NSString *)quoteReplacementWithNSString:(NSString *)s {
  return OrgScilabForgeJlatexmathRegexRegexUtil_quoteReplacementWithNSString_(s);
}

- (instancetype)init {
  OrgScilabForgeJlatexmathRegexRegexUtil_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "quoteReplacementWithNSString:", "quoteReplacement", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathRegexRegexUtil = { 2, "RegexUtil", "org.scilab.forge.jlatexmath.regex", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathRegexRegexUtil;
}

@end

NSString *OrgScilabForgeJlatexmathRegexRegexUtil_quoteReplacementWithNSString_(NSString *s) {
  OrgScilabForgeJlatexmathRegexRegexUtil_initialize();
  if (([((NSString *) nil_chk(s)) indexOf:'\\'] == -1) && ([s indexOf:'$'] == -1)) return s;
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (jint i = 0; i < ((jint) [s length]); i++) {
    jchar c = [s charAtWithInt:i];
    if (c == '\\' || c == '$') {
      (void) [sb appendWithChar:'\\'];
    }
    (void) [sb appendWithChar:c];
  }
  return [sb description];
}

void OrgScilabForgeJlatexmathRegexRegexUtil_init(OrgScilabForgeJlatexmathRegexRegexUtil *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathRegexRegexUtil *new_OrgScilabForgeJlatexmathRegexRegexUtil_init() {
  OrgScilabForgeJlatexmathRegexRegexUtil *self = [OrgScilabForgeJlatexmathRegexRegexUtil alloc];
  OrgScilabForgeJlatexmathRegexRegexUtil_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathRegexRegexUtil)
