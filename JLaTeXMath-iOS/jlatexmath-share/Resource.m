//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/platform/Resource.java
//


#include "FactoryProvider.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Resource.h"
#include "ResourceLoader.h"
#include "ResourceLoaderFactory.h"
#include "ResourceParseException.h"

@interface OrgScilabForgeJlatexmathPlatformResource () {
 @public
  id<OrgScilabForgeJlatexmathPlatformResourcesResourceLoader> resourceLoader_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathPlatformResource, resourceLoader_, id<OrgScilabForgeJlatexmathPlatformResourcesResourceLoader>)

@implementation OrgScilabForgeJlatexmathPlatformResource

- (instancetype)init {
  OrgScilabForgeJlatexmathPlatformResource_init(self);
  return self;
}

- (id)loadResourceWithNSString:(NSString *)path {
  return [((id<OrgScilabForgeJlatexmathPlatformResourcesResourceLoader>) nil_chk(resourceLoader_)) loadResourceWithId:nil withNSString:path];
}

- (id)loadResourceWithId:(id)base
            withNSString:(NSString *)path {
  return [((id<OrgScilabForgeJlatexmathPlatformResourcesResourceLoader>) nil_chk(resourceLoader_)) loadResourceWithId:base withNSString:path];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Resource", NULL, 0x1, NULL, NULL },
    { "loadResourceWithNSString:", "loadResource", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "loadResourceWithId:withNSString:", "loadResource", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "resourceLoader_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.platform.resources.ResourceLoader;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathPlatformResource = { 2, "Resource", "org.scilab.forge.jlatexmath.platform", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathPlatformResource;
}

@end

void OrgScilabForgeJlatexmathPlatformResource_init(OrgScilabForgeJlatexmathPlatformResource *self) {
  (void) NSObject_init(self);
  self->resourceLoader_ = [((id<OrgScilabForgeJlatexmathPlatformResourcesResourceLoaderFactory>) nil_chk([((OrgScilabForgeJlatexmathPlatformFactoryProvider *) nil_chk(OrgScilabForgeJlatexmathPlatformFactoryProvider_get_INSTANCE_())) createResourceLoaderFactory])) createResourceLoader];
}

OrgScilabForgeJlatexmathPlatformResource *new_OrgScilabForgeJlatexmathPlatformResource_init() {
  OrgScilabForgeJlatexmathPlatformResource *self = [OrgScilabForgeJlatexmathPlatformResource alloc];
  OrgScilabForgeJlatexmathPlatformResource_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathPlatformResource)
