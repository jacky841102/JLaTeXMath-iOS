//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/FcscoreBox.java
//


#include "BasicStroke.h"
#include "Box.h"
#include "FcscoreBox.h"
#include "Geom.h"
#include "Graphics.h"
#include "Graphics2DInterface.h"
#include "J2ObjC_source.h"
#include "Line2D.h"
#include "Stroke.h"
#include "TeXFont.h"
#include "Transform.h"
#include "java/lang/Math.h"

@interface OrgScilabForgeJlatexmathFcscoreBox () {
 @public
  jint N_;
  jboolean strike_;
  jfloat space_;
  jfloat thickness_;
  id<OrgScilabForgeJlatexmathPlatformGeomLine2D> line_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathFcscoreBox, line_, id<OrgScilabForgeJlatexmathPlatformGeomLine2D>)

@implementation OrgScilabForgeJlatexmathFcscoreBox

- (instancetype)initWithInt:(jint)N
                  withFloat:(jfloat)h
                  withFloat:(jfloat)thickness
                  withFloat:(jfloat)space
                withBoolean:(jboolean)strike {
  OrgScilabForgeJlatexmathFcscoreBox_initWithInt_withFloat_withFloat_withFloat_withBoolean_(self, N, h, thickness, space, strike);
  return self;
}

- (void)drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:(id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>)g2
                                                                  withFloat:(jfloat)x
                                                                  withFloat:(jfloat)y {
  id<OrgScilabForgeJlatexmathPlatformGraphicsTransform> transf = [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) getTransform];
  [g2 saveTransformation];
  id<OrgScilabForgeJlatexmathPlatformGraphicsStroke> oldStroke = [g2 getStroke];
  jdouble sx = [((id<OrgScilabForgeJlatexmathPlatformGraphicsTransform>) nil_chk(transf)) getScaleX];
  jdouble sy = [transf getScaleY];
  jdouble s = 1;
  if (sx == sy) {
    s = sx;
    [g2 scale__WithDouble:1 / sx withDouble:1 / sy];
  }
  [g2 setStrokeWithOrgScilabForgeJlatexmathPlatformGraphicsStroke:[((OrgScilabForgeJlatexmathPlatformGraphics *) nil_chk(graphics_)) createBasicStrokeWithFloat:(jfloat) (s * thickness_) withInt:OrgScilabForgeJlatexmathPlatformGraphicsBasicStroke_CAP_BUTT withInt:OrgScilabForgeJlatexmathPlatformGraphicsBasicStroke_JOIN_MITER]];
  jfloat th = thickness_ / 2.f;
  jfloat xx = x + space_;
  xx = (jfloat) (xx * s + (space_ / 2.f) * s);
  jint inc = (jint) JavaLangMath_roundWithDouble_((space_ + thickness_) * s);
  for (jint i = 0; i < N_; i++) {
    [((id<OrgScilabForgeJlatexmathPlatformGeomLine2D>) nil_chk(line_)) setLineWithDouble:xx + th * s withDouble:(y - height_) * s withDouble:xx + th * s withDouble:y * s];
    [g2 drawWithOrgScilabForgeJlatexmathPlatformGeomLine2D:line_];
    xx += inc;
  }
  if (strike_) {
    [((id<OrgScilabForgeJlatexmathPlatformGeomLine2D>) nil_chk(line_)) setLineWithDouble:(x + space_) * s withDouble:(y - height_ / 2.f) * s withDouble:xx - s * space_ / 2 withDouble:(y - height_ / 2.f) * s];
    [g2 drawWithOrgScilabForgeJlatexmathPlatformGeomLine2D:line_];
  }
  [g2 restoreTransformation];
  [g2 setStrokeWithOrgScilabForgeJlatexmathPlatformGraphicsStroke:oldStroke];
}

- (jint)getLastFontId {
  return OrgScilabForgeJlatexmathTeXFont_NO_FONT;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withFloat:withFloat:withFloat:withBoolean:", "FcscoreBox", NULL, 0x1, NULL, NULL },
    { "drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:withFloat:withFloat:", "draw", "V", 0x1, NULL, NULL },
    { "getLastFontId", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "N_", NULL, 0x2, "I", NULL, NULL,  },
    { "strike_", NULL, 0x2, "Z", NULL, NULL,  },
    { "space_", NULL, 0x2, "F", NULL, NULL,  },
    { "thickness_", NULL, 0x2, "F", NULL, NULL,  },
    { "line_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.platform.geom.Line2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathFcscoreBox = { 2, "FcscoreBox", "org.scilab.forge.jlatexmath", NULL, 0x1, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathFcscoreBox;
}

@end

void OrgScilabForgeJlatexmathFcscoreBox_initWithInt_withFloat_withFloat_withFloat_withBoolean_(OrgScilabForgeJlatexmathFcscoreBox *self, jint N, jfloat h, jfloat thickness, jfloat space, jboolean strike) {
  (void) OrgScilabForgeJlatexmathBox_init(self);
  self->N_ = N;
  self->width_ = N * (thickness + space) + 2 * space;
  self->height_ = h;
  self->depth_ = 0;
  self->strike_ = strike;
  self->space_ = space;
  self->thickness_ = thickness;
  self->line_ = [((OrgScilabForgeJlatexmathPlatformGeom *) nil_chk(self->geom_)) createLine2D];
}

OrgScilabForgeJlatexmathFcscoreBox *new_OrgScilabForgeJlatexmathFcscoreBox_initWithInt_withFloat_withFloat_withFloat_withBoolean_(jint N, jfloat h, jfloat thickness, jfloat space, jboolean strike) {
  OrgScilabForgeJlatexmathFcscoreBox *self = [OrgScilabForgeJlatexmathFcscoreBox alloc];
  OrgScilabForgeJlatexmathFcscoreBox_initWithInt_withFloat_withFloat_withFloat_withBoolean_(self, N, h, thickness, space, strike);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathFcscoreBox)
