//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/TeXFormula.java
//


#include "ArrayOfAtoms.h"
#include "Atom.h"
#include "Box.h"
#include "BreakFormula.h"
#include "BreakMarkAtom.h"
#include "Character.h"
#include "Color.h"
#include "ColorAtom.h"
#include "ColorUtil.h"
#include "CyrillicRegistration.h"
#include "DefaultTeXFont.h"
#include "DefaultTeXFontParser.h"
#include "EmptyAtom.h"
#include "FormulaNotFoundException.h"
#include "Graphics.h"
#include "Graphics2DInterface.h"
#include "GreekRegistration.h"
#include "HorizontalBox.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "Image.h"
#include "Insets.h"
#include "InvalidAtomTypeException.h"
#include "InvalidUnitException.h"
#include "J2ObjC_source.h"
#include "MacroInfo.h"
#include "MatrixAtom.h"
#include "MiddleAtom.h"
#include "ParseException.h"
#include "PredefMacros.h"
#include "PredefinedCommands.h"
#include "PredefinedTeXFormulaParser.h"
#include "PredefinedTeXFormulas.h"
#include "Resource.h"
#include "ResourceParseException.h"
#include "RomanAtom.h"
#include "RowAtom.h"
#include "SpaceAtom.h"
#include "StrutBox.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "TeXFormula.h"
#include "TeXFormulaSettingsParser.h"
#include "TeXIcon.h"
#include "TeXParser.h"
#include "TypedAtom.h"
#include "VCenteredAtom.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"

#define OrgScilabForgeJlatexmathTeXFormula_OVER_DEL 0
#define OrgScilabForgeJlatexmathTeXFormula_UNDER_DEL 1

@interface OrgScilabForgeJlatexmathTeXFormula () {
 @public
  OrgScilabForgeJlatexmathTeXParser *parser_;
}

- (void)addImplWithOrgScilabForgeJlatexmathTeXFormula:(OrgScilabForgeJlatexmathTeXFormula *)f;

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)style;

- (OrgScilabForgeJlatexmathDefaultTeXFont *)createFontWithFloat:(jfloat)size
                                                        withInt:(jint)type;

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula, parser_, OrgScilabForgeJlatexmathTeXParser *)

static IOSObjectArray *OrgScilabForgeJlatexmathTeXFormula_delimiterNames_;
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormula, delimiterNames_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormula, OVER_DEL, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormula, UNDER_DEL, jint)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormula_addImplWithOrgScilabForgeJlatexmathTeXFormula_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXFormula *f);

__attribute__((unused)) static OrgScilabForgeJlatexmathBox *OrgScilabForgeJlatexmathTeXFormula_createBoxWithOrgScilabForgeJlatexmathTeXEnvironment_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXEnvironment *style);

__attribute__((unused)) static OrgScilabForgeJlatexmathDefaultTeXFont *OrgScilabForgeJlatexmathTeXFormula_createFontWithFloat_withInt_(OrgScilabForgeJlatexmathTeXFormula *self, jfloat size, jint type);

@interface OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder () {
 @public
  OrgScilabForgeJlatexmathTeXFormula *this$0_;
  JavaLangInteger *style_;
  JavaLangFloat *size_;
  JavaLangInteger *type_;
  id<OrgScilabForgeJlatexmathPlatformGraphicsColor> fgcolor_;
  jboolean trueValues_;
  JavaLangInteger *widthUnit_;
  JavaLangFloat *textWidth_;
  JavaLangInteger *align_;
  jboolean isMaxWidth_;
  JavaLangInteger *interLineUnit_;
  JavaLangFloat *interLineSpacing_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, this$0_, OrgScilabForgeJlatexmathTeXFormula *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, style_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, size_, JavaLangFloat *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, type_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, fgcolor_, id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, widthUnit_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, textWidth_, JavaLangFloat *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, align_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, interLineUnit_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder, interLineSpacing_, JavaLangFloat *)

J2OBJC_INITIALIZED_DEFN(OrgScilabForgeJlatexmathTeXFormula)

NSString *OrgScilabForgeJlatexmathTeXFormula_VERSION_ = @"1.0.3";
jfloat OrgScilabForgeJlatexmathTeXFormula_PIXELS_PER_POINT_ = 1.0f;
id<JavaUtilMap> OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulas_;
id<JavaUtilMap> OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulasAsString_;
IOSObjectArray *OrgScilabForgeJlatexmathTeXFormula_symbolMappings_;
IOSObjectArray *OrgScilabForgeJlatexmathTeXFormula_symbolTextMappings_;
IOSObjectArray *OrgScilabForgeJlatexmathTeXFormula_symbolFormulaMappings_;
id<JavaUtilMap> OrgScilabForgeJlatexmathTeXFormula_externalFontMap_;

@implementation OrgScilabForgeJlatexmathTeXFormula

+ (void)addSymbolMappingsWithNSString:(NSString *)file {
  OrgScilabForgeJlatexmathTeXFormula_addSymbolMappingsWithNSString_(file);
}

+ (void)addSymbolMappingsWithId:(id)inArg
                   withNSString:(NSString *)name {
  OrgScilabForgeJlatexmathTeXFormula_addSymbolMappingsWithId_withNSString_(inArg, name);
}

+ (jboolean)isRegisteredBlockWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock:(OrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock *)block {
  return OrgScilabForgeJlatexmathTeXFormula_isRegisteredBlockWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock_(block);
}

+ (OrgScilabForgeJlatexmathTeXFormula_FontInfos *)getExternalFontWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock:(OrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock *)block {
  return OrgScilabForgeJlatexmathTeXFormula_getExternalFontWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock_(block);
}

+ (void)setDPITargetWithFloat:(jfloat)dpi {
  OrgScilabForgeJlatexmathTeXFormula_setDPITargetWithFloat_(dpi);
}

+ (void)setDefaultDPI {
  OrgScilabForgeJlatexmathTeXFormula_setDefaultDPI();
}

- (instancetype)init {
  OrgScilabForgeJlatexmathTeXFormula_init(self);
  return self;
}

- (instancetype)initWithNSString:(NSString *)s
                 withJavaUtilMap:(id<JavaUtilMap>)map {
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withJavaUtilMap_(self, s, map);
  return self;
}

- (instancetype)initWithNSString:(NSString *)s {
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_(self, s);
  return self;
}

- (instancetype)initWithNSString:(NSString *)s
                     withBoolean:(jboolean)firstpass {
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withBoolean_(self, s, firstpass);
  return self;
}

- (instancetype)initWithNSString:(NSString *)s
                    withNSString:(NSString *)textStyle {
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_(self, s, textStyle);
  return self;
}

- (instancetype)initWithNSString:(NSString *)s
                    withNSString:(NSString *)textStyle
                     withBoolean:(jboolean)firstpass
                     withBoolean:(jboolean)space {
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_withBoolean_withBoolean_(self, s, textStyle, firstpass, space);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormula:(OrgScilabForgeJlatexmathTeXFormula *)f {
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXFormula_(self, f);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXParser:(OrgScilabForgeJlatexmathTeXParser *)tp {
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_(self, tp);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXParser:(OrgScilabForgeJlatexmathTeXParser *)tp
                                             withNSString:(NSString *)s {
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_(self, tp, s);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXParser:(OrgScilabForgeJlatexmathTeXParser *)tp
                                             withNSString:(NSString *)s
                                              withBoolean:(jboolean)firstpass {
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withBoolean_(self, tp, s, firstpass);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXParser:(OrgScilabForgeJlatexmathTeXParser *)tp
                                             withNSString:(NSString *)s
                                             withNSString:(NSString *)textStyle {
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_(self, tp, s, textStyle);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXParser:(OrgScilabForgeJlatexmathTeXParser *)tp
                                             withNSString:(NSString *)s
                                             withNSString:(NSString *)textStyle
                                              withBoolean:(jboolean)firstpass
                                              withBoolean:(jboolean)space {
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_withBoolean_withBoolean_(self, tp, s, textStyle, firstpass, space);
  return self;
}

+ (OrgScilabForgeJlatexmathTeXFormula *)getAsTextWithNSString:(NSString *)text
                                                      withInt:(jint)alignment {
  return OrgScilabForgeJlatexmathTeXFormula_getAsTextWithNSString_withInt_(text, alignment);
}

+ (OrgScilabForgeJlatexmathTeXFormula *)getPartialTeXFormulaWithNSString:(NSString *)formula {
  return OrgScilabForgeJlatexmathTeXFormula_getPartialTeXFormulaWithNSString_(formula);
}

+ (void)registerFontsWithBoolean:(jboolean)b {
  OrgScilabForgeJlatexmathTeXFormula_registerFontsWithBoolean_(b);
}

- (void)setLaTeXWithNSString:(NSString *)ltx {
  [((OrgScilabForgeJlatexmathTeXParser *) nil_chk(parser_)) resetWithNSString:ltx];
  if (ltx != nil && ((jint) [ltx length]) != 0) [parser_ parse];
}

- (OrgScilabForgeJlatexmathTeXFormula *)addWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)el {
  if (el != nil) {
    if ([el isKindOfClass:[OrgScilabForgeJlatexmathMiddleAtom class]]) [((id<JavaUtilList>) nil_chk(middle_)) addWithId:(OrgScilabForgeJlatexmathMiddleAtom *) check_class_cast(el, [OrgScilabForgeJlatexmathMiddleAtom class])];
    if (root_ == nil) {
      root_ = el;
    }
    else {
      if (!([root_ isKindOfClass:[OrgScilabForgeJlatexmathRowAtom class]])) {
        root_ = new_OrgScilabForgeJlatexmathRowAtom_initWithOrgScilabForgeJlatexmathAtom_(root_);
      }
      [((OrgScilabForgeJlatexmathRowAtom *) check_class_cast(root_, [OrgScilabForgeJlatexmathRowAtom class])) addWithOrgScilabForgeJlatexmathAtom:el];
      if ([el isKindOfClass:[OrgScilabForgeJlatexmathTypedAtom class]]) {
        OrgScilabForgeJlatexmathTypedAtom *ta = (OrgScilabForgeJlatexmathTypedAtom *) check_class_cast(el, [OrgScilabForgeJlatexmathTypedAtom class]);
        jint rtype = [ta getRightType];
        if (rtype == OrgScilabForgeJlatexmathTeXConstants_TYPE_BINARY_OPERATOR || rtype == OrgScilabForgeJlatexmathTeXConstants_TYPE_RELATION) {
          [((OrgScilabForgeJlatexmathRowAtom *) check_class_cast(root_, [OrgScilabForgeJlatexmathRowAtom class])) addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathBreakMarkAtom_init()];
        }
      }
    }
  }
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula *)addWithNSString:(NSString *)s {
  if (s != nil && ((jint) [s length]) != 0) {
    textStyle_ = nil;
    (void) [self addWithOrgScilabForgeJlatexmathTeXFormula:new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_(s)];
  }
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula *)appendWithNSString:(NSString *)s {
  return [self appendWithBoolean:NO withNSString:s];
}

- (OrgScilabForgeJlatexmathTeXFormula *)appendWithBoolean:(jboolean)isPartial
                                             withNSString:(NSString *)s {
  if (s != nil && ((jint) [s length]) != 0) {
    OrgScilabForgeJlatexmathTeXParser *tp = new_OrgScilabForgeJlatexmathTeXParser_initWithBoolean_withNSString_withOrgScilabForgeJlatexmathTeXFormula_(isPartial, s, self);
    [tp parse];
  }
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula *)addWithOrgScilabForgeJlatexmathTeXFormula:(OrgScilabForgeJlatexmathTeXFormula *)f {
  OrgScilabForgeJlatexmathTeXFormula_addImplWithOrgScilabForgeJlatexmathTeXFormula_(self, f);
  return self;
}

- (void)addImplWithOrgScilabForgeJlatexmathTeXFormula:(OrgScilabForgeJlatexmathTeXFormula *)f {
  OrgScilabForgeJlatexmathTeXFormula_addImplWithOrgScilabForgeJlatexmathTeXFormula_(self, f);
}

- (void)setLookAtLastAtomWithBoolean:(jboolean)b {
  if ([root_ isKindOfClass:[OrgScilabForgeJlatexmathRowAtom class]]) ((OrgScilabForgeJlatexmathRowAtom *) nil_chk(((OrgScilabForgeJlatexmathRowAtom *) check_class_cast(root_, [OrgScilabForgeJlatexmathRowAtom class]))))->lookAtLastAtom_ = b;
}

- (jboolean)getLookAtLastAtom {
  if ([root_ isKindOfClass:[OrgScilabForgeJlatexmathRowAtom class]]) return ((OrgScilabForgeJlatexmathRowAtom *) nil_chk(((OrgScilabForgeJlatexmathRowAtom *) check_class_cast(root_, [OrgScilabForgeJlatexmathRowAtom class]))))->lookAtLastAtom_;
  return NO;
}

- (OrgScilabForgeJlatexmathTeXFormula *)centerOnAxis {
  root_ = new_OrgScilabForgeJlatexmathVCenteredAtom_initWithOrgScilabForgeJlatexmathAtom_(root_);
  return self;
}

+ (void)addPredefinedTeXFormulaWithId:(id)xmlFile {
  OrgScilabForgeJlatexmathTeXFormula_addPredefinedTeXFormulaWithId_(xmlFile);
}

+ (void)addPredefinedCommandsWithId:(id)xmlFile {
  OrgScilabForgeJlatexmathTeXFormula_addPredefinedCommandsWithId_(xmlFile);
}

- (OrgScilabForgeJlatexmathTeXFormula *)addStrutWithInt:(jint)unit
                                              withFloat:(jfloat)width
                                              withFloat:(jfloat)height
                                              withFloat:(jfloat)depth {
  return [self addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(unit, width, height, depth)];
}

- (OrgScilabForgeJlatexmathTeXFormula *)addStrutWithInt:(jint)type {
  return [self addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_(type)];
}

- (OrgScilabForgeJlatexmathTeXFormula *)addStrutWithInt:(jint)widthUnit
                                              withFloat:(jfloat)width
                                                withInt:(jint)heightUnit
                                              withFloat:(jfloat)height
                                                withInt:(jint)depthUnit
                                              withFloat:(jfloat)depth {
  return [self addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withInt_withFloat_withInt_withFloat_(widthUnit, width, heightUnit, height, depthUnit, depth)];
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)style {
  return OrgScilabForgeJlatexmathTeXFormula_createBoxWithOrgScilabForgeJlatexmathTeXEnvironment_(self, style);
}

- (OrgScilabForgeJlatexmathDefaultTeXFont *)createFontWithFloat:(jfloat)size
                                                        withInt:(jint)type {
  return OrgScilabForgeJlatexmathTeXFormula_createFontWithFloat_withInt_(self, size, type);
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size {
  return [((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([new_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self) setStyleWithInt:style])) setSizeWithFloat:size])) build];
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size
                                                  withInt:(jint)type {
  return [((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([new_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self) setStyleWithInt:style])) setSizeWithFloat:size])) setTypeWithInt:type])) build];
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size
                                                  withInt:(jint)type
        withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fgcolor {
  return [((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([new_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self) setStyleWithInt:style])) setSizeWithFloat:size])) setTypeWithInt:type])) setFGColorWithOrgScilabForgeJlatexmathPlatformGraphicsColor:fgcolor])) build];
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size
                                              withBoolean:(jboolean)trueValues {
  return [((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([new_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self) setStyleWithInt:style])) setSizeWithFloat:size])) setTrueValuesWithBoolean:trueValues])) build];
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size
                                                  withInt:(jint)widthUnit
                                                withFloat:(jfloat)textwidth
                                                  withInt:(jint)align {
  return [self createTeXIconWithInt:style withFloat:size withInt:0 withInt:widthUnit withFloat:textwidth withInt:align];
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size
                                                  withInt:(jint)type
                                                  withInt:(jint)widthUnit
                                                withFloat:(jfloat)textwidth
                                                  withInt:(jint)align {
  return [((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([new_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self) setStyleWithInt:style])) setSizeWithFloat:size])) setTypeWithInt:type])) setWidthWithInt:widthUnit withFloat:textwidth withInt:align])) build];
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size
                                                  withInt:(jint)widthUnit
                                                withFloat:(jfloat)textwidth
                                                  withInt:(jint)align
                                                  withInt:(jint)interlineUnit
                                                withFloat:(jfloat)interline {
  return [self createTeXIconWithInt:style withFloat:size withInt:0 withInt:widthUnit withFloat:textwidth withInt:align withInt:interlineUnit withFloat:interline];
}

- (OrgScilabForgeJlatexmathTeXIcon *)createTeXIconWithInt:(jint)style
                                                withFloat:(jfloat)size
                                                  withInt:(jint)type
                                                  withInt:(jint)widthUnit
                                                withFloat:(jfloat)textwidth
                                                  withInt:(jint)align
                                                  withInt:(jint)interlineUnit
                                                withFloat:(jfloat)interline {
  return [((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([((OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *) nil_chk([new_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self) setStyleWithInt:style])) setSizeWithFloat:size])) setTypeWithInt:type])) setWidthWithInt:widthUnit withFloat:textwidth withInt:align])) setInterLineSpacingWithInt:interlineUnit withFloat:interline])) build];
}

- (void)createImageWithNSString:(NSString *)format
                        withInt:(jint)style
                      withFloat:(jfloat)size
                   withNSString:(NSString *)outArg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)bg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fg
                    withBoolean:(jboolean)transparency {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)createPNGWithInt:(jint)style
               withFloat:(jfloat)size
            withNSString:(NSString *)outArg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)bg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fg {
  [self createImageWithNSString:@"png" withInt:style withFloat:size withNSString:outArg withOrgScilabForgeJlatexmathPlatformGraphicsColor:bg withOrgScilabForgeJlatexmathPlatformGraphicsColor:fg withBoolean:bg == nil];
}

- (void)createGIFWithInt:(jint)style
               withFloat:(jfloat)size
            withNSString:(NSString *)outArg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)bg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fg {
  [self createImageWithNSString:@"gif" withInt:style withFloat:size withNSString:outArg withOrgScilabForgeJlatexmathPlatformGraphicsColor:bg withOrgScilabForgeJlatexmathPlatformGraphicsColor:fg withBoolean:bg == nil];
}

- (void)createJPEGWithInt:(jint)style
                withFloat:(jfloat)size
             withNSString:(NSString *)outArg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)bg
withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fg {
  [self createImageWithNSString:@"jpeg" withInt:style withFloat:size withNSString:outArg withOrgScilabForgeJlatexmathPlatformGraphicsColor:bg withOrgScilabForgeJlatexmathPlatformGraphicsColor:fg withBoolean:NO];
}

+ (id<OrgScilabForgeJlatexmathPlatformGraphicsImage>)createBufferedImageWithNSString:(NSString *)formula
                                                                             withInt:(jint)style
                                                                           withFloat:(jfloat)size
                                   withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fg
                                   withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)bg {
  return OrgScilabForgeJlatexmathTeXFormula_createBufferedImageWithNSString_withInt_withFloat_withOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathPlatformGraphicsColor_(formula, style, size, fg, bg);
}

- (id<OrgScilabForgeJlatexmathPlatformGraphicsImage>)createBufferedImageWithInt:(jint)style
                                                                      withFloat:(jfloat)size
                              withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fg
                              withOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)bg {
  OrgScilabForgeJlatexmathTeXIcon *icon = [self createTeXIconWithInt:style withFloat:size];
  [((OrgScilabForgeJlatexmathTeXIcon *) nil_chk(icon)) setInsetsWithOrgScilabForgeJlatexmathPlatformGraphicsInsets:new_OrgScilabForgeJlatexmathPlatformGraphicsInsets_initWithInt_withInt_withInt_withInt_(2, 2, 2, 2)];
  jint w = [icon getIconWidth], h = [icon getIconHeight];
  id<OrgScilabForgeJlatexmathPlatformGraphicsImage> image = [new_OrgScilabForgeJlatexmathPlatformGraphics_init() createImageWithInt:w withInt:h withInt:bg == nil ? OrgScilabForgeJlatexmathPlatformGraphicsImage_TYPE_INT_ARGB : OrgScilabForgeJlatexmathPlatformGraphicsImage_TYPE_INT_RGB];
  id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface> g2 = [((id<OrgScilabForgeJlatexmathPlatformGraphicsImage>) nil_chk(image)) createGraphics2D];
  if (bg != nil) {
    [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) setColorWithOrgScilabForgeJlatexmathPlatformGraphicsColor:bg];
    [g2 fillRectWithInt:0 withInt:0 withInt:w withInt:h];
  }
  [icon setForegroundWithOrgScilabForgeJlatexmathPlatformGraphicsColor:fg == nil ? OrgScilabForgeJlatexmathColorUtil_get_BLACK_() : fg];
  [icon paintIconWithOrgScilabForgeJlatexmathPlatformGraphicsHasForegroundColor:nil withOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withInt:0 withInt:0];
  [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) dispose];
  return image;
}

- (void)setDEBUGWithBoolean:(jboolean)b {
  *OrgScilabForgeJlatexmathBox_getRef_DEBUG__() = b;
}

- (OrgScilabForgeJlatexmathTeXFormula *)setBackgroundWithOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)c {
  if (c != nil) {
    if ([root_ isKindOfClass:[OrgScilabForgeJlatexmathColorAtom class]]) root_ = new_OrgScilabForgeJlatexmathColorAtom_initWithOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathColorAtom_(c, nil, (OrgScilabForgeJlatexmathColorAtom *) check_class_cast(root_, [OrgScilabForgeJlatexmathColorAtom class]));
    else root_ = new_OrgScilabForgeJlatexmathColorAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathPlatformGraphicsColor_(root_, c, nil);
  }
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula *)setColorWithOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)c {
  if (c != nil) {
    if ([root_ isKindOfClass:[OrgScilabForgeJlatexmathColorAtom class]]) root_ = new_OrgScilabForgeJlatexmathColorAtom_initWithOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathColorAtom_(nil, c, (OrgScilabForgeJlatexmathColorAtom *) check_class_cast(root_, [OrgScilabForgeJlatexmathColorAtom class]));
    else root_ = new_OrgScilabForgeJlatexmathColorAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathPlatformGraphicsColor_(root_, nil, c);
  }
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula *)setFixedTypesWithInt:(jint)leftType
                                                     withInt:(jint)rightType {
  root_ = new_OrgScilabForgeJlatexmathTypedAtom_initWithInt_withInt_withOrgScilabForgeJlatexmathAtom_(leftType, rightType, root_);
  return self;
}

+ (OrgScilabForgeJlatexmathTeXFormula *)getWithNSString:(NSString *)name {
  return OrgScilabForgeJlatexmathTeXFormula_getWithNSString_(name);
}

+ (void)initialize {
  if (self == [OrgScilabForgeJlatexmathTeXFormula class]) {
    OrgScilabForgeJlatexmathTeXFormula_delimiterNames_ = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"lbrace", @"rbrace" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"lsqbrack", @"rsqbrack" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"lbrack", @"rbrack" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"downarrow", @"downarrow" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"uparrow", @"uparrow" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"updownarrow", @"updownarrow" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"Downarrow", @"Downarrow" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"Uparrow", @"Uparrow" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"Updownarrow", @"Updownarrow" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"vert", @"vert" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"Vert", @"Vert" } count:2 type:NSString_class_()] } count:11 type:IOSClass_arrayType(NSString_class_(), 1)];
    OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulas_ = new_JavaUtilHashMap_initWithInt_(150);
    OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulasAsString_ = new_JavaUtilHashMap_initWithInt_(150);
    OrgScilabForgeJlatexmathTeXFormula_symbolMappings_ = [IOSObjectArray newArrayWithLength:65536 type:NSString_class_()];
    OrgScilabForgeJlatexmathTeXFormula_symbolTextMappings_ = [IOSObjectArray newArrayWithLength:65536 type:NSString_class_()];
    OrgScilabForgeJlatexmathTeXFormula_symbolFormulaMappings_ = [IOSObjectArray newArrayWithLength:65536 type:NSString_class_()];
    OrgScilabForgeJlatexmathTeXFormula_externalFontMap_ = new_JavaUtilHashMap_init();
    {
      OrgScilabForgeJlatexmathTeXFormulaSettingsParser *parser = new_OrgScilabForgeJlatexmathTeXFormulaSettingsParser_init();
      [parser parseSymbolMappingsWithNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolMappings_ withNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolTextMappings_];
      (void) new_OrgScilabForgeJlatexmathPredefinedCommands_init();
      (void) new_OrgScilabForgeJlatexmathPredefinedTeXFormulas_init();
      (void) new_OrgScilabForgeJlatexmathPredefMacros_init();
      [parser parseSymbolToFormulaMappingsWithNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolFormulaMappings_ withNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolTextMappings_];
      @try {
        OrgScilabForgeJlatexmathDefaultTeXFont_registerAlphabetWithOrgScilabForgeJlatexmathAlphabetRegistration_(new_OrgScilabForgeJlatexmathCyrillicCyrillicRegistration_init());
        OrgScilabForgeJlatexmathDefaultTeXFont_registerAlphabetWithOrgScilabForgeJlatexmathAlphabetRegistration_(new_OrgScilabForgeJlatexmathGreekGreekRegistration_init());
      }
      @catch (JavaLangException *e) {
      }
    }
    J2OBJC_SET_INITIALIZED(OrgScilabForgeJlatexmathTeXFormula)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addSymbolMappingsWithNSString:", "addSymbolMappings", "V", 0x9, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "addSymbolMappingsWithId:withNSString:", "addSymbolMappings", "V", 0x9, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "isRegisteredBlockWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock:", "isRegisteredBlock", "Z", 0x9, NULL, NULL },
    { "getExternalFontWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock:", "getExternalFont", "Lorg.scilab.forge.jlatexmath.TeXFormula$FontInfos;", 0x9, NULL, NULL },
    { "setDPITargetWithFloat:", "setDPITarget", "V", 0x9, NULL, NULL },
    { "setDefaultDPI", NULL, "V", 0x9, NULL, NULL },
    { "init", "TeXFormula", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withJavaUtilMap:", "TeXFormula", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithNSString:", "TeXFormula", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithNSString:withBoolean:", "TeXFormula", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithNSString:withNSString:", "TeXFormula", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithNSString:withNSString:withBoolean:withBoolean:", "TeXFormula", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithOrgScilabForgeJlatexmathTeXFormula:", "TeXFormula", NULL, 0x1, NULL, NULL },
    { "initWithOrgScilabForgeJlatexmathTeXParser:", "TeXFormula", NULL, 0x4, NULL, NULL },
    { "initWithOrgScilabForgeJlatexmathTeXParser:withNSString:", "TeXFormula", NULL, 0x4, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithOrgScilabForgeJlatexmathTeXParser:withNSString:withBoolean:", "TeXFormula", NULL, 0x4, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithOrgScilabForgeJlatexmathTeXParser:withNSString:withNSString:", "TeXFormula", NULL, 0x4, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "initWithOrgScilabForgeJlatexmathTeXParser:withNSString:withNSString:withBoolean:withBoolean:", "TeXFormula", NULL, 0x4, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "getAsTextWithNSString:withInt:", "getAsText", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x9, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "getPartialTeXFormulaWithNSString:", "getPartialTeXFormula", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x9, NULL, NULL },
    { "registerFontsWithBoolean:", "registerFonts", "V", 0x9, NULL, NULL },
    { "setLaTeXWithNSString:", "setLaTeX", "V", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "addWithOrgScilabForgeJlatexmathAtom:", "add", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, NULL, NULL },
    { "addWithNSString:", "add", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "appendWithNSString:", "append", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "appendWithBoolean:withNSString:", "append", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "addWithOrgScilabForgeJlatexmathTeXFormula:", "add", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, NULL, NULL },
    { "addImplWithOrgScilabForgeJlatexmathTeXFormula:", "addImpl", "V", 0x2, NULL, NULL },
    { "setLookAtLastAtomWithBoolean:", "setLookAtLastAtom", "V", 0x1, NULL, NULL },
    { "getLookAtLastAtom", NULL, "Z", 0x1, NULL, NULL },
    { "centerOnAxis", NULL, "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, NULL, NULL },
    { "addPredefinedTeXFormulaWithId:", "addPredefinedTeXFormula", "V", 0x9, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "addPredefinedCommandsWithId:", "addPredefinedCommands", "V", 0x9, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "addStrutWithInt:withFloat:withFloat:withFloat:", "addStrut", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.InvalidUnitException;", NULL },
    { "addStrutWithInt:", "addStrut", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.InvalidUnitException;", NULL },
    { "addStrutWithInt:withFloat:withInt:withFloat:withInt:withFloat:", "addStrut", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.InvalidUnitException;", NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x2, NULL, NULL },
    { "createFontWithFloat:withInt:", "createFont", "Lorg.scilab.forge.jlatexmath.DefaultTeXFont;", 0x2, NULL, NULL },
    { "createTeXIconWithInt:withFloat:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createTeXIconWithInt:withFloat:withInt:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createTeXIconWithInt:withFloat:withInt:withOrgScilabForgeJlatexmathPlatformGraphicsColor:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createTeXIconWithInt:withFloat:withBoolean:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createTeXIconWithInt:withFloat:withInt:withFloat:withInt:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createTeXIconWithInt:withFloat:withInt:withInt:withFloat:withInt:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createTeXIconWithInt:withFloat:withInt:withFloat:withInt:withInt:withFloat:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createTeXIconWithInt:withFloat:withInt:withInt:withFloat:withInt:withInt:withFloat:", "createTeXIcon", "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "createImageWithNSString:withInt:withFloat:withNSString:withOrgScilabForgeJlatexmathPlatformGraphicsColor:withOrgScilabForgeJlatexmathPlatformGraphicsColor:withBoolean:", "createImage", "V", 0x1, NULL, NULL },
    { "createPNGWithInt:withFloat:withNSString:withOrgScilabForgeJlatexmathPlatformGraphicsColor:withOrgScilabForgeJlatexmathPlatformGraphicsColor:", "createPNG", "V", 0x1, NULL, NULL },
    { "createGIFWithInt:withFloat:withNSString:withOrgScilabForgeJlatexmathPlatformGraphicsColor:withOrgScilabForgeJlatexmathPlatformGraphicsColor:", "createGIF", "V", 0x1, NULL, NULL },
    { "createJPEGWithInt:withFloat:withNSString:withOrgScilabForgeJlatexmathPlatformGraphicsColor:withOrgScilabForgeJlatexmathPlatformGraphicsColor:", "createJPEG", "V", 0x1, NULL, NULL },
    { "createBufferedImageWithNSString:withInt:withFloat:withOrgScilabForgeJlatexmathPlatformGraphicsColor:withOrgScilabForgeJlatexmathPlatformGraphicsColor:", "createBufferedImage", "Lorg.scilab.forge.jlatexmath.platform.graphics.Image;", 0x9, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "createBufferedImageWithInt:withFloat:withOrgScilabForgeJlatexmathPlatformGraphicsColor:withOrgScilabForgeJlatexmathPlatformGraphicsColor:", "createBufferedImage", "Lorg.scilab.forge.jlatexmath.platform.graphics.Image;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ParseException;", NULL },
    { "setDEBUGWithBoolean:", "setDEBUG", "V", 0x1, NULL, NULL },
    { "setBackgroundWithOrgScilabForgeJlatexmathPlatformGraphicsColor:", "setBackground", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, NULL, NULL },
    { "setColorWithOrgScilabForgeJlatexmathPlatformGraphicsColor:", "setColor", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, NULL, NULL },
    { "setFixedTypesWithInt:withInt:", "setFixedTypes", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.InvalidAtomTypeException;", NULL },
    { "getWithNSString:", "get", "Lorg.scilab.forge.jlatexmath.TeXFormula;", 0x9, "Lorg.scilab.forge.jlatexmath.exception.FormulaNotFoundException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "VERSION_", NULL, 0x19, "Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormula_VERSION_, NULL,  },
    { "SERIF_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_SERIF },
    { "SANSSERIF_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_SANSSERIF },
    { "BOLD_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_BOLD },
    { "ITALIC_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_ITALIC },
    { "ROMAN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_ROMAN },
    { "TYPEWRITER_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_TYPEWRITER },
    { "delimiterNames_", NULL, 0x1a, "[[Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormula_delimiterNames_, NULL,  },
    { "PIXELS_PER_POINT_", NULL, 0x9, "F", &OrgScilabForgeJlatexmathTeXFormula_PIXELS_PER_POINT_, NULL,  },
    { "OVER_DEL_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_OVER_DEL },
    { "UNDER_DEL_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormula_UNDER_DEL },
    { "PREC_", NULL, 0x1c, "F", NULL, NULL, .constantValue.asFloat = OrgScilabForgeJlatexmathTeXFormula_PREC },
    { "predefinedTeXFormulas_", NULL, 0x9, "Ljava.util.Map;", &OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulas_, "Ljava/util/Map<Ljava/lang/String;Lorg/scilab/forge/jlatexmath/TeXFormula;>;",  },
    { "predefinedTeXFormulasAsString_", NULL, 0x9, "Ljava.util.Map;", &OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulasAsString_, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;",  },
    { "symbolMappings_", NULL, 0x9, "[Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormula_symbolMappings_, NULL,  },
    { "symbolTextMappings_", NULL, 0x9, "[Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormula_symbolTextMappings_, NULL,  },
    { "symbolFormulaMappings_", NULL, 0x9, "[Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormula_symbolFormulaMappings_, NULL,  },
    { "externalFontMap_", NULL, 0x9, "Ljava.util.Map;", &OrgScilabForgeJlatexmathTeXFormula_externalFontMap_, "Ljava/util/Map<Lorg/scilab/forge/jlatexmath/character/Character$UnicodeBlock;Lorg/scilab/forge/jlatexmath/TeXFormula$FontInfos;>;",  },
    { "middle_", NULL, 0x1, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/scilab/forge/jlatexmath/MiddleAtom;>;",  },
    { "jlmXMLMap_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;",  },
    { "parser_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.TeXParser;", NULL, NULL,  },
    { "root_", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "textStyle_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "isColored_", NULL, 0x1, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", "Lorg.scilab.forge.jlatexmath.TeXFormula$FontInfos;"};
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormula = { 2, "TeXFormula", "org.scilab.forge.jlatexmath", NULL, 0x1, 57, methods, 24, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormula;
}

@end

void OrgScilabForgeJlatexmathTeXFormula_addSymbolMappingsWithNSString_(NSString *file) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  id in = [new_OrgScilabForgeJlatexmathPlatformResource_init() loadResourceWithNSString:file];
  OrgScilabForgeJlatexmathTeXFormula_addSymbolMappingsWithId_withNSString_(in, file);
}

void OrgScilabForgeJlatexmathTeXFormula_addSymbolMappingsWithId_withNSString_(id inArg, NSString *name) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathTeXFormulaSettingsParser *tfsp = new_OrgScilabForgeJlatexmathTeXFormulaSettingsParser_initWithId_withNSString_(inArg, name);
  [tfsp parseSymbolMappingsWithNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolMappings_ withNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolTextMappings_];
  [tfsp parseSymbolToFormulaMappingsWithNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolFormulaMappings_ withNSStringArray:OrgScilabForgeJlatexmathTeXFormula_symbolTextMappings_];
}

jboolean OrgScilabForgeJlatexmathTeXFormula_isRegisteredBlockWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock_(OrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock *block) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  return [((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathTeXFormula_externalFontMap_)) getWithId:block] != nil;
}

OrgScilabForgeJlatexmathTeXFormula_FontInfos *OrgScilabForgeJlatexmathTeXFormula_getExternalFontWithOrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock_(OrgScilabForgeJlatexmathCharacterCharacter_UnicodeBlock *block) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathTeXFormula_FontInfos *infos = [((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathTeXFormula_externalFontMap_)) getWithId:block];
  if (infos == nil) {
    infos = new_OrgScilabForgeJlatexmathTeXFormula_FontInfos_initWithNSString_withNSString_(@"SansSerif", @"Serif");
    (void) [OrgScilabForgeJlatexmathTeXFormula_externalFontMap_ putWithId:block withId:infos];
  }
  return infos;
}

void OrgScilabForgeJlatexmathTeXFormula_setDPITargetWithFloat_(jfloat dpi) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathTeXFormula_PIXELS_PER_POINT_ = dpi / 72.0f;
}

void OrgScilabForgeJlatexmathTeXFormula_setDefaultDPI() {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
}

void OrgScilabForgeJlatexmathTeXFormula_init(OrgScilabForgeJlatexmathTeXFormula *self) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_withBoolean_(@"", self, NO);
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_init() {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_init(self);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withJavaUtilMap_(OrgScilabForgeJlatexmathTeXFormula *self, NSString *s, id<JavaUtilMap> map) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->jlmXMLMap_ = map;
  self->textStyle_ = self->textStyle_;
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_(s, self);
  [self->parser_ parse];
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withJavaUtilMap_(NSString *s, id<JavaUtilMap> map) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withJavaUtilMap_(self, s, map);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithNSString_(OrgScilabForgeJlatexmathTeXFormula *self, NSString *s) {
  (void) OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_(self, s, nil);
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_(NSString *s) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_(self, s);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withBoolean_(OrgScilabForgeJlatexmathTeXFormula *self, NSString *s, jboolean firstpass) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->textStyle_ = nil;
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_withBoolean_(s, self, firstpass);
  [self->parser_ parse];
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withBoolean_(NSString *s, jboolean firstpass) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withBoolean_(self, s, firstpass);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_(OrgScilabForgeJlatexmathTeXFormula *self, NSString *s, NSString *textStyle) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->textStyle_ = textStyle;
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_(s, self);
  [self->parser_ parse];
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_(NSString *s, NSString *textStyle) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_(self, s, textStyle);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_withBoolean_withBoolean_(OrgScilabForgeJlatexmathTeXFormula *self, NSString *s, NSString *textStyle, jboolean firstpass, jboolean space) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->textStyle_ = textStyle;
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_withBoolean_withBoolean_(s, self, firstpass, space);
  [self->parser_ parse];
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_withBoolean_withBoolean_(NSString *s, NSString *textStyle, jboolean firstpass, jboolean space) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_withBoolean_withBoolean_(self, s, textStyle, firstpass, space);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXFormula_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXFormula *f) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  if (f != nil) {
    OrgScilabForgeJlatexmathTeXFormula_addImplWithOrgScilabForgeJlatexmathTeXFormula_(self, f);
  }
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXFormula_(OrgScilabForgeJlatexmathTeXFormula *f) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXFormula_(self, f);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXParser *tp) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->jlmXMLMap_ = ((OrgScilabForgeJlatexmathTeXFormula *) nil_chk(((OrgScilabForgeJlatexmathTeXParser *) nil_chk(tp))->formula_))->jlmXMLMap_;
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithBoolean_withNSString_withOrgScilabForgeJlatexmathTeXFormula_withBoolean_([tp getIsPartial], @"", self, NO);
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_(OrgScilabForgeJlatexmathTeXParser *tp) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_(self, tp);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXParser *tp, NSString *s) {
  (void) OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_(self, tp, s, nil);
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_(OrgScilabForgeJlatexmathTeXParser *tp, NSString *s) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_(self, tp, s);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withBoolean_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXParser *tp, NSString *s, jboolean firstpass) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->textStyle_ = nil;
  self->jlmXMLMap_ = ((OrgScilabForgeJlatexmathTeXFormula *) nil_chk(((OrgScilabForgeJlatexmathTeXParser *) nil_chk(tp))->formula_))->jlmXMLMap_;
  jboolean isPartial = [tp getIsPartial];
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithBoolean_withNSString_withOrgScilabForgeJlatexmathTeXFormula_withBoolean_(isPartial, s, self, firstpass);
  if (isPartial) {
    @try {
      [self->parser_ parse];
    }
    @catch (JavaLangException *e) {
    }
  }
  else {
    [self->parser_ parse];
  }
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withBoolean_(OrgScilabForgeJlatexmathTeXParser *tp, NSString *s, jboolean firstpass) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withBoolean_(self, tp, s, firstpass);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXParser *tp, NSString *s, NSString *textStyle) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->textStyle_ = textStyle;
  self->jlmXMLMap_ = ((OrgScilabForgeJlatexmathTeXFormula *) nil_chk(((OrgScilabForgeJlatexmathTeXParser *) nil_chk(tp))->formula_))->jlmXMLMap_;
  jboolean isPartial = [tp getIsPartial];
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithBoolean_withNSString_withOrgScilabForgeJlatexmathTeXFormula_(isPartial, s, self);
  if (isPartial) {
    @try {
      [self->parser_ parse];
    }
    @catch (JavaLangException *e) {
      if (self->root_ == nil) {
        self->root_ = new_OrgScilabForgeJlatexmathEmptyAtom_init();
      }
    }
  }
  else {
    [self->parser_ parse];
  }
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_(OrgScilabForgeJlatexmathTeXParser *tp, NSString *s, NSString *textStyle) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_(self, tp, s, textStyle);
  return self;
}

void OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_withBoolean_withBoolean_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXParser *tp, NSString *s, NSString *textStyle, jboolean firstpass, jboolean space) {
  (void) NSObject_init(self);
  self->middle_ = new_JavaUtilLinkedList_init();
  self->root_ = nil;
  self->textStyle_ = nil;
  self->isColored_ = NO;
  self->textStyle_ = textStyle;
  self->jlmXMLMap_ = ((OrgScilabForgeJlatexmathTeXFormula *) nil_chk(((OrgScilabForgeJlatexmathTeXParser *) nil_chk(tp))->formula_))->jlmXMLMap_;
  jboolean isPartial = [tp getIsPartial];
  self->parser_ = new_OrgScilabForgeJlatexmathTeXParser_initWithBoolean_withNSString_withOrgScilabForgeJlatexmathTeXFormula_withBoolean_withBoolean_(isPartial, s, self, firstpass, space);
  if (isPartial) {
    @try {
      [self->parser_ parse];
    }
    @catch (JavaLangException *e) {
      if (self->root_ == nil) {
        self->root_ = new_OrgScilabForgeJlatexmathEmptyAtom_init();
      }
    }
  }
  else {
    [self->parser_ parse];
  }
}

OrgScilabForgeJlatexmathTeXFormula *new_OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_withBoolean_withBoolean_(OrgScilabForgeJlatexmathTeXParser *tp, NSString *s, NSString *textStyle, jboolean firstpass, jboolean space) {
  OrgScilabForgeJlatexmathTeXFormula *self = [OrgScilabForgeJlatexmathTeXFormula alloc];
  OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXParser_withNSString_withNSString_withBoolean_withBoolean_(self, tp, s, textStyle, firstpass, space);
  return self;
}

OrgScilabForgeJlatexmathTeXFormula *OrgScilabForgeJlatexmathTeXFormula_getAsTextWithNSString_withInt_(NSString *text, jint alignment) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathTeXFormula *formula = new_OrgScilabForgeJlatexmathTeXFormula_init();
  if (text == nil || [@"" isEqual:text]) {
    (void) [formula addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathEmptyAtom_init()];
    return formula;
  }
  IOSObjectArray *arr = [((NSString *) nil_chk(text)) split:@"\n|\\\\\\\\|\\\\cr"];
  OrgScilabForgeJlatexmathArrayOfAtoms *atoms = new_OrgScilabForgeJlatexmathArrayOfAtoms_init();
  {
    IOSObjectArray *a__ = arr;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *s = *b__++;
      OrgScilabForgeJlatexmathTeXFormula *f = new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_withNSString_withBoolean_withBoolean_(s, @"mathnormal", YES, NO);
      (void) [atoms addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathRomanAtom_initWithOrgScilabForgeJlatexmathAtom_(f->root_)];
      [atoms addRow];
    }
  }
  [atoms checkDimensions];
  (void) [formula addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathMatrixAtom_initWithBoolean_withOrgScilabForgeJlatexmathArrayOfAtoms_withInt_withInt_(NO, atoms, OrgScilabForgeJlatexmathMatrixAtom_ARRAY, alignment)];
  return formula;
}

OrgScilabForgeJlatexmathTeXFormula *OrgScilabForgeJlatexmathTeXFormula_getPartialTeXFormulaWithNSString_(NSString *formula) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathTeXFormula *f = new_OrgScilabForgeJlatexmathTeXFormula_init();
  if (formula == nil) {
    (void) [f addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathEmptyAtom_init()];
    return f;
  }
  OrgScilabForgeJlatexmathTeXParser *parser = new_OrgScilabForgeJlatexmathTeXParser_initWithBoolean_withNSString_withOrgScilabForgeJlatexmathTeXFormula_(YES, formula, f);
  @try {
    [parser parse];
  }
  @catch (JavaLangException *e) {
    if (f->root_ == nil) {
      f->root_ = new_OrgScilabForgeJlatexmathEmptyAtom_init();
    }
  }
  return f;
}

void OrgScilabForgeJlatexmathTeXFormula_registerFontsWithBoolean_(jboolean b) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathDefaultTeXFontParser_registerFontsWithBoolean_(b);
}

void OrgScilabForgeJlatexmathTeXFormula_addImplWithOrgScilabForgeJlatexmathTeXFormula_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXFormula *f) {
  if (((OrgScilabForgeJlatexmathTeXFormula *) nil_chk(f))->root_ != nil) {
    if ([f->root_ isKindOfClass:[OrgScilabForgeJlatexmathRowAtom class]]) (void) [self addWithOrgScilabForgeJlatexmathAtom:new_OrgScilabForgeJlatexmathRowAtom_initWithOrgScilabForgeJlatexmathAtom_(f->root_)];
    else (void) [self addWithOrgScilabForgeJlatexmathAtom:f->root_];
  }
}

void OrgScilabForgeJlatexmathTeXFormula_addPredefinedTeXFormulaWithId_(id xmlFile) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  [new_OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_initWithId_withNSString_(xmlFile, @"TeXFormula") parseWithJavaUtilMap:OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulas_];
}

void OrgScilabForgeJlatexmathTeXFormula_addPredefinedCommandsWithId_(id xmlFile) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  [new_OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_initWithId_withNSString_(xmlFile, @"Command") parseWithJavaUtilMap:OrgScilabForgeJlatexmathMacroInfo_get_Commands_()];
}

OrgScilabForgeJlatexmathBox *OrgScilabForgeJlatexmathTeXFormula_createBoxWithOrgScilabForgeJlatexmathTeXEnvironment_(OrgScilabForgeJlatexmathTeXFormula *self, OrgScilabForgeJlatexmathTeXEnvironment *style) {
  if (self->root_ == nil) return new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, 0, 0, 0);
  else return [self->root_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:style];
}

OrgScilabForgeJlatexmathDefaultTeXFont *OrgScilabForgeJlatexmathTeXFormula_createFontWithFloat_withInt_(OrgScilabForgeJlatexmathTeXFormula *self, jfloat size, jint type) {
  OrgScilabForgeJlatexmathDefaultTeXFont *dtf = new_OrgScilabForgeJlatexmathDefaultTeXFont_initWithFloat_(size);
  if (type == 0) {
    [dtf setSsWithBoolean:NO];
  }
  if ((type & OrgScilabForgeJlatexmathTeXFormula_ROMAN) != 0) {
    [dtf setRomanWithBoolean:YES];
  }
  if ((type & OrgScilabForgeJlatexmathTeXFormula_TYPEWRITER) != 0) {
    [dtf setTtWithBoolean:YES];
  }
  if ((type & OrgScilabForgeJlatexmathTeXFormula_SANSSERIF) != 0) {
    [dtf setSsWithBoolean:YES];
  }
  if ((type & OrgScilabForgeJlatexmathTeXFormula_ITALIC) != 0) {
    [dtf setItWithBoolean:YES];
  }
  if ((type & OrgScilabForgeJlatexmathTeXFormula_BOLD) != 0) {
    [dtf setBoldWithBoolean:YES];
  }
  return dtf;
}

id<OrgScilabForgeJlatexmathPlatformGraphicsImage> OrgScilabForgeJlatexmathTeXFormula_createBufferedImageWithNSString_withInt_withFloat_withOrgScilabForgeJlatexmathPlatformGraphicsColor_withOrgScilabForgeJlatexmathPlatformGraphicsColor_(NSString *formula, jint style, jfloat size, id<OrgScilabForgeJlatexmathPlatformGraphicsColor> fg, id<OrgScilabForgeJlatexmathPlatformGraphicsColor> bg) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathTeXFormula *f = new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_(formula);
  OrgScilabForgeJlatexmathTeXIcon *icon = [f createTeXIconWithInt:style withFloat:size];
  [((OrgScilabForgeJlatexmathTeXIcon *) nil_chk(icon)) setInsetsWithOrgScilabForgeJlatexmathPlatformGraphicsInsets:new_OrgScilabForgeJlatexmathPlatformGraphicsInsets_initWithInt_withInt_withInt_withInt_(2, 2, 2, 2)];
  jint w = [icon getIconWidth], h = [icon getIconHeight];
  id<OrgScilabForgeJlatexmathPlatformGraphicsImage> image = [new_OrgScilabForgeJlatexmathPlatformGraphics_init() createImageWithInt:w withInt:h withInt:bg == nil ? OrgScilabForgeJlatexmathPlatformGraphicsImage_TYPE_INT_ARGB : OrgScilabForgeJlatexmathPlatformGraphicsImage_TYPE_INT_RGB];
  id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface> g2 = [((id<OrgScilabForgeJlatexmathPlatformGraphicsImage>) nil_chk(image)) createGraphics2D];
  if (bg != nil) {
    [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) setColorWithOrgScilabForgeJlatexmathPlatformGraphicsColor:bg];
    [g2 fillRectWithInt:0 withInt:0 withInt:w withInt:h];
  }
  [icon setForegroundWithOrgScilabForgeJlatexmathPlatformGraphicsColor:fg == nil ? OrgScilabForgeJlatexmathColorUtil_get_BLACK_() : fg];
  [icon paintIconWithOrgScilabForgeJlatexmathPlatformGraphicsHasForegroundColor:nil withOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withInt:0 withInt:0];
  [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) dispose];
  return image;
}

OrgScilabForgeJlatexmathTeXFormula *OrgScilabForgeJlatexmathTeXFormula_getWithNSString_(NSString *name) {
  OrgScilabForgeJlatexmathTeXFormula_initialize();
  OrgScilabForgeJlatexmathTeXFormula *formula = [((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulas_)) getWithId:name];
  if (formula == nil) {
    NSString *f = [((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulasAsString_)) getWithId:name];
    if (f == nil) {
      @throw new_OrgScilabForgeJlatexmathExceptionFormulaNotFoundException_initWithNSString_(name);
    }
    OrgScilabForgeJlatexmathTeXFormula *tf = new_OrgScilabForgeJlatexmathTeXFormula_initWithNSString_(f);
    (void) [OrgScilabForgeJlatexmathTeXFormula_predefinedTeXFormulas_ putWithId:name withId:tf];
    return tf;
  }
  else {
    return new_OrgScilabForgeJlatexmathTeXFormula_initWithOrgScilabForgeJlatexmathTeXFormula_(formula);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormula)

@implementation OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setStyleWithInt:(jint)style {
  self->style_ = JavaLangInteger_valueOfWithInt_(style);
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setSizeWithFloat:(jfloat)size {
  self->size_ = JavaLangFloat_valueOfWithFloat_(size);
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setTypeWithInt:(jint)type {
  self->type_ = JavaLangInteger_valueOfWithInt_(type);
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setFGColorWithOrgScilabForgeJlatexmathPlatformGraphicsColor:(id<OrgScilabForgeJlatexmathPlatformGraphicsColor>)fgcolor {
  self->fgcolor_ = fgcolor;
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setTrueValuesWithBoolean:(jboolean)trueValues {
  self->trueValues_ = trueValues;
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setWidthWithInt:(jint)widthUnit
                                                             withFloat:(jfloat)textWidth
                                                               withInt:(jint)align {
  self->widthUnit_ = JavaLangInteger_valueOfWithInt_(widthUnit);
  self->textWidth_ = JavaLangFloat_valueOfWithFloat_(textWidth);
  self->align_ = JavaLangInteger_valueOfWithInt_(align);
  trueValues_ = YES;
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setIsMaxWidthWithBoolean:(jboolean)isMaxWidth {
  if (widthUnit_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Cannot set 'isMaxWidth' without having specified a width!");
  }
  if (isMaxWidth) {
    self->align_ = JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_ALIGN_LEFT);
  }
  self->isMaxWidth_ = isMaxWidth;
  return self;
}

- (OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *)setInterLineSpacingWithInt:(jint)interLineUnit
                                                                        withFloat:(jfloat)interLineSpacing {
  if (widthUnit_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Cannot set inter line spacing without having specified a width!");
  }
  self->interLineUnit_ = JavaLangInteger_valueOfWithInt_(interLineUnit);
  self->interLineSpacing_ = JavaLangFloat_valueOfWithFloat_(interLineSpacing);
  return self;
}

- (OrgScilabForgeJlatexmathTeXIcon *)build {
  if (style_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"A style is required. Use setStyle()");
  }
  if (size_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"A size is required. Use setStyle()");
  }
  OrgScilabForgeJlatexmathDefaultTeXFont *font = (type_ == nil) ? new_OrgScilabForgeJlatexmathDefaultTeXFont_initWithFloat_([((JavaLangFloat *) nil_chk(size_)) floatValue]) : OrgScilabForgeJlatexmathTeXFormula_createFontWithFloat_withInt_(this$0_, [((JavaLangFloat *) nil_chk(size_)) floatValue], [type_ intValue]);
  OrgScilabForgeJlatexmathTeXEnvironment *te;
  if (widthUnit_ != nil) {
    te = new_OrgScilabForgeJlatexmathTeXEnvironment_initWithInt_withOrgScilabForgeJlatexmathTeXFont_withInt_withFloat_([((JavaLangInteger *) nil_chk(style_)) intValue], font, [widthUnit_ intValue], [((JavaLangFloat *) nil_chk(textWidth_)) floatValue]);
  }
  else {
    te = new_OrgScilabForgeJlatexmathTeXEnvironment_initWithInt_withOrgScilabForgeJlatexmathTeXFont_([((JavaLangInteger *) nil_chk(style_)) intValue], font);
  }
  if (interLineUnit_ != nil) {
    [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(te)) setInterlineWithInt:[interLineUnit_ intValue] withFloat:[((JavaLangFloat *) nil_chk(interLineSpacing_)) floatValue]];
  }
  OrgScilabForgeJlatexmathBox *box = OrgScilabForgeJlatexmathTeXFormula_createBoxWithOrgScilabForgeJlatexmathTeXEnvironment_(this$0_, te);
  OrgScilabForgeJlatexmathTeXIcon *ti;
  if (widthUnit_ != nil) {
    OrgScilabForgeJlatexmathHorizontalBox *hb;
    if (interLineUnit_ != nil) {
      jfloat il = [((JavaLangFloat *) nil_chk(interLineSpacing_)) floatValue] * OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_([interLineUnit_ intValue], te);
      OrgScilabForgeJlatexmathBox *b = OrgScilabForgeJlatexmathBreakFormula_splitWithOrgScilabForgeJlatexmathBox_withFloat_withFloat_(box, [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(te)) getTextwidth], il);
      hb = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(b, isMaxWidth_ ? [((OrgScilabForgeJlatexmathBox *) nil_chk(b)) getWidth] : [te getTextwidth], [((JavaLangInteger *) nil_chk(align_)) intValue]);
    }
    else {
      hb = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(box, isMaxWidth_ ? [((OrgScilabForgeJlatexmathBox *) nil_chk(box)) getWidth] : [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(te)) getTextwidth], [((JavaLangInteger *) nil_chk(align_)) intValue]);
    }
    ti = new_OrgScilabForgeJlatexmathTeXIcon_initWithOrgScilabForgeJlatexmathBox_withFloat_withBoolean_(hb, [((JavaLangFloat *) nil_chk(size_)) floatValue], trueValues_);
  }
  else {
    ti = new_OrgScilabForgeJlatexmathTeXIcon_initWithOrgScilabForgeJlatexmathBox_withFloat_withBoolean_(box, [((JavaLangFloat *) nil_chk(size_)) floatValue], trueValues_);
  }
  if (fgcolor_ != nil) {
    [((OrgScilabForgeJlatexmathTeXIcon *) nil_chk(ti)) setForegroundWithOrgScilabForgeJlatexmathPlatformGraphicsColor:fgcolor_];
  }
  ((OrgScilabForgeJlatexmathTeXIcon *) nil_chk(ti))->isColored_ = ((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(te))->isColored_;
  return ti;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormula:(OrgScilabForgeJlatexmathTeXFormula *)outer$ {
  OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setStyleWithInt:", "setStyle", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "setSizeWithFloat:", "setSize", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "setTypeWithInt:", "setType", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "setFGColorWithOrgScilabForgeJlatexmathPlatformGraphicsColor:", "setFGColor", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "setTrueValuesWithBoolean:", "setTrueValues", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "setWidthWithInt:withFloat:withInt:", "setWidth", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "setIsMaxWidthWithBoolean:", "setIsMaxWidth", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "setInterLineSpacingWithInt:withFloat:", "setInterLineSpacing", "Lorg.scilab.forge.jlatexmath.TeXFormula$TeXIconBuilder;", 0x1, NULL, NULL },
    { "build", NULL, "Lorg.scilab.forge.jlatexmath.TeXIcon;", 0x1, NULL, NULL },
    { "initWithOrgScilabForgeJlatexmathTeXFormula:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.scilab.forge.jlatexmath.TeXFormula;", NULL, NULL,  },
    { "style_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL,  },
    { "size_", NULL, 0x2, "Ljava.lang.Float;", NULL, NULL,  },
    { "type_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL,  },
    { "fgcolor_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.platform.graphics.Color;", NULL, NULL,  },
    { "trueValues_", NULL, 0x2, "Z", NULL, NULL,  },
    { "widthUnit_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL,  },
    { "textWidth_", NULL, 0x2, "Ljava.lang.Float;", NULL, NULL,  },
    { "align_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL,  },
    { "isMaxWidth_", NULL, 0x2, "Z", NULL, NULL,  },
    { "interLineUnit_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL,  },
    { "interLineSpacing_", NULL, 0x2, "Ljava.lang.Float;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder = { 2, "TeXIconBuilder", "org.scilab.forge.jlatexmath", "TeXFormula", 0x1, 10, methods, 12, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder;
}

@end

void OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *self, OrgScilabForgeJlatexmathTeXFormula *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->trueValues_ = NO;
  self->isMaxWidth_ = NO;
}

OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *new_OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(OrgScilabForgeJlatexmathTeXFormula *outer$) {
  OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder *self = [OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder alloc];
  OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder_initWithOrgScilabForgeJlatexmathTeXFormula_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormula_TeXIconBuilder)

@implementation OrgScilabForgeJlatexmathTeXFormula_FontInfos

- (instancetype)initWithNSString:(NSString *)sansserif
                    withNSString:(NSString *)serif {
  OrgScilabForgeJlatexmathTeXFormula_FontInfos_initWithNSString_withNSString_(self, sansserif, serif);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "FontInfos", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sansserif_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "serif_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormula_FontInfos = { 2, "FontInfos", "org.scilab.forge.jlatexmath", "TeXFormula", 0x8, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormula_FontInfos;
}

@end

void OrgScilabForgeJlatexmathTeXFormula_FontInfos_initWithNSString_withNSString_(OrgScilabForgeJlatexmathTeXFormula_FontInfos *self, NSString *sansserif, NSString *serif) {
  (void) NSObject_init(self);
  self->sansserif_ = sansserif;
  self->serif_ = serif;
}

OrgScilabForgeJlatexmathTeXFormula_FontInfos *new_OrgScilabForgeJlatexmathTeXFormula_FontInfos_initWithNSString_withNSString_(NSString *sansserif, NSString *serif) {
  OrgScilabForgeJlatexmathTeXFormula_FontInfos *self = [OrgScilabForgeJlatexmathTeXFormula_FontInfos alloc];
  OrgScilabForgeJlatexmathTeXFormula_FontInfos_initWithNSString_withNSString_(self, sansserif, serif);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormula_FontInfos)
