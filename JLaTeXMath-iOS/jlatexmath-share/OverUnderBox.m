//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/OverUnderBox.java
//


#include "Box.h"
#include "Graphics2DInterface.h"
#include "J2ObjC_source.h"
#include "OverUnderBox.h"
#include "java/lang/Math.h"

@interface OrgScilabForgeJlatexmathOverUnderBox () {
 @public
  OrgScilabForgeJlatexmathBox *base_;
  OrgScilabForgeJlatexmathBox *del_;
  OrgScilabForgeJlatexmathBox *script_;
  jfloat kern_;
  jboolean over_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathOverUnderBox, base_, OrgScilabForgeJlatexmathBox *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathOverUnderBox, del_, OrgScilabForgeJlatexmathBox *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathOverUnderBox, script_, OrgScilabForgeJlatexmathBox *)

@implementation OrgScilabForgeJlatexmathOverUnderBox

- (instancetype)initWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b
                    withOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)d
                    withOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)script
                                          withFloat:(jfloat)kern
                                        withBoolean:(jboolean)over {
  OrgScilabForgeJlatexmathOverUnderBox_initWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withFloat_withBoolean_(self, b, d, script, kern, over);
  return self;
}

- (void)drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:(id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>)g2
                                                                  withFloat:(jfloat)x
                                                                  withFloat:(jfloat)y {
  [self drawDebugWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withFloat:x withFloat:y];
  [((OrgScilabForgeJlatexmathBox *) nil_chk(base_)) drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withFloat:x withFloat:y];
  jfloat yVar = y - base_->height_ - [((OrgScilabForgeJlatexmathBox *) nil_chk(del_)) getWidth];
  [del_ setDepthWithFloat:[del_ getHeight] + [del_ getDepth]];
  [del_ setHeightWithFloat:0];
  if (over_) {
    jdouble transX = x + (del_->height_ + del_->depth_) * 0.75, transY = yVar;
    [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) saveTransformation];
    [g2 translateWithDouble:transX withDouble:transY];
    [g2 rotateWithDouble:JavaLangMath_PI / 2];
    [del_ drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withFloat:0 withFloat:0];
    [g2 restoreTransformation];
    if (script_ != nil) {
      [script_ drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withFloat:x withFloat:yVar - kern_ - script_->depth_];
    }
  }
  yVar = y + base_->depth_;
  if (!over_) {
    jdouble transX = x + ([del_ getHeight] + del_->depth_) * 0.75, transY = yVar;
    [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) saveTransformation];
    [g2 translateWithDouble:transX withDouble:transY];
    [g2 rotateWithDouble:JavaLangMath_PI / 2];
    [del_ drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withFloat:0 withFloat:0];
    [g2 restoreTransformation];
    yVar += [del_ getWidth];
    if (script_ != nil) {
      [script_ drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withFloat:x withFloat:yVar + kern_ + script_->height_];
    }
  }
}

- (jint)getLastFontId {
  return [((OrgScilabForgeJlatexmathBox *) nil_chk(base_)) getLastFontId];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathBox:withOrgScilabForgeJlatexmathBox:withOrgScilabForgeJlatexmathBox:withFloat:withBoolean:", "OverUnderBox", NULL, 0x1, NULL, NULL },
    { "drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:withFloat:withFloat:", "draw", "V", 0x1, NULL, NULL },
    { "getLastFontId", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "base_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Box;", NULL, NULL,  },
    { "del_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Box;", NULL, NULL,  },
    { "script_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Box;", NULL, NULL,  },
    { "kern_", NULL, 0x12, "F", NULL, NULL,  },
    { "over_", NULL, 0x12, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathOverUnderBox = { 2, "OverUnderBox", "org.scilab.forge.jlatexmath", NULL, 0x1, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathOverUnderBox;
}

@end

void OrgScilabForgeJlatexmathOverUnderBox_initWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withFloat_withBoolean_(OrgScilabForgeJlatexmathOverUnderBox *self, OrgScilabForgeJlatexmathBox *b, OrgScilabForgeJlatexmathBox *d, OrgScilabForgeJlatexmathBox *script, jfloat kern, jboolean over) {
  (void) OrgScilabForgeJlatexmathBox_init(self);
  self->base_ = b;
  self->del_ = d;
  self->script_ = script;
  self->kern_ = kern;
  self->over_ = over;
  self->width_ = [((OrgScilabForgeJlatexmathBox *) nil_chk(b)) getWidth];
  self->height_ = b->height_ + (over ? [((OrgScilabForgeJlatexmathBox *) nil_chk(d)) getWidth] : 0) + (over && script != nil ? script->height_ + script->depth_ + kern : 0);
  self->depth_ = b->depth_ + (over ? 0 : [((OrgScilabForgeJlatexmathBox *) nil_chk(d)) getWidth]) + (!over && script != nil ? script->height_ + script->depth_ + kern : 0);
}

OrgScilabForgeJlatexmathOverUnderBox *new_OrgScilabForgeJlatexmathOverUnderBox_initWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withFloat_withBoolean_(OrgScilabForgeJlatexmathBox *b, OrgScilabForgeJlatexmathBox *d, OrgScilabForgeJlatexmathBox *script, jfloat kern, jboolean over) {
  OrgScilabForgeJlatexmathOverUnderBox *self = [OrgScilabForgeJlatexmathOverUnderBox alloc];
  OrgScilabForgeJlatexmathOverUnderBox_initWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withFloat_withBoolean_(self, b, d, script, kern, over);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathOverUnderBox)
