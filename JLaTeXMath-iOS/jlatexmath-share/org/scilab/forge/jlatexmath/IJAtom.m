//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/JLaTeXMath-iOS/JLaTeXMath-iOS/jlatexmath-share/org/scilab/forge/jlatexmath/IJAtom.java
//


#include "J2ObjC_source.h"
#include "org/scilab/forge/jlatexmath/Atom.h"
#include "org/scilab/forge/jlatexmath/Box.h"
#include "org/scilab/forge/jlatexmath/Char.h"
#include "org/scilab/forge/jlatexmath/CharBox.h"
#include "org/scilab/forge/jlatexmath/HorizontalBox.h"
#include "org/scilab/forge/jlatexmath/IJAtom.h"
#include "org/scilab/forge/jlatexmath/SpaceAtom.h"
#include "org/scilab/forge/jlatexmath/TeXConstants.h"
#include "org/scilab/forge/jlatexmath/TeXEnvironment.h"
#include "org/scilab/forge/jlatexmath/TeXFont.h"

@interface OrgScilabForgeJlatexmathIJAtom () {
 @public
  jboolean upper_;
}

@end

@implementation OrgScilabForgeJlatexmathIJAtom

- (instancetype)initWithBoolean:(jboolean)upper {
  OrgScilabForgeJlatexmathIJAtom_initWithBoolean_(self, upper);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  OrgScilabForgeJlatexmathCharBox *I = [new_OrgScilabForgeJlatexmathCharBox_initWithOrgScilabForgeJlatexmathChar_([((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont])) getCharWithChar:upper_ ? 'I' : 'i' withNSString:@"mathnormal" withInt:[env getStyle]]) autorelease];
  OrgScilabForgeJlatexmathCharBox *J = [new_OrgScilabForgeJlatexmathCharBox_initWithOrgScilabForgeJlatexmathChar_([((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([env getTeXFont])) getCharWithChar:upper_ ? 'J' : 'j' withNSString:@"mathnormal" withInt:[env getStyle]]) autorelease];
  OrgScilabForgeJlatexmathHorizontalBox *hb = [new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(I) autorelease];
  [hb addWithOrgScilabForgeJlatexmathBox:[((OrgScilabForgeJlatexmathSpaceAtom *) [new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_EM, -0.065f, 0, 0) autorelease]) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]];
  [hb addWithOrgScilabForgeJlatexmathBox:J];
  return hb;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:", "IJAtom", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "upper_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathIJAtom = { 2, "IJAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathIJAtom;
}

@end

void OrgScilabForgeJlatexmathIJAtom_initWithBoolean_(OrgScilabForgeJlatexmathIJAtom *self, jboolean upper) {
  OrgScilabForgeJlatexmathAtom_init(self);
  self->upper_ = upper;
}

OrgScilabForgeJlatexmathIJAtom *new_OrgScilabForgeJlatexmathIJAtom_initWithBoolean_(jboolean upper) {
  OrgScilabForgeJlatexmathIJAtom *self = [OrgScilabForgeJlatexmathIJAtom alloc];
  OrgScilabForgeJlatexmathIJAtom_initWithBoolean_(self, upper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathIJAtom)
