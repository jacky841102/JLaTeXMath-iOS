//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/JLaTeXMath-iOS/JLaTeXMath-iOS/jlatexmath-share/org/scilab/forge/jlatexmath/CharAtom.java
//


#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "org/scilab/forge/jlatexmath/Box.h"
#include "org/scilab/forge/jlatexmath/Char.h"
#include "org/scilab/forge/jlatexmath/CharAtom.h"
#include "org/scilab/forge/jlatexmath/CharBox.h"
#include "org/scilab/forge/jlatexmath/CharFont.h"
#include "org/scilab/forge/jlatexmath/CharSymbol.h"
#include "org/scilab/forge/jlatexmath/ScaleBox.h"
#include "org/scilab/forge/jlatexmath/TeXConstants.h"
#include "org/scilab/forge/jlatexmath/TeXEnvironment.h"
#include "org/scilab/forge/jlatexmath/TeXFont.h"

@interface OrgScilabForgeJlatexmathCharAtom () {
 @public
  jchar c_;
  NSString *textStyle_;
}

- (OrgScilabForgeJlatexmathChar *)getCharWithOrgScilabForgeJlatexmathTeXFont:(id<OrgScilabForgeJlatexmathTeXFont>)tf
                                                                     withInt:(jint)style
                                                                 withBoolean:(jboolean)smallCap;

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathCharAtom, textStyle_, NSString *)

__attribute__((unused)) static OrgScilabForgeJlatexmathChar *OrgScilabForgeJlatexmathCharAtom_getCharWithOrgScilabForgeJlatexmathTeXFont_withInt_withBoolean_(OrgScilabForgeJlatexmathCharAtom *self, id<OrgScilabForgeJlatexmathTeXFont> tf, jint style, jboolean smallCap);

@implementation OrgScilabForgeJlatexmathCharAtom

- (instancetype)initWithChar:(jchar)c
                withNSString:(NSString *)textStyle {
  OrgScilabForgeJlatexmathCharAtom_initWithChar_withNSString_(self, c, textStyle);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  if (textStyle_ == nil) {
    NSString *ts = [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTextStyle];
    if (ts != nil) {
      OrgScilabForgeJlatexmathCharAtom_set_textStyle_(self, ts);
    }
  }
  jboolean smallCap = [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSmallCap];
  OrgScilabForgeJlatexmathChar *ch = OrgScilabForgeJlatexmathCharAtom_getCharWithOrgScilabForgeJlatexmathTeXFont_withInt_withBoolean_(self, [env getTeXFont], [env getStyle], smallCap);
  OrgScilabForgeJlatexmathBox *box = [new_OrgScilabForgeJlatexmathCharBox_initWithOrgScilabForgeJlatexmathChar_(ch) autorelease];
  if (smallCap && JavaLangCharacter_isLowerCaseWithChar_(c_)) {
    box = [new_OrgScilabForgeJlatexmathScaleBox_initWithOrgScilabForgeJlatexmathBox_withDouble_withDouble_(box, 0.8f, 0.8f) autorelease];
  }
  return box;
}

- (jchar)getCharacter {
  return c_;
}

- (OrgScilabForgeJlatexmathChar *)getCharWithOrgScilabForgeJlatexmathTeXFont:(id<OrgScilabForgeJlatexmathTeXFont>)tf
                                                                     withInt:(jint)style
                                                                 withBoolean:(jboolean)smallCap {
  return OrgScilabForgeJlatexmathCharAtom_getCharWithOrgScilabForgeJlatexmathTeXFont_withInt_withBoolean_(self, tf, style, smallCap);
}

- (OrgScilabForgeJlatexmathCharFont *)getCharFontWithOrgScilabForgeJlatexmathTeXFont:(id<OrgScilabForgeJlatexmathTeXFont>)tf {
  return [((OrgScilabForgeJlatexmathChar *) nil_chk(OrgScilabForgeJlatexmathCharAtom_getCharWithOrgScilabForgeJlatexmathTeXFont_withInt_withBoolean_(self, tf, OrgScilabForgeJlatexmathTeXConstants_STYLE_DISPLAY, NO))) getCharFont];
}

- (NSString *)description {
  return JreStrcat("$CC", @"CharAtom: '", c_, '\'');
}

- (void)dealloc {
  RELEASE_(textStyle_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithChar:withNSString:", "CharAtom", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
    { "getCharacter", NULL, "C", 0x1, NULL, NULL },
    { "getCharWithOrgScilabForgeJlatexmathTeXFont:withInt:withBoolean:", "getChar", "Lorg.scilab.forge.jlatexmath.Char;", 0x2, NULL, NULL },
    { "getCharFontWithOrgScilabForgeJlatexmathTeXFont:", "getCharFont", "Lorg.scilab.forge.jlatexmath.CharFont;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "c_", NULL, 0x12, "C", NULL, NULL,  },
    { "textStyle_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathCharAtom = { 2, "CharAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathCharAtom;
}

@end

void OrgScilabForgeJlatexmathCharAtom_initWithChar_withNSString_(OrgScilabForgeJlatexmathCharAtom *self, jchar c, NSString *textStyle) {
  OrgScilabForgeJlatexmathCharSymbol_init(self);
  self->c_ = c;
  OrgScilabForgeJlatexmathCharAtom_set_textStyle_(self, textStyle);
}

OrgScilabForgeJlatexmathCharAtom *new_OrgScilabForgeJlatexmathCharAtom_initWithChar_withNSString_(jchar c, NSString *textStyle) {
  OrgScilabForgeJlatexmathCharAtom *self = [OrgScilabForgeJlatexmathCharAtom alloc];
  OrgScilabForgeJlatexmathCharAtom_initWithChar_withNSString_(self, c, textStyle);
  return self;
}

OrgScilabForgeJlatexmathChar *OrgScilabForgeJlatexmathCharAtom_getCharWithOrgScilabForgeJlatexmathTeXFont_withInt_withBoolean_(OrgScilabForgeJlatexmathCharAtom *self, id<OrgScilabForgeJlatexmathTeXFont> tf, jint style, jboolean smallCap) {
  jchar chr = self->c_;
  if (smallCap) {
    if (JavaLangCharacter_isLowerCaseWithChar_(self->c_)) {
      chr = JavaLangCharacter_toUpperCaseWithChar_(self->c_);
    }
  }
  if (self->textStyle_ == nil) {
    return [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getDefaultCharWithChar:chr withInt:style];
  }
  else {
    return [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getCharWithChar:chr withNSString:self->textStyle_ withInt:style];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathCharAtom)
