//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/JLaTeXMath-iOS/JLaTeXMath-iOS/jlatexmath-share/org/scilab/forge/jlatexmath/NthRoot.java
//


#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/scilab/forge/jlatexmath/Atom.h"
#include "org/scilab/forge/jlatexmath/Box.h"
#include "org/scilab/forge/jlatexmath/Char.h"
#include "org/scilab/forge/jlatexmath/DelimiterFactory.h"
#include "org/scilab/forge/jlatexmath/EmptyAtom.h"
#include "org/scilab/forge/jlatexmath/HorizontalBox.h"
#include "org/scilab/forge/jlatexmath/NthRoot.h"
#include "org/scilab/forge/jlatexmath/OverBar.h"
#include "org/scilab/forge/jlatexmath/SpaceAtom.h"
#include "org/scilab/forge/jlatexmath/StrutBox.h"
#include "org/scilab/forge/jlatexmath/TeXConstants.h"
#include "org/scilab/forge/jlatexmath/TeXEnvironment.h"
#include "org/scilab/forge/jlatexmath/TeXFont.h"

#define OrgScilabForgeJlatexmathNthRoot_FACTOR 0.55f

@interface OrgScilabForgeJlatexmathNthRoot () {
 @public
  OrgScilabForgeJlatexmathAtom *base_;
  OrgScilabForgeJlatexmathAtom *root_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathNthRoot, base_, OrgScilabForgeJlatexmathAtom *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathNthRoot, root_, OrgScilabForgeJlatexmathAtom *)

static NSString *OrgScilabForgeJlatexmathNthRoot_sqrtSymbol_ = @"sqrt";
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathNthRoot, sqrtSymbol_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathNthRoot, FACTOR, jfloat)

@implementation OrgScilabForgeJlatexmathNthRoot

- (instancetype)initWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)base
                    withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)root {
  OrgScilabForgeJlatexmathNthRoot_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(self, base, root);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  id<OrgScilabForgeJlatexmathTeXFont> tf = [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont];
  jint style = [env getStyle];
  jfloat clr, drt = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getDefaultRuleThicknessWithInt:style];
  if (style < OrgScilabForgeJlatexmathTeXConstants_STYLE_TEXT) clr = [tf getXHeightWithInt:style withInt:[((OrgScilabForgeJlatexmathChar *) nil_chk([tf getCharWithNSString:OrgScilabForgeJlatexmathNthRoot_sqrtSymbol_ withInt:style])) getFontCode]];
  else clr = drt;
  clr = drt + JavaLangMath_absWithFloat_(clr) / 4;
  OrgScilabForgeJlatexmathBox *bs = [((OrgScilabForgeJlatexmathAtom *) nil_chk(base_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:[env crampStyle]];
  OrgScilabForgeJlatexmathHorizontalBox *b = [new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(bs) autorelease];
  [b addWithOrgScilabForgeJlatexmathBox:[((OrgScilabForgeJlatexmathSpaceAtom *) [new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_MU, 1, 0, 0) autorelease]) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:[env crampStyle]]];
  jfloat totalH = [b getHeight] + [b getDepth];
  OrgScilabForgeJlatexmathBox *rootSign = OrgScilabForgeJlatexmathDelimiterFactory_createWithNSString_withOrgScilabForgeJlatexmathTeXEnvironment_withFloat_(OrgScilabForgeJlatexmathNthRoot_sqrtSymbol_, env, totalH + clr + drt);
  jfloat delta = [((OrgScilabForgeJlatexmathBox *) nil_chk(rootSign)) getDepth] - (totalH + clr);
  clr += delta / 2;
  [rootSign setShiftWithFloat:-([b getHeight] + clr)];
  OrgScilabForgeJlatexmathOverBar *ob = [new_OrgScilabForgeJlatexmathOverBar_initWithOrgScilabForgeJlatexmathBox_withFloat_withFloat_(b, clr, [rootSign getHeight]) autorelease];
  [ob setShiftWithFloat:-([b getHeight] + clr + drt)];
  OrgScilabForgeJlatexmathHorizontalBox *squareRoot = [new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(rootSign) autorelease];
  [squareRoot addWithOrgScilabForgeJlatexmathBox:ob];
  if (root_ == nil) return squareRoot;
  else {
    OrgScilabForgeJlatexmathBox *r = [root_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:[env rootStyle]];
    jfloat bottomShift = OrgScilabForgeJlatexmathNthRoot_FACTOR * ([squareRoot getHeight] + [squareRoot getDepth]);
    [r setShiftWithFloat:[squareRoot getDepth] - [((OrgScilabForgeJlatexmathBox *) nil_chk(r)) getDepth] - bottomShift];
    OrgScilabForgeJlatexmathBox *negativeKern = [((OrgScilabForgeJlatexmathSpaceAtom *) [new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_MU, -10.0f, 0, 0) autorelease]) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env];
    OrgScilabForgeJlatexmathBox *res = [new_OrgScilabForgeJlatexmathHorizontalBox_init() autorelease];
    jfloat pos = [r getWidth] + [((OrgScilabForgeJlatexmathBox *) nil_chk(negativeKern)) getWidth];
    if (pos < 0) [res addWithOrgScilabForgeJlatexmathBox:[new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(-pos, 0, 0, 0) autorelease]];
    [res addWithOrgScilabForgeJlatexmathBox:r];
    [res addWithOrgScilabForgeJlatexmathBox:negativeKern];
    [res addWithOrgScilabForgeJlatexmathBox:squareRoot];
    return res;
  }
}

- (void)dealloc {
  RELEASE_(base_);
  RELEASE_(root_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathAtom:withOrgScilabForgeJlatexmathAtom:", "NthRoot", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sqrtSymbol_", NULL, 0x1a, "Ljava.lang.String;", &OrgScilabForgeJlatexmathNthRoot_sqrtSymbol_, NULL,  },
    { "FACTOR_", NULL, 0x1a, "F", NULL, NULL, .constantValue.asFloat = OrgScilabForgeJlatexmathNthRoot_FACTOR },
    { "base_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "root_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathNthRoot = { 2, "NthRoot", "org.scilab.forge.jlatexmath", NULL, 0x1, 2, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathNthRoot;
}

@end

void OrgScilabForgeJlatexmathNthRoot_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathNthRoot *self, OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *root) {
  OrgScilabForgeJlatexmathAtom_init(self);
  OrgScilabForgeJlatexmathNthRoot_set_base_(self, base == nil ? [new_OrgScilabForgeJlatexmathEmptyAtom_init() autorelease] : base);
  OrgScilabForgeJlatexmathNthRoot_set_root_(self, root == nil ? [new_OrgScilabForgeJlatexmathEmptyAtom_init() autorelease] : root);
}

OrgScilabForgeJlatexmathNthRoot *new_OrgScilabForgeJlatexmathNthRoot_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *root) {
  OrgScilabForgeJlatexmathNthRoot *self = [OrgScilabForgeJlatexmathNthRoot alloc];
  OrgScilabForgeJlatexmathNthRoot_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(self, base, root);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathNthRoot)
