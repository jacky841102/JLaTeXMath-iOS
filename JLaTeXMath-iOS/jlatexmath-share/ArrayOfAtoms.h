//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/ArrayOfAtoms.java
//

#ifndef _OrgScilabForgeJlatexmathArrayOfAtoms_H_
#define _OrgScilabForgeJlatexmathArrayOfAtoms_H_

#include "J2ObjC_header.h"
#include "TeXFormula.h"

@class JavaUtilLinkedList;
@class OrgScilabForgeJlatexmathVRowAtom;

@interface OrgScilabForgeJlatexmathArrayOfAtoms : OrgScilabForgeJlatexmathTeXFormula {
 @public
  JavaUtilLinkedList *array_;
  jint col_, row_;
}

#pragma mark Public

- (instancetype)init;

- (void)addCol;

- (void)addColWithInt:(jint)n;

- (void)addRow;

- (void)checkDimensions;

- (OrgScilabForgeJlatexmathVRowAtom *)getAsVRow;

- (jint)getCols;

- (jint)getRows;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathArrayOfAtoms)

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathArrayOfAtoms, array_, JavaUtilLinkedList *)

FOUNDATION_EXPORT void OrgScilabForgeJlatexmathArrayOfAtoms_init(OrgScilabForgeJlatexmathArrayOfAtoms *self);

FOUNDATION_EXPORT OrgScilabForgeJlatexmathArrayOfAtoms *new_OrgScilabForgeJlatexmathArrayOfAtoms_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathArrayOfAtoms)

#endif // _OrgScilabForgeJlatexmathArrayOfAtoms_H_
