//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/BitSet.java
//


#include "BitSet.h"
#include "J2ObjC_source.h"

@interface OrgScilabForgeJlatexmathBitSet () {
 @public
  jint bitSet_;
}

@end

@implementation OrgScilabForgeJlatexmathBitSet

- (void)setBitWithInt:(jint)bitIndex {
  bitSet_ |= (LShift32(1, bitIndex));
}

- (jboolean)getBitWithInt:(jint)bitIndex {
  return ((RShift32(bitSet_, bitIndex)) & 1) == 1;
}

- (instancetype)init {
  OrgScilabForgeJlatexmathBitSet_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setBitWithInt:", "setBit", "V", 0x1, NULL, NULL },
    { "getBitWithInt:", "getBit", "Z", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bitSet_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathBitSet = { 2, "BitSet", "org.scilab.forge.jlatexmath", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathBitSet;
}

@end

void OrgScilabForgeJlatexmathBitSet_init(OrgScilabForgeJlatexmathBitSet *self) {
  (void) NSObject_init(self);
  self->bitSet_ = 0;
}

OrgScilabForgeJlatexmathBitSet *new_OrgScilabForgeJlatexmathBitSet_init() {
  OrgScilabForgeJlatexmathBitSet *self = [OrgScilabForgeJlatexmathBitSet alloc];
  OrgScilabForgeJlatexmathBitSet_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathBitSet)
