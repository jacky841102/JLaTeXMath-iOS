//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/VerticalBox.java
//


#include "Box.h"
#include "Graphics2DInterface.h"
#include "J2ObjC_source.h"
#include "StrutBox.h"
#include "TeXConstants.h"
#include "TeXFont.h"
#include "VerticalBox.h"
#include "java/lang/Float.h"
#include "java/lang/Math.h"
#include "java/util/LinkedList.h"
#include "java/util/ListIterator.h"

static void (*OrgScilabForgeJlatexmathVerticalBox_super$_addWithInt_withOrgScilabForgeJlatexmathBox_)(id, SEL, jint, id);

static void (*OrgScilabForgeJlatexmathVerticalBox_super$_addWithOrgScilabForgeJlatexmathBox_)(id, SEL, id);

@interface OrgScilabForgeJlatexmathVerticalBox () {
 @public
  jfloat leftMostPos_;
  jfloat rightMostPos_;
}

- (void)recalculateWidthWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b;

@end

__attribute__((unused)) static void OrgScilabForgeJlatexmathVerticalBox_recalculateWidthWithOrgScilabForgeJlatexmathBox_(OrgScilabForgeJlatexmathVerticalBox *self, OrgScilabForgeJlatexmathBox *b);

J2OBJC_INITIALIZED_DEFN(OrgScilabForgeJlatexmathVerticalBox)

@implementation OrgScilabForgeJlatexmathVerticalBox

- (instancetype)init {
  OrgScilabForgeJlatexmathVerticalBox_init(self);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b
                                          withFloat:(jfloat)rest
                                            withInt:(jint)alignment {
  OrgScilabForgeJlatexmathVerticalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(self, b, rest, alignment);
  return self;
}

- (void)addWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b {
  [super addWithOrgScilabForgeJlatexmathBox:b];
  if ([((JavaUtilLinkedList *) nil_chk(children_)) size] == 1) {
    height_ = ((OrgScilabForgeJlatexmathBox *) nil_chk(b))->height_;
    depth_ = b->depth_;
  }
  else depth_ += ((OrgScilabForgeJlatexmathBox *) nil_chk(b))->height_ + b->depth_;
  OrgScilabForgeJlatexmathVerticalBox_recalculateWidthWithOrgScilabForgeJlatexmathBox_(self, b);
}

- (void)addWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b
                                 withFloat:(jfloat)interline {
  if ([((JavaUtilLinkedList *) nil_chk(children_)) size] >= 1) {
    [self addWithOrgScilabForgeJlatexmathBox:new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, interline, 0, 0)];
  }
  [self addWithOrgScilabForgeJlatexmathBox:b];
}

- (void)recalculateWidthWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b {
  OrgScilabForgeJlatexmathVerticalBox_recalculateWidthWithOrgScilabForgeJlatexmathBox_(self, b);
}

- (void)addWithInt:(jint)pos
withOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b {
  [super addWithInt:pos withOrgScilabForgeJlatexmathBox:b];
  if (pos == 0) {
    depth_ += ((OrgScilabForgeJlatexmathBox *) nil_chk(b))->depth_ + height_;
    height_ = b->height_;
  }
  else depth_ += ((OrgScilabForgeJlatexmathBox *) nil_chk(b))->height_ + b->depth_;
  OrgScilabForgeJlatexmathVerticalBox_recalculateWidthWithOrgScilabForgeJlatexmathBox_(self, b);
}

- (void)drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:(id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>)g2
                                                                  withFloat:(jfloat)x
                                                                  withFloat:(jfloat)y {
  jfloat yPos = y - height_;
  for (OrgScilabForgeJlatexmathBox * __strong b in nil_chk(children_)) {
    yPos += [((OrgScilabForgeJlatexmathBox *) nil_chk(b)) getHeight];
    [b drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:g2 withFloat:x + [b getShift] - leftMostPos_ withFloat:yPos];
    yPos += [b getDepth];
  }
}

- (jint)getSize {
  return [((JavaUtilLinkedList *) nil_chk(children_)) size];
}

- (jint)getLastFontId {
  jint fontId = OrgScilabForgeJlatexmathTeXFont_NO_FONT;
  for (id<JavaUtilListIterator> it = [children_ listIteratorWithInt:[((JavaUtilLinkedList *) nil_chk(children_)) size]]; fontId == OrgScilabForgeJlatexmathTeXFont_NO_FONT && [((id<JavaUtilListIterator>) nil_chk(it)) hasPrevious]; ) fontId = [((OrgScilabForgeJlatexmathBox *) nil_chk(((OrgScilabForgeJlatexmathBox *) check_class_cast([((id<JavaUtilListIterator>) nil_chk(it)) previous], [OrgScilabForgeJlatexmathBox class])))) getLastFontId];
  return fontId;
}

+ (void)initialize {
  if (self == [OrgScilabForgeJlatexmathVerticalBox class]) {
    OrgScilabForgeJlatexmathVerticalBox_super$_addWithOrgScilabForgeJlatexmathBox_ = (void (*)(id, SEL, id))[OrgScilabForgeJlatexmathBox instanceMethodForSelector:@selector(addWithOrgScilabForgeJlatexmathBox:)];
    OrgScilabForgeJlatexmathVerticalBox_super$_addWithInt_withOrgScilabForgeJlatexmathBox_ = (void (*)(id, SEL, jint, id))[OrgScilabForgeJlatexmathBox instanceMethodForSelector:@selector(addWithInt:withOrgScilabForgeJlatexmathBox:)];
    J2OBJC_SET_INITIALIZED(OrgScilabForgeJlatexmathVerticalBox)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "VerticalBox", NULL, 0x1, NULL, NULL },
    { "initWithOrgScilabForgeJlatexmathBox:withFloat:withInt:", "VerticalBox", NULL, 0x1, NULL, NULL },
    { "addWithOrgScilabForgeJlatexmathBox:", "add", "V", 0x11, NULL, NULL },
    { "addWithOrgScilabForgeJlatexmathBox:withFloat:", "add", "V", 0x11, NULL, NULL },
    { "recalculateWidthWithOrgScilabForgeJlatexmathBox:", "recalculateWidth", "V", 0x2, NULL, NULL },
    { "addWithInt:withOrgScilabForgeJlatexmathBox:", "add", "V", 0x1, NULL, NULL },
    { "drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:withFloat:withFloat:", "draw", "V", 0x1, NULL, NULL },
    { "getSize", NULL, "I", 0x1, NULL, NULL },
    { "getLastFontId", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "leftMostPos_", NULL, 0x2, "F", NULL, NULL,  },
    { "rightMostPos_", NULL, 0x2, "F", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathVerticalBox = { 2, "VerticalBox", "org.scilab.forge.jlatexmath", NULL, 0x0, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathVerticalBox;
}

@end

void OrgScilabForgeJlatexmathVerticalBox_init(OrgScilabForgeJlatexmathVerticalBox *self) {
  (void) OrgScilabForgeJlatexmathBox_init(self);
  self->leftMostPos_ = JavaLangFloat_MAX_VALUE;
  self->rightMostPos_ = JavaLangFloat_MIN_VALUE;
}

OrgScilabForgeJlatexmathVerticalBox *new_OrgScilabForgeJlatexmathVerticalBox_init() {
  OrgScilabForgeJlatexmathVerticalBox *self = [OrgScilabForgeJlatexmathVerticalBox alloc];
  OrgScilabForgeJlatexmathVerticalBox_init(self);
  return self;
}

void OrgScilabForgeJlatexmathVerticalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(OrgScilabForgeJlatexmathVerticalBox *self, OrgScilabForgeJlatexmathBox *b, jfloat rest, jint alignment) {
  (void) OrgScilabForgeJlatexmathVerticalBox_init(self);
  [self addWithOrgScilabForgeJlatexmathBox:b];
  if (alignment == OrgScilabForgeJlatexmathTeXConstants_ALIGN_CENTER) {
    OrgScilabForgeJlatexmathStrutBox *s = new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, rest / 2, 0, 0);
    OrgScilabForgeJlatexmathVerticalBox_super$_addWithInt_withOrgScilabForgeJlatexmathBox_(self, @selector(addWithInt:withOrgScilabForgeJlatexmathBox:), 0, s);
    self->height_ += rest / 2;
    self->depth_ += rest / 2;
    OrgScilabForgeJlatexmathVerticalBox_super$_addWithOrgScilabForgeJlatexmathBox_(self, @selector(addWithOrgScilabForgeJlatexmathBox:), s);
  }
  else if (alignment == OrgScilabForgeJlatexmathTeXConstants_ALIGN_TOP) {
    self->depth_ += rest;
    OrgScilabForgeJlatexmathVerticalBox_super$_addWithOrgScilabForgeJlatexmathBox_(self, @selector(addWithOrgScilabForgeJlatexmathBox:), new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, rest, 0, 0));
  }
  else if (alignment == OrgScilabForgeJlatexmathTeXConstants_ALIGN_BOTTOM) {
    self->height_ += rest;
    OrgScilabForgeJlatexmathVerticalBox_super$_addWithInt_withOrgScilabForgeJlatexmathBox_(self, @selector(addWithInt:withOrgScilabForgeJlatexmathBox:), 0, new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, rest, 0, 0));
  }
}

OrgScilabForgeJlatexmathVerticalBox *new_OrgScilabForgeJlatexmathVerticalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(OrgScilabForgeJlatexmathBox *b, jfloat rest, jint alignment) {
  OrgScilabForgeJlatexmathVerticalBox *self = [OrgScilabForgeJlatexmathVerticalBox alloc];
  OrgScilabForgeJlatexmathVerticalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(self, b, rest, alignment);
  return self;
}

void OrgScilabForgeJlatexmathVerticalBox_recalculateWidthWithOrgScilabForgeJlatexmathBox_(OrgScilabForgeJlatexmathVerticalBox *self, OrgScilabForgeJlatexmathBox *b) {
  self->leftMostPos_ = JavaLangMath_minWithFloat_withFloat_(self->leftMostPos_, ((OrgScilabForgeJlatexmathBox *) nil_chk(b))->shift_);
  self->rightMostPos_ = JavaLangMath_maxWithFloat_withFloat_(self->rightMostPos_, b->shift_ + (b->width_ > 0 ? b->width_ : 0));
  self->width_ = self->rightMostPos_ - self->leftMostPos_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathVerticalBox)
