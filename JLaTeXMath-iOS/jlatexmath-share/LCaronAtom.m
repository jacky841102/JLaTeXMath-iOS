//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/LCaronAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "Char.h"
#include "CharBox.h"
#include "HorizontalBox.h"
#include "J2ObjC_source.h"
#include "LCaronAtom.h"
#include "SpaceAtom.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "TeXFont.h"

@interface OrgScilabForgeJlatexmathLCaronAtom () {
 @public
  jboolean upper_;
}

@end

@implementation OrgScilabForgeJlatexmathLCaronAtom

- (instancetype)initWithBoolean:(jboolean)upper {
  OrgScilabForgeJlatexmathLCaronAtom_initWithBoolean_(self, upper);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  OrgScilabForgeJlatexmathCharBox *A = new_OrgScilabForgeJlatexmathCharBox_initWithOrgScilabForgeJlatexmathChar_([((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont])) getCharWithNSString:@"textapos" withInt:[env getStyle]]);
  OrgScilabForgeJlatexmathCharBox *L = new_OrgScilabForgeJlatexmathCharBox_initWithOrgScilabForgeJlatexmathChar_([((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([env getTeXFont])) getCharWithChar:upper_ ? 'L' : 'l' withNSString:@"mathnormal" withInt:[env getStyle]]);
  OrgScilabForgeJlatexmathHorizontalBox *hb = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(L);
  if (upper_) [hb addWithOrgScilabForgeJlatexmathBox:[new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_EM, -0.3f, 0, 0) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]];
  else [hb addWithOrgScilabForgeJlatexmathBox:[new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_EM, -0.13f, 0, 0) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]];
  [hb addWithOrgScilabForgeJlatexmathBox:A];
  return hb;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:", "LCaronAtom", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "upper_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathLCaronAtom = { 2, "LCaronAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathLCaronAtom;
}

@end

void OrgScilabForgeJlatexmathLCaronAtom_initWithBoolean_(OrgScilabForgeJlatexmathLCaronAtom *self, jboolean upper) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->upper_ = upper;
}

OrgScilabForgeJlatexmathLCaronAtom *new_OrgScilabForgeJlatexmathLCaronAtom_initWithBoolean_(jboolean upper) {
  OrgScilabForgeJlatexmathLCaronAtom *self = [OrgScilabForgeJlatexmathLCaronAtom alloc];
  OrgScilabForgeJlatexmathLCaronAtom_initWithBoolean_(self, upper);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathLCaronAtom)
