//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/OverUnderDelimiter.java
//


#include "Atom.h"
#include "Box.h"
#include "DelimiterFactory.h"
#include "HorizontalBox.h"
#include "IOSClass.h"
#include "InvalidUnitException.h"
#include "J2ObjC_source.h"
#include "OverUnderBox.h"
#include "OverUnderDelimiter.h"
#include "SpaceAtom.h"
#include "StrutBox.h"
#include "SymbolAtom.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "TeXFormula.h"
#include "VerticalBox.h"
#include "java/lang/Math.h"

@interface OrgScilabForgeJlatexmathOverUnderDelimiter () {
 @public
  OrgScilabForgeJlatexmathAtom *base_;
  OrgScilabForgeJlatexmathAtom *script_;
  OrgScilabForgeJlatexmathSymbolAtom *symbol_;
  OrgScilabForgeJlatexmathSpaceAtom *kern_;
  jboolean over_;
}

+ (jfloat)getMaxWidthWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b
                     withOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)del
                     withOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)script;

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathOverUnderDelimiter, base_, OrgScilabForgeJlatexmathAtom *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathOverUnderDelimiter, script_, OrgScilabForgeJlatexmathAtom *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathOverUnderDelimiter, symbol_, OrgScilabForgeJlatexmathSymbolAtom *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathOverUnderDelimiter, kern_, OrgScilabForgeJlatexmathSpaceAtom *)

__attribute__((unused)) static jfloat OrgScilabForgeJlatexmathOverUnderDelimiter_getMaxWidthWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_(OrgScilabForgeJlatexmathBox *b, OrgScilabForgeJlatexmathBox *del, OrgScilabForgeJlatexmathBox *script);

@implementation OrgScilabForgeJlatexmathOverUnderDelimiter

- (instancetype)initWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)base
                    withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)script
              withOrgScilabForgeJlatexmathSymbolAtom:(OrgScilabForgeJlatexmathSymbolAtom *)s
                                             withInt:(jint)kernUnit
                                           withFloat:(jfloat)kern
                                         withBoolean:(jboolean)over {
  OrgScilabForgeJlatexmathOverUnderDelimiter_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathSymbolAtom_withInt_withFloat_withBoolean_(self, base, script, s, kernUnit, kern, over);
  return self;
}

- (void)addScriptWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)script {
  self->script_ = script;
}

- (jboolean)isOver {
  return over_;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  OrgScilabForgeJlatexmathBox *b = (base_ == nil ? new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, 0, 0, 0) : [base_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]);
  OrgScilabForgeJlatexmathBox *del = OrgScilabForgeJlatexmathDelimiterFactory_createWithNSString_withOrgScilabForgeJlatexmathTeXEnvironment_withFloat_([((OrgScilabForgeJlatexmathSymbolAtom *) nil_chk(symbol_)) getName], env, [b getWidth]);
  OrgScilabForgeJlatexmathBox *scriptBox = nil;
  if (script_ != nil) {
    scriptBox = [script_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(over_ ? [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) supStyle] : [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) subStyle])];
  }
  jfloat max = OrgScilabForgeJlatexmathOverUnderDelimiter_getMaxWidthWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_(b, del, scriptBox);
  if (max - [b getWidth] > OrgScilabForgeJlatexmathTeXFormula_PREC) {
    b = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(b, max, OrgScilabForgeJlatexmathTeXConstants_ALIGN_CENTER);
  }
  del = new_OrgScilabForgeJlatexmathVerticalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(del, max, OrgScilabForgeJlatexmathTeXConstants_ALIGN_CENTER);
  if (scriptBox != nil && max - [scriptBox getWidth] > OrgScilabForgeJlatexmathTeXFormula_PREC) {
    scriptBox = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(scriptBox, max, OrgScilabForgeJlatexmathTeXConstants_ALIGN_CENTER);
  }
  return new_OrgScilabForgeJlatexmathOverUnderBox_initWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withFloat_withBoolean_(b, del, scriptBox, [((OrgScilabForgeJlatexmathBox *) nil_chk([((OrgScilabForgeJlatexmathSpaceAtom *) nil_chk(kern_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env])) getHeight], over_);
}

+ (jfloat)getMaxWidthWithOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)b
                     withOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)del
                     withOrgScilabForgeJlatexmathBox:(OrgScilabForgeJlatexmathBox *)script {
  return OrgScilabForgeJlatexmathOverUnderDelimiter_getMaxWidthWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_(b, del, script);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathAtom:withOrgScilabForgeJlatexmathAtom:withOrgScilabForgeJlatexmathSymbolAtom:withInt:withFloat:withBoolean:", "OverUnderDelimiter", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.InvalidUnitException;", NULL },
    { "addScriptWithOrgScilabForgeJlatexmathAtom:", "addScript", "V", 0x1, NULL, NULL },
    { "isOver", NULL, "Z", 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
    { "getMaxWidthWithOrgScilabForgeJlatexmathBox:withOrgScilabForgeJlatexmathBox:withOrgScilabForgeJlatexmathBox:", "getMaxWidth", "F", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "base_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "script_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "symbol_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.SymbolAtom;", NULL, NULL,  },
    { "kern_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.SpaceAtom;", NULL, NULL,  },
    { "over_", NULL, 0x12, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathOverUnderDelimiter = { 2, "OverUnderDelimiter", "org.scilab.forge.jlatexmath", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathOverUnderDelimiter;
}

@end

void OrgScilabForgeJlatexmathOverUnderDelimiter_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathSymbolAtom_withInt_withFloat_withBoolean_(OrgScilabForgeJlatexmathOverUnderDelimiter *self, OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *script, OrgScilabForgeJlatexmathSymbolAtom *s, jint kernUnit, jfloat kern, jboolean over) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->type_ = OrgScilabForgeJlatexmathTeXConstants_TYPE_INNER;
  self->base_ = base;
  self->script_ = script;
  self->symbol_ = s;
  self->kern_ = new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(kernUnit, 0, kern, 0);
  self->over_ = over;
}

OrgScilabForgeJlatexmathOverUnderDelimiter *new_OrgScilabForgeJlatexmathOverUnderDelimiter_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathSymbolAtom_withInt_withFloat_withBoolean_(OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *script, OrgScilabForgeJlatexmathSymbolAtom *s, jint kernUnit, jfloat kern, jboolean over) {
  OrgScilabForgeJlatexmathOverUnderDelimiter *self = [OrgScilabForgeJlatexmathOverUnderDelimiter alloc];
  OrgScilabForgeJlatexmathOverUnderDelimiter_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathSymbolAtom_withInt_withFloat_withBoolean_(self, base, script, s, kernUnit, kern, over);
  return self;
}

jfloat OrgScilabForgeJlatexmathOverUnderDelimiter_getMaxWidthWithOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_withOrgScilabForgeJlatexmathBox_(OrgScilabForgeJlatexmathBox *b, OrgScilabForgeJlatexmathBox *del, OrgScilabForgeJlatexmathBox *script) {
  OrgScilabForgeJlatexmathOverUnderDelimiter_initialize();
  jfloat max = JavaLangMath_maxWithFloat_withFloat_([((OrgScilabForgeJlatexmathBox *) nil_chk(b)) getWidth], [((OrgScilabForgeJlatexmathBox *) nil_chk(del)) getHeight] + [del getDepth]);
  if (script != nil) {
    max = JavaLangMath_maxWithFloat_withFloat_(max, [script getWidth]);
  }
  return max;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathOverUnderDelimiter)
