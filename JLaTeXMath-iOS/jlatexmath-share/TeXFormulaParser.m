//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/TeXFormulaParser.java
//


#include "Color.h"
#include "ColorUtil.h"
#include "Element.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "MacroInfo.h"
#include "Node.h"
#include "NodeList.h"
#include "PredefinedTeXFormulaParser.h"
#include "ResourceParseException.h"
#include "TeXConstants.h"
#include "TeXFormula.h"
#include "TeXFormulaParser.h"
#include "XMLResourceParseException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

#define OrgScilabForgeJlatexmathTeXFormulaParser_COMMAND 0
#define OrgScilabForgeJlatexmathTeXFormulaParser_TEXFORMULA 1

@interface OrgScilabForgeJlatexmathTeXFormulaParser () {
 @public
  id<JavaUtilMap> argValueParsers_;
  id<JavaUtilMap> actionParsers_;
  id<JavaUtilMap> tempFormulas_;
  id<JavaUtilMap> tempCommands_;
  id result_;
  NSString *formulaName_;
  id<OrgScilabForgeJlatexmathPlatformParserElement> formula_;
  jint type_;
}

- (IOSObjectArray *)getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList:(id<OrgScilabForgeJlatexmathPlatformParserNodeList>)args;

+ (IOSObjectArray *)getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList:(id<OrgScilabForgeJlatexmathPlatformParserNodeList>)args;

+ (void)checkNullValueWithNSString:(NSString *)value
                      withNSString:(NSString *)type;

+ (NSString *)getAttrValueAndCheckIfNotNullWithNSString:(NSString *)attrName
      withOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)element;

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, argValueParsers_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, actionParsers_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, tempFormulas_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, tempCommands_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, result_, id)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, formulaName_, NSString *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, formula_, id<OrgScilabForgeJlatexmathPlatformParserElement>)

static NSString *OrgScilabForgeJlatexmathTeXFormulaParser_ARG_VAL_ATTR_ = @"value";
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormulaParser, ARG_VAL_ATTR_, NSString *)

static NSString *OrgScilabForgeJlatexmathTeXFormulaParser_RETURN_EL_ = @"Return";
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormulaParser, RETURN_EL_, NSString *)

static NSString *OrgScilabForgeJlatexmathTeXFormulaParser_ARG_OBJ_ATTR_ = @"formula";
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormulaParser, ARG_OBJ_ATTR_, NSString *)

static id<JavaUtilMap> OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_;
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormulaParser, classMappings_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser, classMappings_, id<JavaUtilMap>)

J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormulaParser, COMMAND, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathTeXFormulaParser, TEXFORMULA, jint)

__attribute__((unused)) static IOSObjectArray *OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(OrgScilabForgeJlatexmathTeXFormulaParser *self, id<OrgScilabForgeJlatexmathPlatformParserNodeList> args);

__attribute__((unused)) static IOSObjectArray *OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(id<OrgScilabForgeJlatexmathPlatformParserNodeList> args);

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(NSString *value, NSString *type);

__attribute__((unused)) static NSString *OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(NSString *attrName, id<OrgScilabForgeJlatexmathPlatformParserElement> element);

@protocol OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser < NSObject, JavaObject >

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el;

@end

@interface OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser : NSObject
@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser)

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser)

@protocol OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser < NSObject, JavaObject >

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

@interface OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser : NSObject
@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser)

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser > {
 @public
  OrgScilabForgeJlatexmathTeXFormulaParser *this$0_;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser)

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser, this$0_, OrgScilabForgeJlatexmathTeXFormulaParser *)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser > {
 @public
  OrgScilabForgeJlatexmathTeXFormulaParser *this$0_;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser)

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser, this$0_, OrgScilabForgeJlatexmathTeXFormulaParser *)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser > {
 @public
  OrgScilabForgeJlatexmathTeXFormulaParser *this$0_;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser)

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser, this$0_, OrgScilabForgeJlatexmathTeXFormulaParser *)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser >

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser >

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser >

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser >

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser > {
 @public
  OrgScilabForgeJlatexmathTeXFormulaParser *this$0_;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser)

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser, this$0_, OrgScilabForgeJlatexmathTeXFormulaParser *)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser >

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser > {
 @public
  OrgScilabForgeJlatexmathTeXFormulaParser *this$0_;
}

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser)

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser, this$0_, OrgScilabForgeJlatexmathTeXFormulaParser *)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser >

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser)

@interface OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser : NSObject < OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser >

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$;

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser)

__attribute__((unused)) static void OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$);

__attribute__((unused)) static OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser)

J2OBJC_INITIALIZED_DEFN(OrgScilabForgeJlatexmathTeXFormulaParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser

- (instancetype)initWithNSString:(NSString *)name
withOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)formula
                    withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_initWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_withNSString_(self, name, formula, type);
  return self;
}

- (id)parse {
  id<OrgScilabForgeJlatexmathPlatformParserNodeList> list = [((id<OrgScilabForgeJlatexmathPlatformParserElement>) nil_chk(formula_)) getChildNodes];
  for (jint i = 0; i < [((id<OrgScilabForgeJlatexmathPlatformParserNodeList>) nil_chk(list)) getLength]; i++) {
    id<OrgScilabForgeJlatexmathPlatformParserNode> node = [list itemWithInt:i];
    if ([((id<OrgScilabForgeJlatexmathPlatformParserNode>) nil_chk(node)) getNodeType] != OrgScilabForgeJlatexmathPlatformParserNode_TEXT_NODE) {
      id<OrgScilabForgeJlatexmathPlatformParserElement> el = [node castToElement];
      id<OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser> p = [((id<JavaUtilMap>) nil_chk(actionParsers_)) getWithId:[((id<OrgScilabForgeJlatexmathPlatformParserElement>) nil_chk(el)) getTagName]];
      if (p != nil) {
        [p parseWithOrgScilabForgeJlatexmathPlatformParserElement:el];
      }
    }
  }
  return result_;
}

- (IOSObjectArray *)getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList:(id<OrgScilabForgeJlatexmathPlatformParserNodeList>)args {
  return OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(self, args);
}

+ (IOSObjectArray *)getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList:(id<OrgScilabForgeJlatexmathPlatformParserNodeList>)args {
  return OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(args);
}

+ (void)checkNullValueWithNSString:(NSString *)value
                      withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(value, type);
}

+ (NSString *)getAttrValueAndCheckIfNotNullWithNSString:(NSString *)attrName
      withOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)element {
  return OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(attrName, element);
}

+ (void)initialize {
  if (self == [OrgScilabForgeJlatexmathTeXFormulaParser class]) {
    OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ = new_JavaUtilHashMap_init();
    {
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"TeXConstants" withId:[IOSClass intClass]];
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"TeXFormula" withId:OrgScilabForgeJlatexmathTeXFormula_class_()];
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"String" withId:NSString_class_()];
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"float" withId:[IOSClass floatClass]];
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"int" withId:[IOSClass intClass]];
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"boolean" withId:[IOSClass booleanClass]];
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"char" withId:[IOSClass charClass]];
      (void) [OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_ putWithId:@"ColorConstant" withId:OrgScilabForgeJlatexmathColorUtil_class_()];
    }
    J2OBJC_SET_INITIALIZED(OrgScilabForgeJlatexmathTeXFormulaParser)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withOrgScilabForgeJlatexmathPlatformParserElement:withNSString:", "TeXFormulaParser", NULL, 0x1, NULL, NULL },
    { "parse", NULL, "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList:", "getArgumentValues", "[Ljava.lang.Object;", 0x2, NULL, NULL },
    { "getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList:", "getArgumentClasses", "[Ljava.lang.Class;", 0xa, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "checkNullValueWithNSString:withNSString:", "checkNullValue", "V", 0xa, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "getAttrValueAndCheckIfNotNullWithNSString:withOrgScilabForgeJlatexmathPlatformParserElement:", "getAttrValueAndCheckIfNotNull", "Ljava.lang.String;", 0xa, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ARG_VAL_ATTR_", NULL, 0x1a, "Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormulaParser_ARG_VAL_ATTR_, NULL,  },
    { "RETURN_EL_", NULL, 0x1a, "Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormulaParser_RETURN_EL_, NULL,  },
    { "ARG_OBJ_ATTR_", NULL, 0x1a, "Ljava.lang.String;", &OrgScilabForgeJlatexmathTeXFormulaParser_ARG_OBJ_ATTR_, NULL,  },
    { "classMappings_", NULL, 0xa, "Ljava.util.Map;", &OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Class<*>;>;",  },
    { "argValueParsers_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/scilab/forge/jlatexmath/TeXFormulaParser$ArgumentValueParser;>;",  },
    { "actionParsers_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/scilab/forge/jlatexmath/TeXFormulaParser$ActionParser;>;",  },
    { "tempFormulas_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/scilab/forge/jlatexmath/TeXFormula;>;",  },
    { "tempCommands_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/scilab/forge/jlatexmath/MacroInfo;>;",  },
    { "result_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL,  },
    { "formulaName_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "formula_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.platform.parser.Element;", NULL, NULL,  },
    { "COMMAND_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormulaParser_COMMAND },
    { "TEXFORMULA_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathTeXFormulaParser_TEXFORMULA },
    { "type_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.scilab.forge.jlatexmath.TeXFormulaParser$ActionParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$ArgumentValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$MethodInvocationParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$CreateTeXFormulaParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$CreateCommandParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$FloatValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$CharValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$BooleanValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$IntValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$ReturnParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$StringValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$TeXFormulaValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$TeXConstantsValueParser;", "Lorg.scilab.forge.jlatexmath.TeXFormulaParser$ColorConstantValueParser;"};
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser = { 2, "TeXFormulaParser", "org.scilab.forge.jlatexmath", NULL, 0x1, 6, methods, 14, fields, 0, NULL, 14, inner_classes, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_initWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_withNSString_(OrgScilabForgeJlatexmathTeXFormulaParser *self, NSString *name, id<OrgScilabForgeJlatexmathPlatformParserElement> formula, NSString *type) {
  (void) NSObject_init(self);
  self->argValueParsers_ = new_JavaUtilHashMap_init();
  self->actionParsers_ = new_JavaUtilHashMap_init();
  self->tempFormulas_ = new_JavaUtilHashMap_init();
  self->tempCommands_ = new_JavaUtilHashMap_init();
  self->result_ = new_NSObject_init();
  self->formulaName_ = name;
  self->formula_ = formula;
  self->type_ = [@"Command" isEqual:type] ? OrgScilabForgeJlatexmathTeXFormulaParser_COMMAND : OrgScilabForgeJlatexmathTeXFormulaParser_TEXFORMULA;
  if ([@"Command" isEqual:type]) (void) [self->actionParsers_ putWithId:@"CreateCommand" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  else (void) [self->actionParsers_ putWithId:@"CreateTeXFormula" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->actionParsers_ putWithId:@"MethodInvocation" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->actionParsers_ putWithId:OrgScilabForgeJlatexmathTeXFormulaParser_RETURN_EL_ withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"TeXConstants" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"TeXFormula" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"String" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"float" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"int" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"boolean" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"char" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
  (void) [self->argValueParsers_ putWithId:@"ColorConstant" withId:new_OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self)];
}

OrgScilabForgeJlatexmathTeXFormulaParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_initWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_withNSString_(NSString *name, id<OrgScilabForgeJlatexmathPlatformParserElement> formula, NSString *type) {
  OrgScilabForgeJlatexmathTeXFormulaParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_initWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_withNSString_(self, name, formula, type);
  return self;
}

IOSObjectArray *OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(OrgScilabForgeJlatexmathTeXFormulaParser *self, id<OrgScilabForgeJlatexmathPlatformParserNodeList> args) {
  IOSObjectArray *res = [IOSObjectArray newArrayWithLength:[((id<OrgScilabForgeJlatexmathPlatformParserNodeList>) nil_chk(args)) getLength] type:NSObject_class_()];
  jint i = 0;
  for (jint j = 0; j < [args getLength]; j++) {
    id<OrgScilabForgeJlatexmathPlatformParserElement> arg = [((id<OrgScilabForgeJlatexmathPlatformParserNode>) nil_chk([args itemWithInt:j])) castToElement];
    NSString *type = OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(@"type", arg);
    NSString *value = [((id<OrgScilabForgeJlatexmathPlatformParserElement>) nil_chk(arg)) getAttributeWithNSString:OrgScilabForgeJlatexmathTeXFormulaParser_ARG_VAL_ATTR_];
    (void) IOSObjectArray_Set(res, i, [((id<OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser>) nil_chk([((id<JavaUtilMap>) nil_chk(self->argValueParsers_)) getWithId:type])) parseValueWithNSString:value withNSString:type]);
    i++;
  }
  return res;
}

IOSObjectArray *OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(id<OrgScilabForgeJlatexmathPlatformParserNodeList> args) {
  OrgScilabForgeJlatexmathTeXFormulaParser_initialize();
  IOSObjectArray *res = [IOSObjectArray newArrayWithLength:[((id<OrgScilabForgeJlatexmathPlatformParserNodeList>) nil_chk(args)) getLength] type:IOSClass_class_()];
  jint i = 0;
  for (jint j = 0; j < [args getLength]; j++) {
    id<OrgScilabForgeJlatexmathPlatformParserElement> arg = [((id<OrgScilabForgeJlatexmathPlatformParserNode>) nil_chk([args itemWithInt:j])) castToElement];
    NSString *type = OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(@"type", arg);
    id cl = [((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathTeXFormulaParser_classMappings_)) getWithId:type];
    if (cl == nil) {
      @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", @"type", @"has an invalid class name value!");
    }
    else {
      (void) IOSObjectArray_Set(res, i, (IOSClass *) check_class_cast(cl, [IOSClass class]));
    }
    i++;
  }
  return res;
}

void OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(NSString *value, NSString *type) {
  OrgScilabForgeJlatexmathTeXFormulaParser_initialize();
  if ([((NSString *) nil_chk(value)) isEqual:@""]) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_ARG_VAL_ATTR_, JreStrcat("$$$", @"is required for an argument of type '", type, @"'!"));
  }
}

NSString *OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(NSString *attrName, id<OrgScilabForgeJlatexmathPlatformParserElement> element) {
  OrgScilabForgeJlatexmathTeXFormulaParser_initialize();
  NSString *attrValue = [((id<OrgScilabForgeJlatexmathPlatformParserElement>) nil_chk(element)) getAttributeWithNSString:attrName];
  if ([((NSString *) nil_chk(attrValue)) isEqual:@""]) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), [element getTagName], attrName, nil);
  }
  return attrValue;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "parseWithOrgScilabForgeJlatexmathPlatformParserElement:", "parse", "V", 0x401, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser = { 2, "ActionParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x60a, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_ActionParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x401, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser = { 2, "ArgumentValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x60a, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_ArgumentValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el {
  NSString *methodName = OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(@"name", el);
  NSString *objectName = OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_OBJ_ATTR_(), el);
  id object = [((id<JavaUtilMap>) nil_chk(this$0_->tempFormulas_)) getWithId:objectName];
  if (object == nil) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_OBJ_ATTR_(), JreStrcat("$$$", @"has an unknown temporary TeXFormula name as value : '", objectName, @"'!"));
  }
  else {
    id<OrgScilabForgeJlatexmathPlatformParserNodeList> args = [((id<OrgScilabForgeJlatexmathPlatformParserElement>) nil_chk(el)) getElementsByTagNameWithNSString:@"Argument"];
    IOSObjectArray *argClasses = OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(args);
    IOSObjectArray *argValues = OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(this$0_, args);
    @try {
      @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Not implemented yet.");
    }
    @catch (JavaLangException *e) {
      @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_(JreStrcat("$$$$$$$$", @"Error invoking the method '", methodName, @"' on the temporary TeXFormula '", objectName, @"' while constructing the predefined TeXFormula '", this$0_->formulaName_, @"'!\n", [((JavaLangException *) nil_chk(e)) description]));
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "MethodInvocationParser", NULL, 0x0, NULL, NULL },
    { "parseWithOrgScilabForgeJlatexmathPlatformParserElement:", "parse", "V", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.scilab.forge.jlatexmath.TeXFormulaParser;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser = { 2, "MethodInvocationParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_MethodInvocationParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el {
  NSString *name = OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(@"name", el);
  id<OrgScilabForgeJlatexmathPlatformParserNodeList> args = [((id<OrgScilabForgeJlatexmathPlatformParserElement>) nil_chk(el)) getElementsByTagNameWithNSString:@"Argument"];
  IOSObjectArray *argClasses = OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(args);
  IOSObjectArray *argValues = OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(this$0_, args);
  @try {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Not implemented");
  }
  @catch (JavaLangException *e) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_(JreStrcat("$$$$$$", @"Error creating the temporary TeXFormula '", name, @"' while constructing the predefined TeXFormula '", this$0_->formulaName_, @"'!\n", [((JavaLangException *) nil_chk(e)) description]));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "CreateTeXFormulaParser", NULL, 0x0, NULL, NULL },
    { "parseWithOrgScilabForgeJlatexmathPlatformParserElement:", "parse", "V", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.scilab.forge.jlatexmath.TeXFormulaParser;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser = { 2, "CreateTeXFormulaParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_CreateTeXFormulaParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el {
  NSString *name = OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(@"name", el);
  id<OrgScilabForgeJlatexmathPlatformParserNodeList> args = [((id<OrgScilabForgeJlatexmathPlatformParserElement>) nil_chk(el)) getElementsByTagNameWithNSString:@"Argument"];
  IOSObjectArray *argClasses = OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentClassesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(args);
  IOSObjectArray *argValues = OrgScilabForgeJlatexmathTeXFormulaParser_getArgumentValuesWithOrgScilabForgeJlatexmathPlatformParserNodeList_(this$0_, args);
  @try {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Not implemented");
  }
  @catch (JavaLangIllegalArgumentException *e) {
    NSString *err = @"IllegalArgumentException:\n";
    err = JreStrcat("$$", err, JreStrcat("$@C", @"ClassLoader to load this class (TeXFormulaParser): ", [self getClass], 0x000a));
    {
      IOSObjectArray *a__ = argClasses;
      IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      IOSClass * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        IOSClass *cl = *b__++;
        err = JreStrcat("$$", err, JreStrcat("$@$@C", @"Created class: ", cl, @" loaded with the ClassLoader: ", cl, 0x000a));
      }
    }
    {
      IOSObjectArray *a__ = argValues;
      id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id obj = *b__++;
        err = JreStrcat("$$", err, JreStrcat("$@C", @"Created object: ", obj, 0x000a));
      }
    }
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_(JreStrcat("$$$$$$", @"Error creating the temporary command '", name, @"' while constructing the predefined command '", this$0_->formulaName_, @"'!\n", err));
  }
  @catch (JavaLangException *e) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_(JreStrcat("$$$$$$", @"Error creating the temporary command '", name, @"' while constructing the predefined command '", this$0_->formulaName_, @"'!\n", [((JavaLangException *) nil_chk(e)) description]));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "CreateCommandParser", NULL, 0x0, NULL, NULL },
    { "parseWithOrgScilabForgeJlatexmathPlatformParserElement:", "parse", "V", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.scilab.forge.jlatexmath.TeXFormulaParser;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser = { 2, "CreateCommandParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_CreateCommandParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(value, type);
  @try {
    return new_JavaLangFloat_initWithFloat_(JavaLangFloat_parseFloatWithNSString_(value));
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_withJavaLangThrowable_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_VAL_ATTR_(), JreStrcat("$$$$$", @"has an invalid '", type, @"'-value : '", value, @"'!"), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "FloatValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser = { 2, "FloatValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_FloatValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(value, type);
  if (((jint) [((NSString *) nil_chk(value)) length]) == 1) {
    return new_JavaLangCharacter_initWithChar_([value charAtWithInt:0]);
  }
  else {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_VAL_ATTR_(), @"must have a value that consists of exactly 1 character!");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "CharValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser = { 2, "CharValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_CharValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(value, type);
  if ([@"true" isEqual:value]) {
    return JavaLangBoolean_get_TRUE__();
  }
  else if ([@"false" isEqual:value]) {
    return JavaLangBoolean_get_FALSE__();
  }
  else {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_VAL_ATTR_(), JreStrcat("$$$$$", @"has an invalid '", type, @"'-value : '", value, @"'!"));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "BooleanValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser = { 2, "BooleanValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_BooleanValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(value, type);
  @try {
    jint val = JavaLangInteger_parseIntWithNSString_(value);
    return new_JavaLangFloat_initWithFloat_(val);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_withJavaLangThrowable_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_VAL_ATTR_(), JreStrcat("$$$$$", @"has an invalid '", type, @"'-value : '", value, @"'!"), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "IntValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser = { 2, "IntValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_IntValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (void)parseWithOrgScilabForgeJlatexmathPlatformParserElement:(id<OrgScilabForgeJlatexmathPlatformParserElement>)el {
  NSString *name = OrgScilabForgeJlatexmathTeXFormulaParser_getAttrValueAndCheckIfNotNullWithNSString_withOrgScilabForgeJlatexmathPlatformParserElement_(@"name", el);
  id res = this$0_->type_ == OrgScilabForgeJlatexmathTeXFormulaParser_COMMAND ? [((id<JavaUtilMap>) nil_chk(this$0_->tempCommands_)) getWithId:name] : [((id<JavaUtilMap>) nil_chk(this$0_->tempFormulas_)) getWithId:name];
  if (res == nil) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), OrgScilabForgeJlatexmathTeXFormulaParser_get_RETURN_EL_(), @"name", JreStrcat("$$$$$", @"contains an unknown temporary TeXFormula variable name '", name, @"' for the predefined TeXFormula '", this$0_->formulaName_, @"'!"));
  }
  else {
    this$0_->result_ = res;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "ReturnParser", NULL, 0x0, NULL, NULL },
    { "parseWithOrgScilabForgeJlatexmathPlatformParserElement:", "parse", "V", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.scilab.forge.jlatexmath.TeXFormulaParser;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser = { 2, "ReturnParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_ReturnParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  return value;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "StringValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser = { 2, "StringValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_StringValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  if (value == nil) {
    return nil;
  }
  else {
    id formula = [((id<JavaUtilMap>) nil_chk(this$0_->tempFormulas_)) getWithId:value];
    if (formula == nil) {
      @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_VAL_ATTR_(), JreStrcat("$$$", @"has an unknown temporary TeXFormula name as value : '", value, @"'!"));
    }
    else {
      return (OrgScilabForgeJlatexmathTeXFormula *) check_class_cast(formula, [OrgScilabForgeJlatexmathTeXFormula class]);
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "TeXFormulaValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.scilab.forge.jlatexmath.TeXFormulaParser;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser = { 2, "TeXFormulaValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_TeXFormulaValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(value, type);
  @try {
    jint constant = [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathTeXConstants_get_CONSTANTS_MAP_())) getWithId:value])) intValue];
    return JavaLangInteger_valueOfWithInt_(constant);
  }
  @catch (JavaLangException *e) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_withJavaLangThrowable_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_VAL_ATTR_(), JreStrcat("$$$", @"has an unknown constant name as value : '", value, @"'!"), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "TeXConstantsValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser = { 2, "TeXConstantsValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_TeXConstantsValueParser)

@implementation OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser

- (instancetype)initWithOrgScilabForgeJlatexmathTeXFormulaParser:(OrgScilabForgeJlatexmathTeXFormulaParser *)outer$ {
  OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

- (id)parseValueWithNSString:(NSString *)value
                withNSString:(NSString *)type {
  OrgScilabForgeJlatexmathTeXFormulaParser_checkNullValueWithNSString_withNSString_(value, type);
  @try {
    return [((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathColorUtil_get_COLOR_CONSTANTS_())) getWithId:value];
  }
  @catch (JavaLangException *e) {
    @throw new_OrgScilabForgeJlatexmathExceptionXMLResourceParseException_initWithNSString_withNSString_withNSString_withNSString_withJavaLangThrowable_(OrgScilabForgeJlatexmathPredefinedTeXFormulaParser_get_RESOURCE_NAME_(), @"Argument", OrgScilabForgeJlatexmathTeXFormulaParser_get_ARG_VAL_ATTR_(), JreStrcat("$$$", @"has an unknown color constant name as value : '", value, @"'!"), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathTeXFormulaParser:", "ColorConstantValueParser", NULL, 0x0, NULL, NULL },
    { "parseValueWithNSString:withNSString:", "parseValue", "Ljava.lang.Object;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser = { 2, "ColorConstantValueParser", "org.scilab.forge.jlatexmath", "TeXFormulaParser", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser;
}

@end

void OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser *self, OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser *new_OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(OrgScilabForgeJlatexmathTeXFormulaParser *outer$) {
  OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser *self = [OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser alloc];
  OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser_initWithOrgScilabForgeJlatexmathTeXFormulaParser_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTeXFormulaParser_ColorConstantValueParser)
