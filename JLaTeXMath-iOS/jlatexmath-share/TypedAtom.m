//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/TypedAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "J2ObjC_source.h"
#include "TeXEnvironment.h"
#include "TypedAtom.h"

@interface OrgScilabForgeJlatexmathTypedAtom () {
 @public
  jint leftType_;
  jint rightType_;
  OrgScilabForgeJlatexmathAtom *atom_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathTypedAtom, atom_, OrgScilabForgeJlatexmathAtom *)

@implementation OrgScilabForgeJlatexmathTypedAtom

- (instancetype)initWithInt:(jint)leftType
                    withInt:(jint)rightType
withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)atom {
  OrgScilabForgeJlatexmathTypedAtom_initWithInt_withInt_withOrgScilabForgeJlatexmathAtom_(self, leftType, rightType, atom);
  return self;
}

- (OrgScilabForgeJlatexmathAtom *)getBase {
  ((OrgScilabForgeJlatexmathAtom *) nil_chk(atom_))->type_limits_ = type_limits_;
  return atom_;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return [((OrgScilabForgeJlatexmathAtom *) nil_chk(atom_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env];
}

- (jint)getLeftType {
  return leftType_;
}

- (jint)getRightType {
  return rightType_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withOrgScilabForgeJlatexmathAtom:", "TypedAtom", NULL, 0x1, NULL, NULL },
    { "getBase", NULL, "Lorg.scilab.forge.jlatexmath.Atom;", 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
    { "getLeftType", NULL, "I", 0x1, NULL, NULL },
    { "getRightType", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "leftType_", NULL, 0x12, "I", NULL, NULL,  },
    { "rightType_", NULL, 0x12, "I", NULL, NULL,  },
    { "atom_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathTypedAtom = { 2, "TypedAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathTypedAtom;
}

@end

void OrgScilabForgeJlatexmathTypedAtom_initWithInt_withInt_withOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathTypedAtom *self, jint leftType, jint rightType, OrgScilabForgeJlatexmathAtom *atom) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->leftType_ = leftType;
  self->rightType_ = rightType;
  self->atom_ = atom;
  self->type_limits_ = ((OrgScilabForgeJlatexmathAtom *) nil_chk(atom))->type_limits_;
}

OrgScilabForgeJlatexmathTypedAtom *new_OrgScilabForgeJlatexmathTypedAtom_initWithInt_withInt_withOrgScilabForgeJlatexmathAtom_(jint leftType, jint rightType, OrgScilabForgeJlatexmathAtom *atom) {
  OrgScilabForgeJlatexmathTypedAtom *self = [OrgScilabForgeJlatexmathTypedAtom alloc];
  OrgScilabForgeJlatexmathTypedAtom_initWithInt_withInt_withOrgScilabForgeJlatexmathAtom_(self, leftType, rightType, atom);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathTypedAtom)
