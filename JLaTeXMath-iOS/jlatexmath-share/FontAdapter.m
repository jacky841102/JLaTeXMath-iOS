//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/platform/FontAdapter.java
//


#include "FactoryProvider.h"
#include "Font.h"
#include "FontAdapter.h"
#include "FontFactory.h"
#include "FontLoader.h"
#include "FontRenderContext.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "ResourceParseException.h"
#include "TextAttribute.h"
#include "TextAttributeProvider.h"
#include "TextLayout.h"
#include "java/lang/Integer.h"

@interface OrgScilabForgeJlatexmathPlatformFontAdapter () {
 @public
  OrgScilabForgeJlatexmathPlatformFontFontFactory *fontFactory_;
  id<OrgScilabForgeJlatexmathPlatformFontFontLoader> fontLoader_;
  id<OrgScilabForgeJlatexmathPlatformFontTextAttributeProvider> textAttributeProvider_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathPlatformFontAdapter, fontFactory_, OrgScilabForgeJlatexmathPlatformFontFontFactory *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathPlatformFontAdapter, fontLoader_, id<OrgScilabForgeJlatexmathPlatformFontFontLoader>)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathPlatformFontAdapter, textAttributeProvider_, id<OrgScilabForgeJlatexmathPlatformFontTextAttributeProvider>)

@implementation OrgScilabForgeJlatexmathPlatformFontAdapter

- (instancetype)init {
  OrgScilabForgeJlatexmathPlatformFontAdapter_init(self);
  return self;
}

- (id<OrgScilabForgeJlatexmathPlatformFontFont>)loadFontWithNSString:(NSString *)name {
  return [self loadFontWithId:nil withNSString:name];
}

- (id<OrgScilabForgeJlatexmathPlatformFontFont>)loadFontWithId:(id)fontType
                                                  withNSString:(NSString *)name {
  return [((id<OrgScilabForgeJlatexmathPlatformFontFontLoader>) nil_chk(fontLoader_)) loadFontWithId:fontType withNSString:name];
}

- (id<OrgScilabForgeJlatexmathPlatformFontFont>)createFontWithNSString:(NSString *)name
                                                               withInt:(jint)style
                                                               withInt:(jint)size {
  return [((OrgScilabForgeJlatexmathPlatformFontFontFactory *) nil_chk(fontFactory_)) createFontWithNSString:name withInt:style withInt:size];
}

- (id<OrgScilabForgeJlatexmathPlatformFontTextLayout>)createTextLayoutWithNSString:(NSString *)string
                                      withOrgScilabForgeJlatexmathPlatformFontFont:(id<OrgScilabForgeJlatexmathPlatformFontFont>)font
                         withOrgScilabForgeJlatexmathPlatformFontFontRenderContext:(id<OrgScilabForgeJlatexmathPlatformFontFontRenderContext>)fontRenderContext {
  return [((OrgScilabForgeJlatexmathPlatformFontFontFactory *) nil_chk(fontFactory_)) createTextLayoutWithNSString:string withOrgScilabForgeJlatexmathPlatformFontFont:font withOrgScilabForgeJlatexmathPlatformFontFontRenderContext:fontRenderContext];
}

- (id<OrgScilabForgeJlatexmathPlatformFontTextAttribute>)getTextAttributeWithNSString:(NSString *)attribute {
  return [((id<OrgScilabForgeJlatexmathPlatformFontTextAttributeProvider>) nil_chk(textAttributeProvider_)) getTextAttributeWithNSString:attribute];
}

- (JavaLangInteger *)getTextAttributeValueWithNSString:(NSString *)attributeValue {
  return [((id<OrgScilabForgeJlatexmathPlatformFontTextAttributeProvider>) nil_chk(textAttributeProvider_)) getTextAttributeValueWithNSString:attributeValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FontAdapter", NULL, 0x1, NULL, NULL },
    { "loadFontWithNSString:", "loadFont", "Lorg.scilab.forge.jlatexmath.platform.font.Font;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "loadFontWithId:withNSString:", "loadFont", "Lorg.scilab.forge.jlatexmath.platform.font.Font;", 0x1, "Lorg.scilab.forge.jlatexmath.exception.ResourceParseException;", NULL },
    { "createFontWithNSString:withInt:withInt:", "createFont", "Lorg.scilab.forge.jlatexmath.platform.font.Font;", 0x1, NULL, NULL },
    { "createTextLayoutWithNSString:withOrgScilabForgeJlatexmathPlatformFontFont:withOrgScilabForgeJlatexmathPlatformFontFontRenderContext:", "createTextLayout", "Lorg.scilab.forge.jlatexmath.platform.font.TextLayout;", 0x1, NULL, NULL },
    { "getTextAttributeWithNSString:", "getTextAttribute", "Lorg.scilab.forge.jlatexmath.platform.font.TextAttribute;", 0x1, NULL, NULL },
    { "getTextAttributeValueWithNSString:", "getTextAttributeValue", "Ljava.lang.Integer;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fontFactory_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.platform.font.FontFactory;", NULL, NULL,  },
    { "fontLoader_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.platform.font.FontLoader;", NULL, NULL,  },
    { "textAttributeProvider_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.platform.font.TextAttributeProvider;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathPlatformFontAdapter = { 2, "FontAdapter", "org.scilab.forge.jlatexmath.platform", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathPlatformFontAdapter;
}

@end

void OrgScilabForgeJlatexmathPlatformFontAdapter_init(OrgScilabForgeJlatexmathPlatformFontAdapter *self) {
  (void) NSObject_init(self);
  self->fontFactory_ = [((OrgScilabForgeJlatexmathPlatformFactoryProvider *) nil_chk(OrgScilabForgeJlatexmathPlatformFactoryProvider_get_INSTANCE_())) getFontFactory];
  self->fontLoader_ = [((OrgScilabForgeJlatexmathPlatformFontFontFactory *) nil_chk(self->fontFactory_)) createFontLoader];
  self->textAttributeProvider_ = [self->fontFactory_ createTextAttributeProvider];
}

OrgScilabForgeJlatexmathPlatformFontAdapter *new_OrgScilabForgeJlatexmathPlatformFontAdapter_init() {
  OrgScilabForgeJlatexmathPlatformFontAdapter *self = [OrgScilabForgeJlatexmathPlatformFontAdapter alloc];
  OrgScilabForgeJlatexmathPlatformFontAdapter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathPlatformFontAdapter)
