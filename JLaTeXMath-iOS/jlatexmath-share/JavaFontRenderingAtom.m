//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/JavaFontRenderingAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "DefaultTeXFont.h"
#include "Font.h"
#include "FontAdapter.h"
#include "J2ObjC_source.h"
#include "JavaFontRenderingAtom.h"
#include "JavaFontRenderingBox.h"
#include "TeXEnvironment.h"
#include "TeXFont.h"
#include "TeXFormula.h"

@interface OrgScilabForgeJlatexmathJavaFontRenderingAtom () {
 @public
  NSString *str_;
  jint type_JavaFontRenderingAtom_;
  OrgScilabForgeJlatexmathTeXFormula_FontInfos *fontInfos_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathJavaFontRenderingAtom, str_, NSString *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathJavaFontRenderingAtom, fontInfos_, OrgScilabForgeJlatexmathTeXFormula_FontInfos *)

@implementation OrgScilabForgeJlatexmathJavaFontRenderingAtom

- (instancetype)initWithNSString:(NSString *)str
                         withInt:(jint)type {
  OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withInt_(self, str, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)str
withOrgScilabForgeJlatexmathTeXFormula_FontInfos:(OrgScilabForgeJlatexmathTeXFormula_FontInfos *)fontInfos {
  OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_FontInfos_(self, str, fontInfos);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  if (fontInfos_ == nil) {
    return new_OrgScilabForgeJlatexmathJavaFontRenderingBox_initWithNSString_withInt_withFloat_(str_, type_JavaFontRenderingAtom_, OrgScilabForgeJlatexmathDefaultTeXFont_getSizeFactorWithInt_([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getStyle]));
  }
  else {
    OrgScilabForgeJlatexmathDefaultTeXFont *dtf = (OrgScilabForgeJlatexmathDefaultTeXFont *) check_class_cast([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont], [OrgScilabForgeJlatexmathDefaultTeXFont class]);
    jint type = ((OrgScilabForgeJlatexmathDefaultTeXFont *) nil_chk(dtf))->isIt_ ? OrgScilabForgeJlatexmathPlatformFontFont_ITALIC : OrgScilabForgeJlatexmathPlatformFontFont_PLAIN;
    type = type | (dtf->isBold_ ? OrgScilabForgeJlatexmathPlatformFontFont_BOLD : 0);
    jboolean kerning = dtf->isRoman_;
    id<OrgScilabForgeJlatexmathPlatformFontFont> font;
    OrgScilabForgeJlatexmathPlatformFontAdapter *fontAdapter = new_OrgScilabForgeJlatexmathPlatformFontAdapter_init();
    if (dtf->isSs_) {
      if (fontInfos_->sansserif_ == nil) {
        font = [fontAdapter createFontWithNSString:fontInfos_->serif_ withInt:OrgScilabForgeJlatexmathPlatformFontFont_PLAIN withInt:10];
      }
      else {
        font = [fontAdapter createFontWithNSString:fontInfos_->sansserif_ withInt:OrgScilabForgeJlatexmathPlatformFontFont_PLAIN withInt:10];
      }
    }
    else {
      if (fontInfos_->serif_ == nil) {
        font = [fontAdapter createFontWithNSString:fontInfos_->sansserif_ withInt:OrgScilabForgeJlatexmathPlatformFontFont_PLAIN withInt:10];
      }
      else {
        font = [fontAdapter createFontWithNSString:fontInfos_->serif_ withInt:OrgScilabForgeJlatexmathPlatformFontFont_PLAIN withInt:10];
      }
    }
    return new_OrgScilabForgeJlatexmathJavaFontRenderingBox_initWithNSString_withInt_withFloat_withOrgScilabForgeJlatexmathPlatformFontFont_withBoolean_(str_, type, OrgScilabForgeJlatexmathDefaultTeXFont_getSizeFactorWithInt_([env getStyle]), font, kerning);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "JavaFontRenderingAtom", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withOrgScilabForgeJlatexmathTeXFormula_FontInfos:", "JavaFontRenderingAtom", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "str_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "type_JavaFontRenderingAtom_", "type", 0x2, "I", NULL, NULL,  },
    { "fontInfos_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.TeXFormula$FontInfos;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathJavaFontRenderingAtom = { 2, "JavaFontRenderingAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathJavaFontRenderingAtom;
}

@end

void OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withInt_(OrgScilabForgeJlatexmathJavaFontRenderingAtom *self, NSString *str, jint type) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->str_ = str;
  self->type_JavaFontRenderingAtom_ = type;
}

OrgScilabForgeJlatexmathJavaFontRenderingAtom *new_OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withInt_(NSString *str, jint type) {
  OrgScilabForgeJlatexmathJavaFontRenderingAtom *self = [OrgScilabForgeJlatexmathJavaFontRenderingAtom alloc];
  OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withInt_(self, str, type);
  return self;
}

void OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_FontInfos_(OrgScilabForgeJlatexmathJavaFontRenderingAtom *self, NSString *str, OrgScilabForgeJlatexmathTeXFormula_FontInfos *fontInfos) {
  (void) OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withInt_(self, str, 0);
  self->fontInfos_ = fontInfos;
}

OrgScilabForgeJlatexmathJavaFontRenderingAtom *new_OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_FontInfos_(NSString *str, OrgScilabForgeJlatexmathTeXFormula_FontInfos *fontInfos) {
  OrgScilabForgeJlatexmathJavaFontRenderingAtom *self = [OrgScilabForgeJlatexmathJavaFontRenderingAtom alloc];
  OrgScilabForgeJlatexmathJavaFontRenderingAtom_initWithNSString_withOrgScilabForgeJlatexmathTeXFormula_FontInfos_(self, str, fontInfos);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathJavaFontRenderingAtom)
