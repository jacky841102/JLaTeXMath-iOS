//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/Atom.java
//


#include "Atom.h"
#include "Box.h"
#include "J2ObjC_source.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "java/lang/Exception.h"

@implementation OrgScilabForgeJlatexmathAtom

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getLeftType {
  return type_;
}

- (jint)getRightType {
  return type_;
}

- (OrgScilabForgeJlatexmathAtom *)clone {
  @try {
    return (OrgScilabForgeJlatexmathAtom *) check_class_cast([super clone], [OrgScilabForgeJlatexmathAtom class]);
  }
  @catch (JavaLangException *e) {
    return nil;
  }
}

- (instancetype)init {
  OrgScilabForgeJlatexmathAtom_init(self);
  return self;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x401, NULL, NULL },
    { "getLeftType", NULL, "I", 0x1, NULL, NULL },
    { "getRightType", NULL, "I", 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.scilab.forge.jlatexmath.Atom;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x1, "I", NULL, NULL,  },
    { "type_limits_", NULL, 0x1, "I", NULL, NULL,  },
    { "alignment_", NULL, 0x1, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathAtom = { 2, "Atom", "org.scilab.forge.jlatexmath", NULL, 0x401, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathAtom;
}

@end

void OrgScilabForgeJlatexmathAtom_init(OrgScilabForgeJlatexmathAtom *self) {
  (void) NSObject_init(self);
  self->type_ = OrgScilabForgeJlatexmathTeXConstants_TYPE_ORDINARY;
  self->type_limits_ = OrgScilabForgeJlatexmathTeXConstants_SCRIPT_NOLIMITS;
  self->alignment_ = -1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathAtom)
