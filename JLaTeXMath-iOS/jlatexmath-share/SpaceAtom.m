//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/SpaceAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "Glue.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "InvalidUnitException.h"
#include "J2ObjC_source.h"
#include "SpaceAtom.h"
#include "StrutBox.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "TeXFont.h"
#include "TeXFormula.h"
#include "java/lang/Character.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface OrgScilabForgeJlatexmathSpaceAtom () {
 @public
  jboolean blankSpace_;
  jint blankType_;
  jfloat width_;
  jfloat height_;
  jfloat depth_;
  jint wUnit_;
  jint hUnit_;
  jint dUnit_;
}

@end

static id<JavaUtilMap> OrgScilabForgeJlatexmathSpaceAtom_units_;
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathSpaceAtom, units_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(OrgScilabForgeJlatexmathSpaceAtom, units_, id<JavaUtilMap>)

static IOSObjectArray *OrgScilabForgeJlatexmathSpaceAtom_unitConversions_;
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathSpaceAtom, unitConversions_, IOSObjectArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgScilabForgeJlatexmathSpaceAtom, unitConversions_, IOSObjectArray *)

@protocol OrgScilabForgeJlatexmathSpaceAtom_UnitConversion < NSObject, JavaObject >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

@end

@interface OrgScilabForgeJlatexmathSpaceAtom_UnitConversion : NSObject
@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_UnitConversion)

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_UnitConversion)

@interface OrgScilabForgeJlatexmathSpaceAtom_$1 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$1)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$1_init(OrgScilabForgeJlatexmathSpaceAtom_$1 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$1 *new_OrgScilabForgeJlatexmathSpaceAtom_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$1)

@interface OrgScilabForgeJlatexmathSpaceAtom_$2 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$2)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$2_init(OrgScilabForgeJlatexmathSpaceAtom_$2 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$2 *new_OrgScilabForgeJlatexmathSpaceAtom_$2_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$2)

@interface OrgScilabForgeJlatexmathSpaceAtom_$3 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$3)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$3_init(OrgScilabForgeJlatexmathSpaceAtom_$3 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$3 *new_OrgScilabForgeJlatexmathSpaceAtom_$3_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$3)

@interface OrgScilabForgeJlatexmathSpaceAtom_$4 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$4)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$4_init(OrgScilabForgeJlatexmathSpaceAtom_$4 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$4 *new_OrgScilabForgeJlatexmathSpaceAtom_$4_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$4)

@interface OrgScilabForgeJlatexmathSpaceAtom_$5 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$5)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$5_init(OrgScilabForgeJlatexmathSpaceAtom_$5 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$5 *new_OrgScilabForgeJlatexmathSpaceAtom_$5_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$5)

@interface OrgScilabForgeJlatexmathSpaceAtom_$6 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$6)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$6_init(OrgScilabForgeJlatexmathSpaceAtom_$6 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$6 *new_OrgScilabForgeJlatexmathSpaceAtom_$6_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$6)

@interface OrgScilabForgeJlatexmathSpaceAtom_$7 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$7)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$7_init(OrgScilabForgeJlatexmathSpaceAtom_$7 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$7 *new_OrgScilabForgeJlatexmathSpaceAtom_$7_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$7)

@interface OrgScilabForgeJlatexmathSpaceAtom_$8 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$8)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$8_init(OrgScilabForgeJlatexmathSpaceAtom_$8 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$8 *new_OrgScilabForgeJlatexmathSpaceAtom_$8_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$8)

@interface OrgScilabForgeJlatexmathSpaceAtom_$9 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$9)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$9_init(OrgScilabForgeJlatexmathSpaceAtom_$9 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$9 *new_OrgScilabForgeJlatexmathSpaceAtom_$9_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$9)

@interface OrgScilabForgeJlatexmathSpaceAtom_$10 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$10)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$10_init(OrgScilabForgeJlatexmathSpaceAtom_$10 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$10 *new_OrgScilabForgeJlatexmathSpaceAtom_$10_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$10)

@interface OrgScilabForgeJlatexmathSpaceAtom_$11 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$11)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$11_init(OrgScilabForgeJlatexmathSpaceAtom_$11 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$11 *new_OrgScilabForgeJlatexmathSpaceAtom_$11_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$11)

@interface OrgScilabForgeJlatexmathSpaceAtom_$12 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$12)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$12_init(OrgScilabForgeJlatexmathSpaceAtom_$12 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$12 *new_OrgScilabForgeJlatexmathSpaceAtom_$12_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$12)

@interface OrgScilabForgeJlatexmathSpaceAtom_$13 : NSObject < OrgScilabForgeJlatexmathSpaceAtom_UnitConversion >

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgScilabForgeJlatexmathSpaceAtom_$13)

__attribute__((unused)) static void OrgScilabForgeJlatexmathSpaceAtom_$13_init(OrgScilabForgeJlatexmathSpaceAtom_$13 *self);

__attribute__((unused)) static OrgScilabForgeJlatexmathSpaceAtom_$13 *new_OrgScilabForgeJlatexmathSpaceAtom_$13_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgScilabForgeJlatexmathSpaceAtom_$13)

J2OBJC_INITIALIZED_DEFN(OrgScilabForgeJlatexmathSpaceAtom)

@implementation OrgScilabForgeJlatexmathSpaceAtom

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)type {
  OrgScilabForgeJlatexmathSpaceAtom_initWithInt_(self, type);
  return self;
}

- (instancetype)initWithInt:(jint)unit
                  withFloat:(jfloat)width
                  withFloat:(jfloat)height
                  withFloat:(jfloat)depth {
  OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(self, unit, width, height, depth);
  return self;
}

+ (void)checkUnitWithInt:(jint)unit {
  OrgScilabForgeJlatexmathSpaceAtom_checkUnitWithInt_(unit);
}

- (instancetype)initWithInt:(jint)widthUnit
                  withFloat:(jfloat)width
                    withInt:(jint)heightUnit
                  withFloat:(jfloat)height
                    withInt:(jint)depthUnit
                  withFloat:(jfloat)depth {
  OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withInt_withFloat_withInt_withFloat_(self, widthUnit, width, heightUnit, height, depthUnit, depth);
  return self;
}

+ (jint)getUnitWithNSString:(NSString *)unit {
  return OrgScilabForgeJlatexmathSpaceAtom_getUnitWithNSString_(unit);
}

+ (IOSFloatArray *)getLengthWithNSString:(NSString *)lgth {
  return OrgScilabForgeJlatexmathSpaceAtom_getLengthWithNSString_(lgth);
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  if (blankSpace_) {
    if (blankType_ == 0) return new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSpace], 0, 0, 0);
    else {
      jint bl = blankType_ < 0 ? -blankType_ : blankType_;
      OrgScilabForgeJlatexmathBox *b;
      if (bl == OrgScilabForgeJlatexmathTeXConstants_THINMUSKIP) {
        b = OrgScilabForgeJlatexmathGlue_getWithInt_withInt_withOrgScilabForgeJlatexmathTeXEnvironment_(OrgScilabForgeJlatexmathTeXConstants_TYPE_INNER, OrgScilabForgeJlatexmathTeXConstants_TYPE_BIG_OPERATOR, env);
      }
      else if (bl == OrgScilabForgeJlatexmathTeXConstants_MEDMUSKIP) b = OrgScilabForgeJlatexmathGlue_getWithInt_withInt_withOrgScilabForgeJlatexmathTeXEnvironment_(OrgScilabForgeJlatexmathTeXConstants_TYPE_BINARY_OPERATOR, OrgScilabForgeJlatexmathTeXConstants_TYPE_BIG_OPERATOR, env);
      else b = OrgScilabForgeJlatexmathGlue_getWithInt_withInt_withOrgScilabForgeJlatexmathTeXEnvironment_(OrgScilabForgeJlatexmathTeXConstants_TYPE_RELATION, OrgScilabForgeJlatexmathTeXConstants_TYPE_BIG_OPERATOR, env);
      if (blankType_ < 0) [((OrgScilabForgeJlatexmathBox *) nil_chk(b)) negWidth];
      return b;
    }
  }
  else {
    return new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(width_ * OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_(wUnit_, env), height_ * OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_(hUnit_, env), depth_ * OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_(dUnit_, env), 0);
  }
}

+ (jfloat)getFactorWithInt:(jint)unit
withOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_(unit, env);
}

+ (void)initialize {
  if (self == [OrgScilabForgeJlatexmathSpaceAtom class]) {
    OrgScilabForgeJlatexmathSpaceAtom_units_ = new_JavaUtilHashMap_init();
    {
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"em" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_EM)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"ex" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_EX)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"px" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_PIXEL)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"pix" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_PIXEL)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"pixel" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_PIXEL)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"pt" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_PT)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"bp" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_POINT)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"pica" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_PICA)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"pc" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_PICA)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"mu" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_MU)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"cm" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_CM)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"mm" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_MM)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"in" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_IN)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"sp" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_SP)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"dd" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_DD)];
      (void) [OrgScilabForgeJlatexmathSpaceAtom_units_ putWithId:@"cc" withId:JavaLangInteger_valueOfWithInt_(OrgScilabForgeJlatexmathTeXConstants_UNIT_CC)];
    }
    OrgScilabForgeJlatexmathSpaceAtom_unitConversions_ = [IOSObjectArray newArrayWithObjects:(id[]){ new_OrgScilabForgeJlatexmathSpaceAtom_$1_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$2_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$3_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$4_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$5_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$6_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$7_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$8_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$9_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$10_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$11_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$12_init(), new_OrgScilabForgeJlatexmathSpaceAtom_$13_init() } count:13 type:OrgScilabForgeJlatexmathSpaceAtom_UnitConversion_class_()];
    J2OBJC_SET_INITIALIZED(OrgScilabForgeJlatexmathSpaceAtom)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SpaceAtom", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "SpaceAtom", NULL, 0x1, NULL, NULL },
    { "initWithInt:withFloat:withFloat:withFloat:", "SpaceAtom", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.InvalidUnitException;", NULL },
    { "checkUnitWithInt:", "checkUnit", "V", 0x9, "Lorg.scilab.forge.jlatexmath.exception.InvalidUnitException;", NULL },
    { "initWithInt:withFloat:withInt:withFloat:withInt:withFloat:", "SpaceAtom", NULL, 0x1, "Lorg.scilab.forge.jlatexmath.exception.InvalidUnitException;", NULL },
    { "getUnitWithNSString:", "getUnit", "I", 0x9, NULL, NULL },
    { "getLengthWithNSString:", "getLength", "[F", 0x9, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
    { "getFactorWithInt:withOrgScilabForgeJlatexmathTeXEnvironment:", "getFactor", "F", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "units_", NULL, 0xa, "Ljava.util.Map;", &OrgScilabForgeJlatexmathSpaceAtom_units_, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;",  },
    { "unitConversions_", NULL, 0xa, "[Lorg.scilab.forge.jlatexmath.SpaceAtom$UnitConversion;", &OrgScilabForgeJlatexmathSpaceAtom_unitConversions_, NULL,  },
    { "blankSpace_", NULL, 0x2, "Z", NULL, NULL,  },
    { "blankType_", NULL, 0x2, "I", NULL, NULL,  },
    { "width_", NULL, 0x2, "F", NULL, NULL,  },
    { "height_", NULL, 0x2, "F", NULL, NULL,  },
    { "depth_", NULL, 0x2, "F", NULL, NULL,  },
    { "wUnit_", NULL, 0x2, "I", NULL, NULL,  },
    { "hUnit_", NULL, 0x2, "I", NULL, NULL,  },
    { "dUnit_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.scilab.forge.jlatexmath.SpaceAtom$UnitConversion;"};
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom = { 2, "SpaceAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 9, methods, 10, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_init(OrgScilabForgeJlatexmathSpaceAtom *self) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->blankSpace_ = YES;
}

OrgScilabForgeJlatexmathSpaceAtom *new_OrgScilabForgeJlatexmathSpaceAtom_init() {
  OrgScilabForgeJlatexmathSpaceAtom *self = [OrgScilabForgeJlatexmathSpaceAtom alloc];
  OrgScilabForgeJlatexmathSpaceAtom_init(self);
  return self;
}

void OrgScilabForgeJlatexmathSpaceAtom_initWithInt_(OrgScilabForgeJlatexmathSpaceAtom *self, jint type) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->blankSpace_ = YES;
  self->blankType_ = type;
}

OrgScilabForgeJlatexmathSpaceAtom *new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_(jint type) {
  OrgScilabForgeJlatexmathSpaceAtom *self = [OrgScilabForgeJlatexmathSpaceAtom alloc];
  OrgScilabForgeJlatexmathSpaceAtom_initWithInt_(self, type);
  return self;
}

void OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathSpaceAtom *self, jint unit, jfloat width, jfloat height, jfloat depth) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  OrgScilabForgeJlatexmathSpaceAtom_checkUnitWithInt_(unit);
  self->wUnit_ = unit;
  self->hUnit_ = unit;
  self->dUnit_ = unit;
  self->width_ = width;
  self->height_ = height;
  self->depth_ = depth;
}

OrgScilabForgeJlatexmathSpaceAtom *new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(jint unit, jfloat width, jfloat height, jfloat depth) {
  OrgScilabForgeJlatexmathSpaceAtom *self = [OrgScilabForgeJlatexmathSpaceAtom alloc];
  OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(self, unit, width, height, depth);
  return self;
}

void OrgScilabForgeJlatexmathSpaceAtom_checkUnitWithInt_(jint unit) {
  OrgScilabForgeJlatexmathSpaceAtom_initialize();
  if (unit < 0 || unit >= ((IOSObjectArray *) nil_chk(OrgScilabForgeJlatexmathSpaceAtom_unitConversions_))->size_) @throw new_OrgScilabForgeJlatexmathExceptionInvalidUnitException_init();
}

void OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withInt_withFloat_withInt_withFloat_(OrgScilabForgeJlatexmathSpaceAtom *self, jint widthUnit, jfloat width, jint heightUnit, jfloat height, jint depthUnit, jfloat depth) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  OrgScilabForgeJlatexmathSpaceAtom_checkUnitWithInt_(widthUnit);
  OrgScilabForgeJlatexmathSpaceAtom_checkUnitWithInt_(heightUnit);
  OrgScilabForgeJlatexmathSpaceAtom_checkUnitWithInt_(depthUnit);
  self->wUnit_ = widthUnit;
  self->hUnit_ = heightUnit;
  self->dUnit_ = depthUnit;
  self->width_ = width;
  self->height_ = height;
  self->depth_ = depth;
}

OrgScilabForgeJlatexmathSpaceAtom *new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withInt_withFloat_withInt_withFloat_(jint widthUnit, jfloat width, jint heightUnit, jfloat height, jint depthUnit, jfloat depth) {
  OrgScilabForgeJlatexmathSpaceAtom *self = [OrgScilabForgeJlatexmathSpaceAtom alloc];
  OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withInt_withFloat_withInt_withFloat_(self, widthUnit, width, heightUnit, height, depthUnit, depth);
  return self;
}

jint OrgScilabForgeJlatexmathSpaceAtom_getUnitWithNSString_(NSString *unit) {
  OrgScilabForgeJlatexmathSpaceAtom_initialize();
  JavaLangInteger *u = [((id<JavaUtilMap>) nil_chk(OrgScilabForgeJlatexmathSpaceAtom_units_)) getWithId:unit];
  return u == nil ? OrgScilabForgeJlatexmathTeXConstants_UNIT_PIXEL : [u intValue];
}

IOSFloatArray *OrgScilabForgeJlatexmathSpaceAtom_getLengthWithNSString_(NSString *lgth) {
  OrgScilabForgeJlatexmathSpaceAtom_initialize();
  if (lgth == nil) {
    return [IOSFloatArray newArrayWithFloats:(jfloat[]){ OrgScilabForgeJlatexmathTeXConstants_UNIT_PIXEL, 0.0f } count:2];
  }
  jint i = 0;
  for (; i < ((jint) [((NSString *) nil_chk(lgth)) length]) && !JavaLangCharacter_isLetterWithChar_([lgth charAtWithInt:i]); i++) ;
  jfloat f = 0;
  @try {
    f = JavaLangFloat_parseFloatWithNSString_([lgth substring:0 endIndex:i]);
  }
  @catch (JavaLangNumberFormatException *e) {
    return [IOSFloatArray newArrayWithFloats:(jfloat[]){ JavaLangFloat_NaN } count:1];
  }
  jint unit;
  if (i != ((jint) [lgth length])) {
    unit = OrgScilabForgeJlatexmathSpaceAtom_getUnitWithNSString_([((NSString *) nil_chk([lgth substring:i])) lowercaseString]);
  }
  else {
    unit = OrgScilabForgeJlatexmathTeXConstants_UNIT_PIXEL;
  }
  return [IOSFloatArray newArrayWithFloats:(jfloat[]){ (jfloat) unit, f } count:2];
}

jfloat OrgScilabForgeJlatexmathSpaceAtom_getFactorWithInt_withOrgScilabForgeJlatexmathTeXEnvironment_(jint unit, OrgScilabForgeJlatexmathTeXEnvironment *env) {
  OrgScilabForgeJlatexmathSpaceAtom_initialize();
  return [((id<OrgScilabForgeJlatexmathSpaceAtom_UnitConversion>) nil_chk(IOSObjectArray_Get(nil_chk(OrgScilabForgeJlatexmathSpaceAtom_unitConversions_), unit))) getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:env];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom)

@implementation OrgScilabForgeJlatexmathSpaceAtom_UnitConversion

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_UnitConversion = { 2, "UnitConversion", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x60a, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_UnitConversion;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_UnitConversion)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$1

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont])) getEMWithInt:[env getStyle]];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$1 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$1;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$1_init(OrgScilabForgeJlatexmathSpaceAtom_$1 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$1 *new_OrgScilabForgeJlatexmathSpaceAtom_$1_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$1 *self = [OrgScilabForgeJlatexmathSpaceAtom_$1 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$1)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$2

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont])) getXHeightWithInt:[env getStyle] withInt:[env getLastFontId]];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$2_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$2 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$2;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$2_init(OrgScilabForgeJlatexmathSpaceAtom_$2 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$2 *new_OrgScilabForgeJlatexmathSpaceAtom_$2_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$2 *self = [OrgScilabForgeJlatexmathSpaceAtom_$2 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$2_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$2)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$3

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return 1 / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$3_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$3 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$3;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$3_init(OrgScilabForgeJlatexmathSpaceAtom_$3 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$3 *new_OrgScilabForgeJlatexmathSpaceAtom_$3_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$3 *self = [OrgScilabForgeJlatexmathSpaceAtom_$3 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$3_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$3)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$4

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_() / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$4_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$4 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$4;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$4_init(OrgScilabForgeJlatexmathSpaceAtom_$4 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$4 *new_OrgScilabForgeJlatexmathSpaceAtom_$4_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$4 *self = [OrgScilabForgeJlatexmathSpaceAtom_$4 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$4_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$4)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$5

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (12 * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$5_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$5 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$5;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$5_init(OrgScilabForgeJlatexmathSpaceAtom_$5 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$5 *new_OrgScilabForgeJlatexmathSpaceAtom_$5_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$5 *self = [OrgScilabForgeJlatexmathSpaceAtom_$5 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$5_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$5)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$6

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  id<OrgScilabForgeJlatexmathTeXFont> tf = [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont];
  return [tf getQuadWithInt:[env getStyle] withInt:[((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getMuFontId]] / 18;
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$6_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$6 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$6;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$6_init(OrgScilabForgeJlatexmathSpaceAtom_$6 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$6 *new_OrgScilabForgeJlatexmathSpaceAtom_$6_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$6 *self = [OrgScilabForgeJlatexmathSpaceAtom_$6 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$6_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$6)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$7

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (28.346456693f * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$7_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$7 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$7;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$7_init(OrgScilabForgeJlatexmathSpaceAtom_$7 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$7 *new_OrgScilabForgeJlatexmathSpaceAtom_$7_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$7 *self = [OrgScilabForgeJlatexmathSpaceAtom_$7 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$7_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$7)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$8

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (2.8346456693f * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$8_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$8 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$8;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$8_init(OrgScilabForgeJlatexmathSpaceAtom_$8 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$8 *new_OrgScilabForgeJlatexmathSpaceAtom_$8_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$8 *self = [OrgScilabForgeJlatexmathSpaceAtom_$8 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$8_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$8)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$9

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (72 * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$9_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$9 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$9;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$9_init(OrgScilabForgeJlatexmathSpaceAtom_$9 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$9 *new_OrgScilabForgeJlatexmathSpaceAtom_$9_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$9 *self = [OrgScilabForgeJlatexmathSpaceAtom_$9 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$9_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$9)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$10

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (65536 * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$10_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$10 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$10;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$10_init(OrgScilabForgeJlatexmathSpaceAtom_$10 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$10 *new_OrgScilabForgeJlatexmathSpaceAtom_$10_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$10 *self = [OrgScilabForgeJlatexmathSpaceAtom_$10 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$10_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$10)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$11

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (.9962640099f * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$11_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$11 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$11;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$11_init(OrgScilabForgeJlatexmathSpaceAtom_$11 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$11 *new_OrgScilabForgeJlatexmathSpaceAtom_$11_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$11 *self = [OrgScilabForgeJlatexmathSpaceAtom_$11 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$11_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$11)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$12

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (1.0660349422f * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$12_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$12 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$12;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$12_init(OrgScilabForgeJlatexmathSpaceAtom_$12 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$12 *new_OrgScilabForgeJlatexmathSpaceAtom_$12_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$12 *self = [OrgScilabForgeJlatexmathSpaceAtom_$12 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$12_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$12)

@implementation OrgScilabForgeJlatexmathSpaceAtom_$13

- (jfloat)getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  return (12.7924193070f * OrgScilabForgeJlatexmathTeXFormula_get_PIXELS_PER_POINT_()) / [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getSize];
}

- (instancetype)init {
  OrgScilabForgeJlatexmathSpaceAtom_$13_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPixelConversionWithOrgScilabForgeJlatexmathTeXEnvironment:", "getPixelConversion", "F", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathSpaceAtom_$13 = { 2, "", "org.scilab.forge.jlatexmath", "SpaceAtom", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathSpaceAtom_$13;
}

@end

void OrgScilabForgeJlatexmathSpaceAtom_$13_init(OrgScilabForgeJlatexmathSpaceAtom_$13 *self) {
  (void) NSObject_init(self);
}

OrgScilabForgeJlatexmathSpaceAtom_$13 *new_OrgScilabForgeJlatexmathSpaceAtom_$13_init() {
  OrgScilabForgeJlatexmathSpaceAtom_$13 *self = [OrgScilabForgeJlatexmathSpaceAtom_$13 alloc];
  OrgScilabForgeJlatexmathSpaceAtom_$13_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathSpaceAtom_$13)
