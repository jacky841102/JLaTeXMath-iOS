//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/ScriptsAtom.java
//


#include "AccentedAtom.h"
#include "Atom.h"
#include "Box.h"
#include "Char.h"
#include "CharBox.h"
#include "CharFont.h"
#include "CharSymbol.h"
#include "HorizontalBox.h"
#include "J2ObjC_source.h"
#include "ScriptsAtom.h"
#include "SpaceAtom.h"
#include "StrutBox.h"
#include "SymbolAtom.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "TeXFont.h"
#include "TeXFormula.h"
#include "UnderOverAtom.h"
#include "VerticalBox.h"
#include "java/lang/Math.h"

@interface OrgScilabForgeJlatexmathScriptsAtom () {
 @public
  OrgScilabForgeJlatexmathAtom *base_;
  OrgScilabForgeJlatexmathAtom *subscript_;
  OrgScilabForgeJlatexmathAtom *superscript_;
  jint align_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathScriptsAtom, base_, OrgScilabForgeJlatexmathAtom *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathScriptsAtom, subscript_, OrgScilabForgeJlatexmathAtom *)
J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathScriptsAtom, superscript_, OrgScilabForgeJlatexmathAtom *)

static OrgScilabForgeJlatexmathSpaceAtom *OrgScilabForgeJlatexmathScriptsAtom_SCRIPT_SPACE_;
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathScriptsAtom, SCRIPT_SPACE_, OrgScilabForgeJlatexmathSpaceAtom *)

J2OBJC_INITIALIZED_DEFN(OrgScilabForgeJlatexmathScriptsAtom)

@implementation OrgScilabForgeJlatexmathScriptsAtom

- (instancetype)initWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)base
                    withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)sub
                    withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)sup {
  OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(self, base, sub, sup);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)base
                    withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)sub
                    withOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)sup
                                         withBoolean:(jboolean)left {
  OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withBoolean_(self, base, sub, sup, left);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  OrgScilabForgeJlatexmathBox *b = (base_ == nil ? new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, 0, 0, 0) : [base_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]);
  OrgScilabForgeJlatexmathBox *deltaSymbol = new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, 0, 0, 0);
  if (subscript_ == nil && superscript_ == nil) return b;
  else {
    id<OrgScilabForgeJlatexmathTeXFont> tf = [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont];
    jint style = [env getStyle];
    if (((OrgScilabForgeJlatexmathAtom *) nil_chk(base_))->type_limits_ == OrgScilabForgeJlatexmathTeXConstants_SCRIPT_LIMITS || (base_->type_limits_ == OrgScilabForgeJlatexmathTeXConstants_SCRIPT_NORMAL && style == OrgScilabForgeJlatexmathTeXConstants_STYLE_DISPLAY)) return [new_OrgScilabForgeJlatexmathUnderOverAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withInt_withFloat_withBoolean_withBoolean_(new_OrgScilabForgeJlatexmathUnderOverAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withInt_withFloat_withBoolean_withBoolean_(base_, subscript_, OrgScilabForgeJlatexmathTeXConstants_UNIT_POINT, 0.3f, YES, NO), superscript_, OrgScilabForgeJlatexmathTeXConstants_UNIT_POINT, 3.0f, YES, YES) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env];
    OrgScilabForgeJlatexmathHorizontalBox *hor = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(b);
    jint lastFontId = [b getLastFontId];
    if (lastFontId == OrgScilabForgeJlatexmathTeXFont_NO_FONT) lastFontId = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getMuFontId];
    OrgScilabForgeJlatexmathTeXEnvironment *subStyle = [env subStyle], *supStyle = [env supStyle];
    jfloat delta = 0, shiftUp, shiftDown;
    if ([base_ isKindOfClass:[OrgScilabForgeJlatexmathAccentedAtom class]]) {
      OrgScilabForgeJlatexmathBox *box = [((OrgScilabForgeJlatexmathAtom *) nil_chk(((OrgScilabForgeJlatexmathAccentedAtom *) check_class_cast(base_, [OrgScilabForgeJlatexmathAccentedAtom class]))->base_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:[env crampStyle]];
      shiftUp = [((OrgScilabForgeJlatexmathBox *) nil_chk(box)) getHeight] - [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getSupDropWithInt:[((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(supStyle)) getStyle]];
      shiftDown = [box getDepth] + [tf getSubDropWithInt:[((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(subStyle)) getStyle]];
    }
    else if ([base_ isKindOfClass:[OrgScilabForgeJlatexmathSymbolAtom class]] && base_->type_ == OrgScilabForgeJlatexmathTeXConstants_TYPE_BIG_OPERATOR) {
      OrgScilabForgeJlatexmathChar *c = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getCharWithNSString:[((OrgScilabForgeJlatexmathSymbolAtom *) check_class_cast(base_, [OrgScilabForgeJlatexmathSymbolAtom class])) getName] withInt:style];
      if (style < OrgScilabForgeJlatexmathTeXConstants_STYLE_TEXT && [tf hasNextLargerWithOrgScilabForgeJlatexmathChar:c]) c = [tf getNextLargerWithOrgScilabForgeJlatexmathChar:c withInt:style];
      OrgScilabForgeJlatexmathBox *x = new_OrgScilabForgeJlatexmathCharBox_initWithOrgScilabForgeJlatexmathChar_(c);
      [x setShiftWithFloat:-([x getHeight] + [x getDepth]) / 2 - [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([env getTeXFont])) getAxisHeightWithInt:[env getStyle]]];
      hor = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(x);
      delta = [((OrgScilabForgeJlatexmathChar *) nil_chk(c)) getItalic];
      deltaSymbol = [new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_(OrgScilabForgeJlatexmathTeXConstants_MEDMUSKIP) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env];
      if (delta > OrgScilabForgeJlatexmathTeXFormula_PREC && subscript_ == nil) [hor addWithOrgScilabForgeJlatexmathBox:new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(delta, 0, 0, 0)];
      shiftUp = [hor getHeight] - [tf getSupDropWithInt:[((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(supStyle)) getStyle]];
      shiftDown = [hor getDepth] + [tf getSubDropWithInt:[((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(subStyle)) getStyle]];
    }
    else if ([base_ isKindOfClass:[OrgScilabForgeJlatexmathCharSymbol class]]) {
      shiftUp = shiftDown = 0;
      OrgScilabForgeJlatexmathCharFont *cf = [((OrgScilabForgeJlatexmathCharSymbol *) check_class_cast(base_, [OrgScilabForgeJlatexmathCharSymbol class])) getCharFontWithOrgScilabForgeJlatexmathTeXFont:tf];
      if (![((OrgScilabForgeJlatexmathCharSymbol *) check_class_cast(base_, [OrgScilabForgeJlatexmathCharSymbol class])) isMarkedAsTextSymbol] || ![((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) hasSpaceWithInt:((OrgScilabForgeJlatexmathCharFont *) nil_chk(cf))->fontId_]) {
        delta = [((OrgScilabForgeJlatexmathChar *) nil_chk([((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getCharWithOrgScilabForgeJlatexmathCharFont:cf withInt:style])) getItalic];
      }
      if (delta > OrgScilabForgeJlatexmathTeXFormula_PREC && subscript_ == nil) {
        [hor addWithOrgScilabForgeJlatexmathBox:new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(delta, 0, 0, 0)];
        delta = 0;
      }
    }
    else {
      shiftUp = [b getHeight] - [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getSupDropWithInt:[((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(supStyle)) getStyle]];
      shiftDown = [b getDepth] + [tf getSubDropWithInt:[((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(subStyle)) getStyle]];
    }
    if (superscript_ == nil) {
      OrgScilabForgeJlatexmathBox *x = [((OrgScilabForgeJlatexmathAtom *) nil_chk(subscript_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:subStyle];
      [x setShiftWithFloat:JavaLangMath_maxWithFloat_withFloat_(JavaLangMath_maxWithFloat_withFloat_(shiftDown, [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getSub1WithInt:style]), [((OrgScilabForgeJlatexmathBox *) nil_chk(x)) getHeight] - 4 * JavaLangMath_absWithFloat_([tf getXHeightWithInt:style withInt:lastFontId]) / 5)];
      [hor addWithOrgScilabForgeJlatexmathBox:x];
      [hor addWithOrgScilabForgeJlatexmathBox:deltaSymbol];
      return hor;
    }
    else {
      OrgScilabForgeJlatexmathBox *x = [superscript_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:supStyle];
      jfloat msiz = [((OrgScilabForgeJlatexmathBox *) nil_chk(x)) getWidth];
      if (subscript_ != nil && align_ == OrgScilabForgeJlatexmathTeXConstants_ALIGN_RIGHT) {
        msiz = JavaLangMath_maxWithFloat_withFloat_(msiz, [((OrgScilabForgeJlatexmathBox *) nil_chk([subscript_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:subStyle])) getWidth]);
      }
      OrgScilabForgeJlatexmathHorizontalBox *sup = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(x, msiz, align_);
      [sup addWithOrgScilabForgeJlatexmathBox:[((OrgScilabForgeJlatexmathSpaceAtom *) nil_chk(OrgScilabForgeJlatexmathScriptsAtom_SCRIPT_SPACE_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]];
      jfloat p;
      if (style == OrgScilabForgeJlatexmathTeXConstants_STYLE_DISPLAY) p = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getSup1WithInt:style];
      else if ([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk([env crampStyle])) getStyle] == style) p = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getSup3WithInt:style];
      else p = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getSup2WithInt:style];
      shiftUp = JavaLangMath_maxWithFloat_withFloat_(JavaLangMath_maxWithFloat_withFloat_(shiftUp, p), [x getDepth] + JavaLangMath_absWithFloat_([((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk(tf)) getXHeightWithInt:style withInt:lastFontId]) / 4);
      if (subscript_ == nil) {
        [sup setShiftWithFloat:-shiftUp];
        [hor addWithOrgScilabForgeJlatexmathBox:sup];
      }
      else {
        OrgScilabForgeJlatexmathBox *y = [subscript_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:subStyle];
        OrgScilabForgeJlatexmathHorizontalBox *sub = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(y, msiz, align_);
        [sub addWithOrgScilabForgeJlatexmathBox:[OrgScilabForgeJlatexmathScriptsAtom_SCRIPT_SPACE_ createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]];
        shiftDown = JavaLangMath_maxWithFloat_withFloat_(shiftDown, [tf getSub2WithInt:style]);
        jfloat drt = [tf getDefaultRuleThicknessWithInt:style];
        jfloat interSpace = shiftUp - [x getDepth] + shiftDown - [((OrgScilabForgeJlatexmathBox *) nil_chk(y)) getHeight];
        if (interSpace < 4 * drt) {
          shiftUp += 4 * drt - interSpace;
          jfloat psi = 4 * JavaLangMath_absWithFloat_([tf getXHeightWithInt:style withInt:lastFontId]) / 5 - (shiftUp - [x getDepth]);
          if (psi > 0) {
            shiftUp += psi;
            shiftDown -= psi;
          }
        }
        OrgScilabForgeJlatexmathVerticalBox *vBox = new_OrgScilabForgeJlatexmathVerticalBox_init();
        [sup setShiftWithFloat:delta];
        [vBox addWithOrgScilabForgeJlatexmathBox:sup];
        interSpace = shiftUp - [x getDepth] + shiftDown - [y getHeight];
        [vBox addWithOrgScilabForgeJlatexmathBox:new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, interSpace, 0, 0)];
        [vBox addWithOrgScilabForgeJlatexmathBox:sub];
        [vBox setHeightWithFloat:shiftUp + [x getHeight]];
        [vBox setDepthWithFloat:shiftDown + [y getDepth]];
        [hor addWithOrgScilabForgeJlatexmathBox:vBox];
      }
      [hor addWithOrgScilabForgeJlatexmathBox:deltaSymbol];
      return hor;
    }
  }
}

- (jint)getLeftType {
  return [((OrgScilabForgeJlatexmathAtom *) nil_chk(base_)) getLeftType];
}

- (jint)getRightType {
  return [((OrgScilabForgeJlatexmathAtom *) nil_chk(base_)) getRightType];
}

+ (void)initialize {
  if (self == [OrgScilabForgeJlatexmathScriptsAtom class]) {
    OrgScilabForgeJlatexmathScriptsAtom_SCRIPT_SPACE_ = new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_POINT, 0.5f, 0, 0);
    J2OBJC_SET_INITIALIZED(OrgScilabForgeJlatexmathScriptsAtom)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathAtom:withOrgScilabForgeJlatexmathAtom:withOrgScilabForgeJlatexmathAtom:", "ScriptsAtom", NULL, 0x1, NULL, NULL },
    { "initWithOrgScilabForgeJlatexmathAtom:withOrgScilabForgeJlatexmathAtom:withOrgScilabForgeJlatexmathAtom:withBoolean:", "ScriptsAtom", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
    { "getLeftType", NULL, "I", 0x1, NULL, NULL },
    { "getRightType", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SCRIPT_SPACE_", NULL, 0x1a, "Lorg.scilab.forge.jlatexmath.SpaceAtom;", &OrgScilabForgeJlatexmathScriptsAtom_SCRIPT_SPACE_, NULL,  },
    { "base_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "subscript_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "superscript_", NULL, 0x12, "Lorg.scilab.forge.jlatexmath.Atom;", NULL, NULL,  },
    { "align_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathScriptsAtom = { 2, "ScriptsAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathScriptsAtom;
}

@end

void OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathScriptsAtom *self, OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *sub, OrgScilabForgeJlatexmathAtom *sup) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->align_ = OrgScilabForgeJlatexmathTeXConstants_ALIGN_LEFT;
  self->base_ = base;
  self->subscript_ = sub;
  self->superscript_ = sup;
}

OrgScilabForgeJlatexmathScriptsAtom *new_OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *sub, OrgScilabForgeJlatexmathAtom *sup) {
  OrgScilabForgeJlatexmathScriptsAtom *self = [OrgScilabForgeJlatexmathScriptsAtom alloc];
  OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(self, base, sub, sup);
  return self;
}

void OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withBoolean_(OrgScilabForgeJlatexmathScriptsAtom *self, OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *sub, OrgScilabForgeJlatexmathAtom *sup, jboolean left) {
  (void) OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_(self, base, sub, sup);
  if (!left) self->align_ = OrgScilabForgeJlatexmathTeXConstants_ALIGN_RIGHT;
}

OrgScilabForgeJlatexmathScriptsAtom *new_OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withBoolean_(OrgScilabForgeJlatexmathAtom *base, OrgScilabForgeJlatexmathAtom *sub, OrgScilabForgeJlatexmathAtom *sup, jboolean left) {
  OrgScilabForgeJlatexmathScriptsAtom *self = [OrgScilabForgeJlatexmathScriptsAtom alloc];
  OrgScilabForgeJlatexmathScriptsAtom_initWithOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withOrgScilabForgeJlatexmathAtom_withBoolean_(self, base, sub, sup, left);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathScriptsAtom)
