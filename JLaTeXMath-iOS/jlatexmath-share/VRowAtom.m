//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/VRowAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "J2ObjC_source.h"
#include "SpaceAtom.h"
#include "StrutBox.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"
#include "VRowAtom.h"
#include "VerticalBox.h"
#include "java/util/LinkedList.h"
#include "java/util/ListIterator.h"

@interface OrgScilabForgeJlatexmathVRowAtom () {
 @public
  OrgScilabForgeJlatexmathSpaceAtom *raise_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathVRowAtom, raise_, OrgScilabForgeJlatexmathSpaceAtom *)

@implementation OrgScilabForgeJlatexmathVRowAtom

- (instancetype)init {
  OrgScilabForgeJlatexmathVRowAtom_init(self);
  return self;
}

- (instancetype)initWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)el {
  OrgScilabForgeJlatexmathVRowAtom_initWithOrgScilabForgeJlatexmathAtom_(self, el);
  return self;
}

- (void)setAddInterlineWithBoolean:(jboolean)addInterline {
  self->addInterline_ = addInterline;
}

- (jboolean)getAddInterline {
  return self->addInterline_;
}

- (void)setRaiseWithInt:(jint)unit
              withFloat:(jfloat)r {
  raise_ = new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(unit, r, 0, 0);
}

- (OrgScilabForgeJlatexmathAtom *)getLastAtom {
  return [((JavaUtilLinkedList *) nil_chk(elements_)) removeLast];
}

- (void)addWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)el {
  if (el != nil) [((JavaUtilLinkedList *) nil_chk(elements_)) addWithInt:0 withId:el];
}

- (void)appendWithOrgScilabForgeJlatexmathAtom:(OrgScilabForgeJlatexmathAtom *)el {
  if (el != nil) [((JavaUtilLinkedList *) nil_chk(elements_)) addWithId:el];
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  OrgScilabForgeJlatexmathVerticalBox *vb = new_OrgScilabForgeJlatexmathVerticalBox_init();
  OrgScilabForgeJlatexmathBox *interline = new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, [((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getInterline], 0, 0);
  for (id<JavaUtilListIterator> it = [((JavaUtilLinkedList *) nil_chk(elements_)) listIterator]; [((id<JavaUtilListIterator>) nil_chk(it)) hasNext]; ) {
    [vb addWithOrgScilabForgeJlatexmathBox:[((OrgScilabForgeJlatexmathAtom *) nil_chk(((OrgScilabForgeJlatexmathAtom *) check_class_cast([it next], [OrgScilabForgeJlatexmathAtom class])))) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]];
    if (addInterline_ && [it hasNext]) {
      [vb addWithOrgScilabForgeJlatexmathBox:interline];
    }
  }
  [vb setShiftWithFloat:-[((OrgScilabForgeJlatexmathBox *) nil_chk([((OrgScilabForgeJlatexmathSpaceAtom *) nil_chk(raise_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env])) getWidth]];
  jfloat t = [vb getSize] == 0 ? 0 : [((OrgScilabForgeJlatexmathBox *) nil_chk([((JavaUtilLinkedList *) nil_chk(vb->children_)) getLast])) getDepth];
  [vb setHeightWithFloat:[vb getDepth] + [vb getHeight] - t];
  [vb setDepthWithFloat:t];
  return vb;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "VRowAtom", NULL, 0x1, NULL, NULL },
    { "initWithOrgScilabForgeJlatexmathAtom:", "VRowAtom", NULL, 0x1, NULL, NULL },
    { "setAddInterlineWithBoolean:", "setAddInterline", "V", 0x1, NULL, NULL },
    { "getAddInterline", NULL, "Z", 0x1, NULL, NULL },
    { "setRaiseWithInt:withFloat:", "setRaise", "V", 0x1, NULL, NULL },
    { "getLastAtom", NULL, "Lorg.scilab.forge.jlatexmath.Atom;", 0x1, NULL, NULL },
    { "addWithOrgScilabForgeJlatexmathAtom:", "add", "V", 0x11, NULL, NULL },
    { "appendWithOrgScilabForgeJlatexmathAtom:", "append", "V", 0x11, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "elements_", NULL, 0x4, "Ljava.util.LinkedList;", NULL, "Ljava/util/LinkedList<Lorg/scilab/forge/jlatexmath/Atom;>;",  },
    { "raise_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.SpaceAtom;", NULL, NULL,  },
    { "addInterline_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathVRowAtom = { 2, "VRowAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathVRowAtom;
}

@end

void OrgScilabForgeJlatexmathVRowAtom_init(OrgScilabForgeJlatexmathVRowAtom *self) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->elements_ = new_JavaUtilLinkedList_init();
  self->raise_ = new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_EX, 0, 0, 0);
  self->addInterline_ = NO;
}

OrgScilabForgeJlatexmathVRowAtom *new_OrgScilabForgeJlatexmathVRowAtom_init() {
  OrgScilabForgeJlatexmathVRowAtom *self = [OrgScilabForgeJlatexmathVRowAtom alloc];
  OrgScilabForgeJlatexmathVRowAtom_init(self);
  return self;
}

void OrgScilabForgeJlatexmathVRowAtom_initWithOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathVRowAtom *self, OrgScilabForgeJlatexmathAtom *el) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->elements_ = new_JavaUtilLinkedList_init();
  self->raise_ = new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_withFloat_withFloat_withFloat_(OrgScilabForgeJlatexmathTeXConstants_UNIT_EX, 0, 0, 0);
  self->addInterline_ = NO;
  if (el != nil) {
    if ([el isKindOfClass:[OrgScilabForgeJlatexmathVRowAtom class]]) [self->elements_ addAllWithJavaUtilCollection:((OrgScilabForgeJlatexmathVRowAtom *) check_class_cast(el, [OrgScilabForgeJlatexmathVRowAtom class]))->elements_];
    else [self->elements_ addWithId:el];
  }
}

OrgScilabForgeJlatexmathVRowAtom *new_OrgScilabForgeJlatexmathVRowAtom_initWithOrgScilabForgeJlatexmathAtom_(OrgScilabForgeJlatexmathAtom *el) {
  OrgScilabForgeJlatexmathVRowAtom *self = [OrgScilabForgeJlatexmathVRowAtom alloc];
  OrgScilabForgeJlatexmathVRowAtom_initWithOrgScilabForgeJlatexmathAtom_(self, el);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathVRowAtom)
