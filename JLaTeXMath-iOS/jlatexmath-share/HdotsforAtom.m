//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/HdotsforAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "HdotsforAtom.h"
#include "HorizontalBox.h"
#include "J2ObjC_source.h"
#include "MulticolumnAtom.h"
#include "SpaceAtom.h"
#include "StrutBox.h"
#include "SymbolAtom.h"
#include "TeXConstants.h"
#include "TeXEnvironment.h"

@interface OrgScilabForgeJlatexmathHdotsforAtom () {
 @public
  jfloat coeff_;
}

@end

static OrgScilabForgeJlatexmathAtom *OrgScilabForgeJlatexmathHdotsforAtom_ldotp_;
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathHdotsforAtom, ldotp_, OrgScilabForgeJlatexmathAtom *)

static OrgScilabForgeJlatexmathAtom *OrgScilabForgeJlatexmathHdotsforAtom_thin_;
J2OBJC_STATIC_FIELD_GETTER(OrgScilabForgeJlatexmathHdotsforAtom, thin_, OrgScilabForgeJlatexmathAtom *)

J2OBJC_INITIALIZED_DEFN(OrgScilabForgeJlatexmathHdotsforAtom)

@implementation OrgScilabForgeJlatexmathHdotsforAtom

- (instancetype)initWithInt:(jint)n
                  withFloat:(jfloat)coeff {
  OrgScilabForgeJlatexmathHdotsforAtom_initWithInt_withFloat_(self, n, coeff);
  return self;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  OrgScilabForgeJlatexmathBox *sp = new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(coeff_ * [((OrgScilabForgeJlatexmathBox *) nil_chk([((OrgScilabForgeJlatexmathAtom *) nil_chk(OrgScilabForgeJlatexmathHdotsforAtom_thin_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env])) getWidth], 0, 0, 0);
  OrgScilabForgeJlatexmathHorizontalBox *db = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(sp);
  [db addWithOrgScilabForgeJlatexmathBox:[((OrgScilabForgeJlatexmathAtom *) nil_chk(OrgScilabForgeJlatexmathHdotsforAtom_ldotp_)) createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:env]];
  [db addWithOrgScilabForgeJlatexmathBox:sp];
  OrgScilabForgeJlatexmathBox *b;
  if (w_ != 0) {
    jfloat dw = [db getWidth];
    b = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_(db);
    while ([b getWidth] < w_) {
      [b addWithOrgScilabForgeJlatexmathBox:db];
    }
    b = new_OrgScilabForgeJlatexmathHorizontalBox_initWithOrgScilabForgeJlatexmathBox_withFloat_withInt_(b, w_, OrgScilabForgeJlatexmathTeXConstants_ALIGN_CENTER);
  }
  else {
    b = db;
  }
  ((OrgScilabForgeJlatexmathBox *) nil_chk(b))->type_ = OrgScilabForgeJlatexmathTeXConstants_TYPE_MULTICOLUMN;
  return b;
}

+ (void)initialize {
  if (self == [OrgScilabForgeJlatexmathHdotsforAtom class]) {
    OrgScilabForgeJlatexmathHdotsforAtom_ldotp_ = OrgScilabForgeJlatexmathSymbolAtom_getWithNSString_(@"ldotp");
    OrgScilabForgeJlatexmathHdotsforAtom_thin_ = new_OrgScilabForgeJlatexmathSpaceAtom_initWithInt_(OrgScilabForgeJlatexmathTeXConstants_THINMUSKIP);
    J2OBJC_SET_INITIALIZED(OrgScilabForgeJlatexmathHdotsforAtom)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withFloat:", "HdotsforAtom", NULL, 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ldotp_", NULL, 0x1a, "Lorg.scilab.forge.jlatexmath.Atom;", &OrgScilabForgeJlatexmathHdotsforAtom_ldotp_, NULL,  },
    { "thin_", NULL, 0x1a, "Lorg.scilab.forge.jlatexmath.Atom;", &OrgScilabForgeJlatexmathHdotsforAtom_thin_, NULL,  },
    { "coeff_", NULL, 0x2, "F", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathHdotsforAtom = { 2, "HdotsforAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathHdotsforAtom;
}

@end

void OrgScilabForgeJlatexmathHdotsforAtom_initWithInt_withFloat_(OrgScilabForgeJlatexmathHdotsforAtom *self, jint n, jfloat coeff) {
  (void) OrgScilabForgeJlatexmathMulticolumnAtom_initWithInt_withNSString_withOrgScilabForgeJlatexmathAtom_(self, n, @"c", OrgScilabForgeJlatexmathHdotsforAtom_ldotp_);
  self->coeff_ = coeff;
}

OrgScilabForgeJlatexmathHdotsforAtom *new_OrgScilabForgeJlatexmathHdotsforAtom_initWithInt_withFloat_(jint n, jfloat coeff) {
  OrgScilabForgeJlatexmathHdotsforAtom *self = [OrgScilabForgeJlatexmathHdotsforAtom alloc];
  OrgScilabForgeJlatexmathHdotsforAtom_initWithInt_withFloat_(self, n, coeff);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathHdotsforAtom)
