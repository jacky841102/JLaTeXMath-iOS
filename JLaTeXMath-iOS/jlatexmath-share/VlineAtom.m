//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/VlineAtom.java
//


#include "Atom.h"
#include "Box.h"
#include "HorizontalBox.h"
#include "HorizontalRule.h"
#include "J2ObjC_source.h"
#include "StrutBox.h"
#include "TeXEnvironment.h"
#include "TeXFont.h"
#include "VlineAtom.h"

@interface OrgScilabForgeJlatexmathVlineAtom () {
 @public
  jfloat height_;
  jfloat shift_;
  jint n_;
}

@end

@implementation OrgScilabForgeJlatexmathVlineAtom

- (instancetype)initWithInt:(jint)n {
  OrgScilabForgeJlatexmathVlineAtom_initWithInt_(self, n);
  return self;
}

- (void)setHeightWithFloat:(jfloat)height {
  self->height_ = height;
}

- (void)setShiftWithFloat:(jfloat)shift {
  self->shift_ = shift;
}

- (jfloat)getWidthWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  if (n_ != 0) {
    jfloat drt = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont])) getDefaultRuleThicknessWithInt:[env getStyle]];
    return drt * (3 * n_ - 2);
  }
  else return 0;
}

- (OrgScilabForgeJlatexmathBox *)createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:(OrgScilabForgeJlatexmathTeXEnvironment *)env {
  if (n_ != 0) {
    jfloat drt = [((id<OrgScilabForgeJlatexmathTeXFont>) nil_chk([((OrgScilabForgeJlatexmathTeXEnvironment *) nil_chk(env)) getTeXFont])) getDefaultRuleThicknessWithInt:[env getStyle]];
    OrgScilabForgeJlatexmathBox *b = new_OrgScilabForgeJlatexmathHorizontalRule_initWithFloat_withFloat_withFloat_(height_, drt, shift_);
    OrgScilabForgeJlatexmathBox *sep = new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(2 * drt, 0, 0, 0);
    OrgScilabForgeJlatexmathHorizontalBox *hb = new_OrgScilabForgeJlatexmathHorizontalBox_init();
    for (jint i = 0; i < n_ - 1; i++) {
      [hb addWithOrgScilabForgeJlatexmathBox:b];
      [hb addWithOrgScilabForgeJlatexmathBox:sep];
    }
    if (n_ > 0) {
      [hb addWithOrgScilabForgeJlatexmathBox:b];
    }
    return hb;
  }
  return new_OrgScilabForgeJlatexmathStrutBox_initWithFloat_withFloat_withFloat_withFloat_(0, 0, 0, 0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "VlineAtom", NULL, 0x1, NULL, NULL },
    { "setHeightWithFloat:", "setHeight", "V", 0x1, NULL, NULL },
    { "setShiftWithFloat:", "setShift", "V", 0x1, NULL, NULL },
    { "getWidthWithOrgScilabForgeJlatexmathTeXEnvironment:", "getWidth", "F", 0x1, NULL, NULL },
    { "createBoxWithOrgScilabForgeJlatexmathTeXEnvironment:", "createBox", "Lorg.scilab.forge.jlatexmath.Box;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "height_", NULL, 0x2, "F", NULL, NULL,  },
    { "shift_", NULL, 0x2, "F", NULL, NULL,  },
    { "n_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathVlineAtom = { 2, "VlineAtom", "org.scilab.forge.jlatexmath", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathVlineAtom;
}

@end

void OrgScilabForgeJlatexmathVlineAtom_initWithInt_(OrgScilabForgeJlatexmathVlineAtom *self, jint n) {
  (void) OrgScilabForgeJlatexmathAtom_init(self);
  self->n_ = n;
}

OrgScilabForgeJlatexmathVlineAtom *new_OrgScilabForgeJlatexmathVlineAtom_initWithInt_(jint n) {
  OrgScilabForgeJlatexmathVlineAtom *self = [OrgScilabForgeJlatexmathVlineAtom alloc];
  OrgScilabForgeJlatexmathVlineAtom_initWithInt_(self, n);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathVlineAtom)
