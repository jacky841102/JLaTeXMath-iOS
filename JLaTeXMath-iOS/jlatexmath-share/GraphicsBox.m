//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/GraphicsBox.java
//


#include "Box.h"
#include "Graphics2DInterface.h"
#include "GraphicsBox.h"
#include "Image.h"
#include "J2ObjC_source.h"
#include "RenderingHints.h"

@interface OrgScilabForgeJlatexmathGraphicsBox () {
 @public
  id<OrgScilabForgeJlatexmathPlatformGraphicsImage> image_;
  jfloat scl_;
  jint interp_;
}

@end

J2OBJC_FIELD_SETTER(OrgScilabForgeJlatexmathGraphicsBox, image_, id<OrgScilabForgeJlatexmathPlatformGraphicsImage>)

@implementation OrgScilabForgeJlatexmathGraphicsBox

- (instancetype)initWithOrgScilabForgeJlatexmathPlatformGraphicsImage:(id<OrgScilabForgeJlatexmathPlatformGraphicsImage>)image
                                                            withFloat:(jfloat)width
                                                            withFloat:(jfloat)height
                                                            withFloat:(jfloat)size
                                                              withInt:(jint)interpolation {
  OrgScilabForgeJlatexmathGraphicsBox_initWithOrgScilabForgeJlatexmathPlatformGraphicsImage_withFloat_withFloat_withFloat_withInt_(self, image, width, height, size, interpolation);
  return self;
}

- (void)drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:(id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>)g2
                                                                  withFloat:(jfloat)x
                                                                  withFloat:(jfloat)y {
  [((id<OrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface>) nil_chk(g2)) saveTransformation];
  jint oldKey = -1;
  if (interp_ != -1) {
    oldKey = [g2 getRenderingHintWithInt:OrgScilabForgeJlatexmathPlatformGraphicsRenderingHints_KEY_INTERPOLATION];
    [g2 setRenderingHintWithInt:OrgScilabForgeJlatexmathPlatformGraphicsRenderingHints_KEY_INTERPOLATION withInt:interp_];
  }
  [g2 translateWithDouble:x withDouble:y - height_];
  [g2 scale__WithDouble:scl_ withDouble:scl_];
  [g2 drawImageWithOrgScilabForgeJlatexmathPlatformGraphicsImage:image_ withInt:0 withInt:0];
  [g2 restoreTransformation];
  if (oldKey != -1) {
    [g2 setRenderingHintWithInt:OrgScilabForgeJlatexmathPlatformGraphicsRenderingHints_KEY_INTERPOLATION withInt:oldKey];
  }
}

- (jint)getLastFontId {
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgScilabForgeJlatexmathPlatformGraphicsImage:withFloat:withFloat:withFloat:withInt:", "GraphicsBox", NULL, 0x1, NULL, NULL },
    { "drawWithOrgScilabForgeJlatexmathPlatformGraphicsGraphics2DInterface:withFloat:withFloat:", "draw", "V", 0x1, NULL, NULL },
    { "getLastFontId", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BILINEAR_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathGraphicsBox_BILINEAR },
    { "NEAREST_NEIGHBOR_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathGraphicsBox_NEAREST_NEIGHBOR },
    { "BICUBIC_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgScilabForgeJlatexmathGraphicsBox_BICUBIC },
    { "image_", NULL, 0x2, "Lorg.scilab.forge.jlatexmath.platform.graphics.Image;", NULL, NULL,  },
    { "scl_", NULL, 0x2, "F", NULL, NULL,  },
    { "interp_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgScilabForgeJlatexmathGraphicsBox = { 2, "GraphicsBox", "org.scilab.forge.jlatexmath", NULL, 0x1, 3, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgScilabForgeJlatexmathGraphicsBox;
}

@end

void OrgScilabForgeJlatexmathGraphicsBox_initWithOrgScilabForgeJlatexmathPlatformGraphicsImage_withFloat_withFloat_withFloat_withInt_(OrgScilabForgeJlatexmathGraphicsBox *self, id<OrgScilabForgeJlatexmathPlatformGraphicsImage> image, jfloat width, jfloat height, jfloat size, jint interpolation) {
  (void) OrgScilabForgeJlatexmathBox_init(self);
  self->image_ = image;
  self->width_ = width;
  self->height_ = height;
  self->scl_ = 1 / size;
  self->depth_ = 0;
  self->shift_ = 0;
  switch (interpolation) {
    case OrgScilabForgeJlatexmathGraphicsBox_BILINEAR:
    self->interp_ = OrgScilabForgeJlatexmathPlatformGraphicsRenderingHints_VALUE_INTERPOLATION_BILINEAR;
    break;
    case OrgScilabForgeJlatexmathGraphicsBox_NEAREST_NEIGHBOR:
    self->interp_ = OrgScilabForgeJlatexmathPlatformGraphicsRenderingHints_VALUE_INTERPOLATION_NEAREST_NEIGHBOR;
    break;
    case OrgScilabForgeJlatexmathGraphicsBox_BICUBIC:
    self->interp_ = OrgScilabForgeJlatexmathPlatformGraphicsRenderingHints_VALUE_INTERPOLATION_BICUBIC;
    break;
    default:
    self->interp_ = -1;
  }
}

OrgScilabForgeJlatexmathGraphicsBox *new_OrgScilabForgeJlatexmathGraphicsBox_initWithOrgScilabForgeJlatexmathPlatformGraphicsImage_withFloat_withFloat_withFloat_withInt_(id<OrgScilabForgeJlatexmathPlatformGraphicsImage> image, jfloat width, jfloat height, jfloat size, jint interpolation) {
  OrgScilabForgeJlatexmathGraphicsBox *self = [OrgScilabForgeJlatexmathGraphicsBox alloc];
  OrgScilabForgeJlatexmathGraphicsBox_initWithOrgScilabForgeJlatexmathPlatformGraphicsImage_withFloat_withFloat_withFloat_withInt_(self, image, width, height, size, interpolation);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgScilabForgeJlatexmathGraphicsBox)
