//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/JLaTeXMath-iOS/JLaTeXMath-iOS/javasource/org/scilab/forge/jlatexmath/parser/ElementI.java
//


#include "J2ObjC_source.h"
#include "org/scilab/forge/jlatexmath/parser/ElementI.h"
#include "org/scilab/forge/jlatexmath/parser/NamedNodeMapI.h"
#include "org/scilab/forge/jlatexmath/parser/NodeI.h"
#include "org/scilab/forge/jlatexmath/parser/NodeListI.h"
#include "org/scilab/forge/jlatexmath/platform/parser/NamedNodeMap.h"
#include "org/scilab/forge/jlatexmath/platform/parser/NodeList.h"
#include "org/w3c/dom/Element.h"
#include "org/w3c/dom/NamedNodeMap.h"
#include "org/w3c/dom/NodeList.h"

@interface ElementI () {
 @public
  id<OrgW3cDomElement> impl_ElementI_;
}

@end

J2OBJC_FIELD_SETTER(ElementI, impl_ElementI_, id<OrgW3cDomElement>)

@implementation ElementI

- (instancetype)initWithOrgW3cDomElement:(id<OrgW3cDomElement>)impl {
  ElementI_initWithOrgW3cDomElement_(self, impl);
  return self;
}

- (id<OrgScilabForgeJlatexmathPlatformParserNodeList>)getElementsByTagNameWithNSString:(NSString *)name {
  return [new_NodeListI_initWithOrgW3cDomNodeList_([((id<OrgW3cDomElement>) nil_chk(impl_ElementI_)) getElementsByTagNameWithNSString:name]) autorelease];
}

- (NSString *)getAttributeWithNSString:(NSString *)name {
  return [((id<OrgW3cDomElement>) nil_chk(impl_ElementI_)) getAttributeWithNSString:name];
}

- (NSString *)getTagName {
  return [((id<OrgW3cDomElement>) nil_chk(impl_ElementI_)) getTagName];
}

- (id<OrgScilabForgeJlatexmathPlatformParserNodeList>)getChildNodes {
  return [new_NodeListI_initWithOrgW3cDomNodeList_([((id<OrgW3cDomElement>) nil_chk(impl_ElementI_)) getChildNodes]) autorelease];
}

- (id<OrgScilabForgeJlatexmathPlatformParserNamedNodeMap>)getAttributes {
  return [new_NamedNodeMapI_initWithOrgW3cDomNamedNodeMap_([((id<OrgW3cDomElement>) nil_chk(impl_ElementI_)) getAttributes]) autorelease];
}

- (jboolean)isNull {
  return impl_ElementI_ == nil;
}

- (void)dealloc {
  RELEASE_(impl_ElementI_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgW3cDomElement:", "ElementI", NULL, 0x1, NULL, NULL },
    { "getElementsByTagNameWithNSString:", "getElementsByTagName", "Lorg.scilab.forge.jlatexmath.platform.parser.NodeList;", 0x1, NULL, NULL },
    { "getAttributeWithNSString:", "getAttribute", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTagName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getChildNodes", NULL, "Lorg.scilab.forge.jlatexmath.platform.parser.NodeList;", 0x1, NULL, NULL },
    { "getAttributes", NULL, "Lorg.scilab.forge.jlatexmath.platform.parser.NamedNodeMap;", 0x1, NULL, NULL },
    { "isNull", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "impl_ElementI_", "impl", 0x2, "Lorg.w3c.dom.Element;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ElementI = { 2, "ElementI", "org.scilab.forge.jlatexmath.parser", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ElementI;
}

@end

void ElementI_initWithOrgW3cDomElement_(ElementI *self, id<OrgW3cDomElement> impl) {
  NodeI_initWithOrgW3cDomNode_(self, impl);
  ElementI_set_impl_ElementI_(self, impl);
}

ElementI *new_ElementI_initWithOrgW3cDomElement_(id<OrgW3cDomElement> impl) {
  ElementI *self = [ElementI alloc];
  ElementI_initWithOrgW3cDomElement_(self, impl);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ElementI)
