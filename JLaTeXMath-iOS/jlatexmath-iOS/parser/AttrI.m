//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/scilab/forge/jlatexmath/parser/AttrI.java
//


#include "J2ObjC_source.h"
#include "AttrI.h"
#include "NodeI.h"
#include "org/w3c/dom/Attr.h"

@implementation AttrI

- (instancetype)initWithOrgW3cDomAttr:(id<OrgW3cDomAttr>)impl {
  AttrI_initWithOrgW3cDomAttr_(self, impl);
  return self;
}

- (NSString *)getName {
  return [((id<OrgW3cDomAttr>) nil_chk(impl_AttrI_)) getName];
}

- (jboolean)isSpecified {
  return [((id<OrgW3cDomAttr>) nil_chk(impl_AttrI_)) getSpecified];
}

- (NSString *)getValue {
  return [((id<OrgW3cDomAttr>) nil_chk(impl_AttrI_)) getValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgW3cDomAttr:", "AttrI", NULL, 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isSpecified", NULL, "Z", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "impl_AttrI_", "impl", 0x1, "Lorg.w3c.dom.Attr;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _AttrI = { 2, "AttrI", "org.scilab.forge.jlatexmath.parser", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AttrI;
}

@end

void AttrI_initWithOrgW3cDomAttr_(AttrI *self, id<OrgW3cDomAttr> impl) {
  (void) NodeI_initWithOrgW3cDomNode_(self, impl);
  self->impl_AttrI_ = impl;
}

AttrI *new_AttrI_initWithOrgW3cDomAttr_(id<OrgW3cDomAttr> impl) {
  AttrI *self = [AttrI alloc];
  AttrI_initWithOrgW3cDomAttr_(self, impl);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AttrI)
